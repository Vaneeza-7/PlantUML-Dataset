[
    {
        "input": "Design a usecase diagram for it. Functional requirements for Webmed Healthcare System:\n\n1. The system must allow patients and caregivers to register on the platform.\n2. The system must provide a secure login feature for accessing healthcare services.\n3. The system must offer a feature for users to explore different healthcare facilities and services.\n4. The system must include a finance module focused on purchasing insurance.\n5. The system must display comprehensive information about diseases and their symptoms under a Health A-Z feature.\n6. The system must include resources such as a symptom checker, health calculator, and a function to find a doctor based on location.\n7. The system must provide an online medicine delivery option under the drugs and supplements section.\n8. The system must offer a payment module for reimbursing providers for services delivered.\n9. The system must collect user feedback for quality improvement purposes.\n10. The system must offer a logout functionality for users to securely exit the platform.\n11. The system must include a bulletin for news, health awareness, and information on experts and counselling programs.\n12. The system must provide access to health insurance guides and ambulance services under the resources section.",
        "output": "@startuml\nleft to right direction\n\nactor ServiceProvider\nactor User\n\nrectangle System {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Use Facilities\" as UC3\n    usecase \"Access Finance\" as UC4\n    usecase \"Access Health A-Z\" as UC5\n    usecase \"Use Resources\" as UC6\n    usecase \"Do Payment\" as UC7\n    usecase \"Give Feedback\" as UC8\n    usecase \"Logout\" as UC9\n    usecase \"Access News And Experts\" as UC10\n    usecase \"Get Drugs And Supplements\" as UC11\n}\n\nServiceProvider --> UC6\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC9\nUser --> UC7\nUser --> UC6\nUser --> UC10\nUser --> UC11\nUser --> UC5\nUser --> UC4\n\nUC7 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Online Examination System:\n\n1. The system must allow students to register and create accounts.\n2. The system must enable teachers to create exams and set questions.\n3. The system must allow students to take exams online.\n4. The system must generate results for the exams taken by students.\n5. The system must provide exam analysis, including performance review and insights.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Teacher\n\nrectangle Online_Examination_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Exam\" as UC2\n    usecase \"Take Exam\" as UC3\n    usecase \"Generate Result\" as UC4\n    usecase \"Analyze Exam\" as UC5\n}\n\nStudent --> UC1\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\n\nTeacher --> UC2\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Online Voting System:\n\n1. The system must allow citizens to register as voters.\n2. The system must enable candidates to register for elections.\n3. The system must allow registered voters to cast their votes online.\n4. The system must generate results for the elections based on the votes cast.\n5. The system must provide analysis of the votes, including voter turnout and demographics.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor Candidate\n\nrectangle Online_Voting_System {\n    usecase \"Register as Voter\" as UC1\n    usecase \"Register as Candidate\" as UC2\n    usecase \"Cast Vote\" as UC3\n    usecase \"Generate Result\" as UC4\n    usecase \"Analyze Votes\" as UC5\n}\n\nCitizen --> UC1\nCitizen --> UC3\nCitizen --> UC4\nCitizen --> UC5\n\nCandidate --> UC2\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the E-Ticketing System for Buses:\n\n1. The system must allow customers to register and create an account for booking tickets.\n2. The system must enable customers to make bus reservations and purchase tickets online.\n3. The system must provide customers with the ability to cancel their reservations if needed.\n4. The system must facilitate secure payments, allowing customers to pay for tickets online through bank transactions.\n5. The system must allow customers to check the status of their reservations and buses online.\n6. The system must allow customers to edit their profiles and manage their accounts.\n7. The system must allow the admin to manage user accounts, including deleting accounts.\n8. The system must enable managers to update and manage routes, bus schedules, vehicle records, and payment information.\n9. The system must generate reports related to bus reservations, payments, and cancellations for management use.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Manager\n\nrectangle Bus_E-Ticketing_System {\n    usecase \"Registration\" as UC1\n    usecase \"Make Reservation\" as UC2\n    usecase \"Cancellation\" as UC3\n    usecase \"Do Payment\" as UC4\n    usecase \"Check Status\" as UC5\n    usecase \"Edit Profile\" as UC6\n    usecase \"Delete Account\" as UC7\n    usecase \"Manage Transactions\" as UC8\n    usecase \"Update Routes\" as UC9\n    usecase \"Update Bus Schedules\" as UC10\n    usecase \"Update Vehicle Records\" as UC11\n    usecase \"Update User Credentials\" as UC12\n    usecase \"Manage Account\" as UC13\n    usecase \"Generate Reports\" as UC14\n}\n\nCustomer --> UC1\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC13\nCustomer --> UC2\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC14\n\nactor Admin <<secondary>>\n\nAdmin --> UC10\nAdmin --> UC12\nAdmin --> UC7\n\nUC4 --> UC3 : <<extend>>\nUC13 --> UC7 : <<extend>>\nUC13 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Weather Monitoring System:\n\n1. The system must allow users to check the current weather status, including temperature, humidity, rainfall, pressure, and dew point.\n2. The system must provide live updates of weather data for real-time viewing.\n3. The system must alert users with tips and warnings during certain weather conditions.\n4. The system must display weather data in graphical form to allow easier analysis of temperature variations.\n5. The system must predict the weather for the next few days based on current and past data.\n6. The system must provide a weekly analysis, including average, highest, and lowest temperatures of the week.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Weather_Monitoring_System {\n    usecase \"Check Weather Status\" as UC1\n    usecase \"Live Update\" as UC2\n    usecase \"Get Alerts\" as UC3\n    usecase \"Generate Graphical Representation\" as UC4\n    usecase \"Predict Future Weather\" as UC5\n    usecase \"Weekly Analysis\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\n\nUC1 --> UC2 : <<extend>>\nUC4 --> UC5 : <<extend>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Online Shopping System:\n\n1. The system must allow users to register and create an account.\n2. The system must provide a product catalog displaying available products for purchase.\n3. The system must allow users to add products to their shopping cart.\n4. The system must include a payment gateway for users to make payments for their purchases.\n5. The system must display the user's order history, showing past orders.\n6. The system must offer customer support functionality for users to ask queries or report issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Shopping_System {\n    usecase \"Register\" as UC1\n    usecase \"View Products\" as UC2\n    usecase \"Add To Cart\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"View Order History\" as UC5\n    usecase \"Contact Support\" as UC6\n    usecase \"Provide Support\" as UC7\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nSupport --> UC7\nUC6 --> UC7 : <<include>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Library Management System:\n\n1. The system must allow users to register and create an account.\n2. The system must provide a book catalog displaying all available books.\n3. The system must allow users to borrow books from the library.\n4. The system must allow users to return borrowed books.\n5. The system must allow users to renew borrowed books.\n6. The system must calculate late fees for books returned after the due date.",
        "output": "@startuml\nleft to right direction\n\nactor Librarian\nactor User\n\nrectangle Library_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"View Books\" as UC2\n    usecase \"Borrow Book\" as UC3\n    usecase \"Return Book\" as UC4\n    usecase \"Renew Book\" as UC5\n    usecase \"Calculate Late Fee\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\n\nLibrarian -right-> UC6\n\nUC5 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the e-Province system:\n\n1. The system must allow citizens to register for an account.\n2. The system must provide a login module where users can log in using their unique application number with an approved status.\n3. The system must allow users to apply for government certificates like birth/death certificates, income and caste certificates, etc.\n4. The system must provide an admin module that can issue certificates to citizens.\n5. The system must manage user profiles, allowing users to update their personal information.\n6. The system must allow admins to view user profiles.\n7. The system must allow admins to deactivate users.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor Admin\n\nrectangle E-Province {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Apply for Certificate\" as UC3\n    usecase \"Issue Certificate\" as UC4\n    usecase \"Manage User Profile\" as UC5\n    usecase \"View User Profile\" as UC6\n    usecase \"Deactivate User\" as UC7\n}\n\nCitizen --> UC1\nCitizen --> UC2\nCitizen --> UC3\nCitizen --> UC5\n\nAdmin --> UC4\nAdmin --> UC6\nAdmin --> UC5\n\nUC5 --> UC7 : <<extend>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Online Banking System:\n\n1. The system must allow customers to register by creating an account.\n2. The system must provide account management functionality for users to view and manage their accounts.\n3. The system must enable customers to transfer funds between their accounts.\n4. The system must allow customers to pay bills online.\n5. The system must display a transaction history for users to review past transactions.\n6. The system must offer customer support functionality for users to contact customer support for queries or issues.\n7. Customer support should provide solutions to queries raised by customers through an included support system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Banking_System {\n    usecase \"Register\" as UC1\n    usecase \"Manage Account\" as UC2\n    usecase \"Transfer Funds\" as UC3\n    usecase \"Pay Bills\" as UC4\n    usecase \"View Transaction History\" as UC5\n    usecase \"Contact Support\" as UC6\n    usecase \"Provide Support\" as UC7\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nSupport --> UC7\nUC6 --> UC7 : <<include>>\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Functional requirements for the DigiDocLocker:\n\n1. The system must allow citizens to register and log in to the platform.\n2. The system must allow users to upload documents in various file formats.\n3. The system must display the complete user profile based on the information stored in the database.\n4. The system must allow users to request documents from the respective issuers.\n5. The system must display certificate issuers’ names and the number of documents issued by the issuers to the user.\n6. The system must display the requesters’ names and the number of documents requested by them.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor \"Requester (Eg: UPSC)\" as Requester\nactor \"Issuer (Eg: Income Tax Department)\" as Issuer\n\nrectangle DigiDocLocker {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Request Document\" as UC3\n    usecase \"Upload Document\" as UC4\n    usecase \"View Profile\" as UC5\n    usecase \"Issue Document\" as UC6\n}\n\nCitizen --> UC1\nCitizen --> UC2\nCitizen --> UC4\nCitizen --> UC5\n\nRequester --> UC3\nRequester --> UC2\nIssuer --> UC2\nIssuer --> UC6\n@enduml"
    },
    {
        "input": "Functional requirements for the E-Retail system:\n\n1. The system must allow sellers and customers to register and log in to the platform.\n2. The system must allow sellers to list products for sale.\n3. The system must display all available products for customers to view.\n4. The system must allow customers to buy products and make payments.\n5. The system must enable customers to rate the products they have purchased.\n6. The system must allow customers to report sellers for any violations or issues with the product or delivery.\n7. The system must display the contact information and rating of the seller to the customer before purchasing a product.\n \n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Seller\nactor Customer\n\nrectangle E-Retail {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"List Products\" as UC3\n    usecase \"View Products\" as UC4\n    usecase \"Buy Products\" as UC5\n    usecase \"Rate Product\" as UC6\n    usecase \"Report Seller\" as UC7\n    usecase \"View Seller Information\" as UC8\n    usecase \"Make Payment\" as UC9\n}\n\nSeller --> UC1\nSeller --> UC2\nSeller --> UC3\nSeller --> UC4\n\nCustomer --> UC2\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\nCustomer --> UC8\n\nUC5 --> UC6 : <<extend>>\nUC5 --> UC9 : <<include>>\n@enduml"
    },

    {
        "input": "Functional requirements for the Online Food Ordering System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a restaurant to order food from.\n3. The system must provide a menu for users to browse food items from the selected restaurant.\n4. The system must allow users to place an order for food.\n5. The system must facilitate payment through a secure payment gateway.\n6. The system must allow users to track the status of their orders.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Food_Ordering_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Restaurant\" as UC2\n    usecase \"Browse Menu\" as UC3\n    usecase \"Place Order\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"Track Order\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC4 --> UC5 : <<include>>\n@enduml"
    },
    {
        "input": "Functional requirements for the Online Movie Ticket Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a movie for which they want to book tickets.\n3. The system must allow users to select seats for the selected movie.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the ticket booking after payment is made.\n6. The system must allow users to cancel their ticket bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Movie_Ticket_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Movie\" as UC2\n    usecase \"Select Seats\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Ticket\" as UC5\n    usecase \"Cancel Ticket\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Functional requirements for the Online Hotel Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a hotel for which they want to book rooms.\n3. The system must allow users to select rooms in the selected hotel.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the booking of rooms after payment is made.\n6. The system must allow users to cancel their room bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Hotel_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Hotel\" as UC2\n    usecase \"Select Room\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Booking\" as UC5\n    usecase \"Cancel Booking\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Give me use case diagram for this system. Functional requirements for the Online Flight Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a flight for which they want to book tickets.\n3. The system must allow users to select seats for the selected flight.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the booking of tickets after payment is made.\n6. The system must allow users to cancel their ticket bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Flight_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Flight\" as UC2\n    usecase \"Select Seats\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Ticket\" as UC5\n    usecase \"Cancel Ticket\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Give me use case diagram for this system. Functional requirements for the Online Event Management System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to create events and manage event details.\n3. The system must allow users to promote events to attract attendees.\n4. The system must allow users to book tickets for events.\n5. The system must facilitate payment through a secure payment gateway for tickets.\n6. The system must allow users to track the status of events and ticket bookings.\n7. The system must allow users to contact customer support for any queries or issues.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor \"Customer Support\" as Support\n\nrectangle Online_Event_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Event\" as UC2\n    usecase \"Promote Event\" as UC3\n    usecase \"Book Ticket\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"Track Event\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC4 --> UC5 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system.Functional requirements for the Law Enforcement System:\n\n1. The system must allow lawyers to register and log in to the platform.\n2. The system must allow lawyers to view case details and logs.\n3. The system must allow lawyers to add and update case details.\n4. The system must support both criminal and civil case categories.\n5. The system must provide online filing options for cases.\n6. The system must allow lawyers to download model forms for cases.\n7. The system must provide quick references for common legal cases.\n8. The system must offer e-books and other legal resources for reference.\n9. The system must allow lawyers to view blogs, news updates, and submit feedback.",
        "output": "@startuml\nleft to right direction\n\nactor Lawyer\nactor Admin\n\nrectangle Law_Enforcement_System {\n    usecase \"Register\" as UC1\n    usecase \"View Case details and logs\" as UC2\n    usecase \"Add case\" as UC3\n    usecase \"Update details\" as UC4\n    usecase \"Criminal\" as UC5\n    usecase \"Civil\" as UC6\n    usecase \"Filing online\" as UC7\n    usecase \"Download Model Forms\" as UC8\n    usecase \"Display Links\" as UC9\n    usecase \"Display Forms\" as UC10\n    usecase \"Quick references\" as UC11\n    usecase \"Books\" as UC12\n    usecase \"Add feedback\" as UC13\n    usecase \"View Blogs and news updates\" as UC14\n    usecase \"Download\" as UC15\n    usecase \"Upload Documents\" as UC16\n    usecase \"Update Logs\" as UC17\n    usecase \"Update Calendar\" as UC18\n    usecase \"Set reminders\" as UC19\n}\n\nLawyer --> UC1\nLawyer --> UC2\nLawyer --> UC3\nLawyer --> UC7\nLawyer --> UC8\nLawyer --> UC13\nLawyer --> UC14\n\nUC3 --> UC4 : <<include>>\nUC4 --> UC5 : <<extend>>\nUC4 --> UC6 : <<extend>>\nUC7 --> UC9 : <<extend>>\nUC8 --> UC10 : <<include>>\nUC8 --> UC11 : <<extend>>\nUC11 --> UC12 : <<extend>>\n\nAdmin --> UC16\nAdmin --> UC17\nAdmin --> UC18\nAdmin --> UC19\n\nUC16 --> UC15 : <<extend>>\nUC19 --> UC18 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'My Helper' application:\n\n1. The system must allow users to send an SMS to perform remote operations on their phones.\n2. The system must allow users to track the location of their phone via an SMS.\n3. The system must allow users to lock their phones remotely via an SMS.\n4. The system must allow users to change the sound profile (silent to normal) of their phone via an SMS.",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle My_Helper {\n    usecase \"Send SMS\" as UC1\n    usecase \"Track Phone\" as UC2\n    usecase \"Lock Phone\" as UC3\n    usecase \"Change Sound Profile\" as UC4\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\n\nUC1 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for COVID-19 Management System:\n\n1. The system must allow healthcare organizations to track COVID-19 patients.\n2. The system must enable healthcare organizations to treat COVID-19 patients via virtual care.\n3. The system must provide the government with tools to monitor the spread of the virus.\n4. The system must allow healthcare organizations and the government to assess the risk profiles of patients.\n5. The system must raise awareness about COVID-19 among the general public.\n6. The system must allow patients to connect with virtual care services for consultation.\n7. The system must provide patients with the ability to buy medicines online.",
        "output": "@startuml\nleft to right direction\n\nactor Healthcare_Organization\nactor Government\nactor Patient\n\nrectangle COVID-19_Management_System {\n    usecase \"Track COVID-19 Patients\" as UC1\n    usecase \"Treat COVID-19 Patients\" as UC2\n    usecase \"Monitor Virus Spread\" as UC3\n    usecase \"Assess Patient Risk\" as UC4\n    usecase \"Provide Awareness\" as UC5\n    usecase \"Connect with Virtual Care\" as UC6\n    usecase \"Buy Medicines\" as UC7\n}\n\nHealthcare_Organization --> UC1\nHealthcare_Organization --> UC2\nHealthcare_Organization --> UC4\nHealthcare_Organization --> UC6\n\nGovernment --> UC3\nGovernment --> UC4\nGovernment --> UC5\n\nPatient --> UC1\nPatient --> UC7\nPatient --> UC6\n\nUC4 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Car Care' application:\n\n1. The system must allow car owners to register and log in.\n2. The system must allow car owners to enter car information.\n3. The system must allow service centers to enter the estimated expiry dates of car parts.\n4. The system must notify car owners and service centers about the expiry dates of car parts.\n5. The system must allow car owners to accept service requests and select the parts for service.\n6. The system must enable service centers to pick up the car, examine it, prepare a list of damaged parts, and perform the selected services.\n7. The system must allow the service center to update the car information after servicing.\n8. The system must provide an online payment option for car owners to make payments for the service.",
        "output": "@startuml\nleft to right direction\n\nactor Car_Owner\nactor Service_Centre\n\nrectangle Car_Care {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Enter Car Information\" as UC3\n    usecase \"Enter Expiry Dates\" as UC4\n    usecase \"Notify Expiry\" as UC5\n    usecase \"Accept Service Request\" as UC6\n    usecase \"Pick Up Car\" as UC7\n    usecase \"Examine Car\" as UC8\n    usecase \"Prepare List\" as UC9\n    usecase \"Select Damaged Parts\" as UC10\n    usecase \"Service Parts\" as UC11\n    usecase \"Update Information\" as UC12\n    usecase \"Make Payment\" as UC13\n}\n\nCar_Owner --> UC1\nCar_Owner --> UC2\nCar_Owner --> UC3\nCar_Owner --> UC5\nCar_Owner --> UC6\nCar_Owner --> UC10\nCar_Owner --> UC13\n\nService_Centre --> UC2\nService_Centre --> UC4\nService_Centre --> UC7\nService_Centre --> UC8\nService_Centre --> UC9\nService_Centre --> UC11\nService_Centre --> UC12\n\nUC6 --> UC7 : <<extend>>\nUC9 --> UC10 : <<include>>\nUC11 --> UC12 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'E-Ration Shop':\n\n1. The system must allow ration cardholders to register, log in, and order grocery items online.\n2. The system must display shop details, stock availability, and shop advertisements to ration cardholders.\n3. The system must notify ration cardholders about stock availability regularly.\n4. The system must provide product delivery functionality for ration cardholders.\n5. The system must provide a complaint forum for ration cardholders to submit grievances.\n6. The system must allow retailers to manage stock, advertise their shop, and deliver products.\n7. The system must support payments through PayTM, COD, and other payment gateways.\n8. The system must have admin and moderator functionalities, such as managing users, monitoring system usage, approving retailer applications, generating reports, and managing content.\n9. The system must use Aadhaar-based authentication and OTP verification for secure access.",
        "output": "@startuml\nleft to right direction\n\nactor \"Ration_Cardholder (Customer)\" as Ration_Cardholder\nactor \"Retailer (Shopkeeper)\" as Retailer\nactor Admin\nactor Moderator\n\nrectangle E-Ration_Shop {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Order Grocery Items\" as UC3\n    usecase \"View Shop Details\" as UC4\n    usecase \"View Stock\" as UC5\n    usecase \"Manage Stock\" as UC6\n    usecase \"Advertise Shop\" as UC7\n    usecase \"Notify Stock Availability\" as UC8\n    usecase \"Deliver Products\" as UC9\n    usecase \"Complaint Forum\" as UC10\n    usecase \"Make Payment\" as UC11\n    usecase \"Manage Users\" as UC12\n    usecase \"Monitor System Usage\" as UC13\n    usecase \"Approve Retailer Applications\" as UC14\n    usecase \"Generate Reports\" as UC15\n    usecase \"Manage Content\" as UC16\n    usecase \"Review Complaints\" as UC17\n    usecase \"Authentication with Aadhaar and OTP\" as UC18\n}\n\nRation_Cardholder --> UC1\nRation_Cardholder --> UC2\nRation_Cardholder --> UC3\nRation_Cardholder --> UC4\nRation_Cardholder --> UC5\nRation_Cardholder --> UC10\nRation_Cardholder --> UC11\n\nRetailer --> UC4\nRetailer --> UC6\nRetailer --> UC7\nRetailer --> UC9\n\nAdmin --> UC12\nAdmin --> UC13\nAdmin --> UC14\nAdmin --> UC15\nAdmin --> UC18\n\nModerator --> UC16\nModerator --> UC17\n\nUC3 --> UC9 : <<extend>>\nUC5 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Textile Management System':\n\n1. The system must allow customers to register and sample available products.\n2. The system must allow customers and manufacturers to check stock availability.\n3. The system must support the purchasing and processing of raw materials by the manufacturer.\n4. The system must enable the production of garments by the manufacturer.\n5. The system must allow for product checking, clearance, and shipment of finished garments.\n6. The system must generate bills for customers and reports for manufacturers.\n7. The system must allow customers to order garments.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Manufacturer\n\nrectangle Textile_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Sample Products\" as UC2\n    usecase \"Check Stock\" as UC3\n    usecase \"Purchase Raw Materials\" as UC4\n    usecase \"Process Raw Materials\" as UC5\n    usecase \"Produce Garments\" as UC6\n    usecase \"Check Products\" as UC7\n    usecase \"Clearance of Products\" as UC8\n    usecase \"Ship Products\" as UC9\n    usecase \"Generate Bill\" as UC10\n    usecase \"Generate Reports\" as UC11\n    usecase \"Order Garments\" as UC12\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC12\n\nManufacturer --> UC3\nManufacturer --> UC4\nManufacturer --> UC5\nManufacturer --> UC6\nManufacturer --> UC7\nManufacturer --> UC8\nManufacturer --> UC9\nManufacturer --> UC10\nManufacturer --> UC11\n\nUC7 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Hotel Reservation System':\n\n1. The system must allow customers to register, log in, search available rooms, book rooms, and make payments.\n2. The system must allow customers to view their reservations and contact customer support.\n3. The system must allow hotel managers to add or update room details and generate reports.\n4. The system must provide customer support to assist users with their queries and issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor HotelManager\nactor \"Customer Support\" as Support\n\nrectangle Hotel_Reservation_System {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Search Rooms\" as UC3\n    usecase \"Book Room\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"View Reservation\" as UC6\n    usecase \"Manage Room Details\" as UC7\n    usecase \"Generate Report\" as UC8\n    usecase \"Contact Support\" as UC9\n    usecase \"Provide Support\" as UC10\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC9\n\nHotelManager --> UC7\nHotelManager --> UC8\n\nSupport --> UC10\nUC9 --> UC10 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Learning Management System':\n\n1. The system must allow students to register, enroll in courses, submit assignments, and view their grades.\n2. The system must allow instructors to create courses, manage student assignments, and grade submissions.\n3. The system must facilitate collaboration through discussion forums for students and instructors.\n4. The system must provide a feedback mechanism for students to share their learning experiences with instructors.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Instructor\n\nrectangle Learning_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Enroll in Course\" as UC2\n    usecase \"Submit Assignment\" as UC3\n    usecase \"View Grades\" as UC4\n    usecase \"Create Course\" as UC5\n    usecase \"Manage Assignments\" as UC6\n    usecase \"Grade Submissions\" as UC7\n    usecase \"Join Discussion Forum\" as UC8\n    usecase \"Provide Feedback\" as UC9\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC8\nStudent --> UC9\n\nInstructor --> UC5\nInstructor --> UC6\nInstructor --> UC7\n@enduml"
    },
    {
        "input": "Functional requirements for 'Inventory Management System':\n\n1. The system must allow store managers to view current inventory levels, reorder products, and manage suppliers.\n2. The system must track deliveries and update inventory levels accordingly.\n3. The system must generate reports on product usage and reorder history. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor StoreManager\nactor Supplier\n\nrectangle Inventory_Management_System {\n    usecase \"View Inventory\" as UC1\n    usecase \"Reorder Product\" as UC2\n    usecase \"Manage Suppliers\" as UC3\n    usecase \"Track Deliveries\" as UC4\n    usecase \"Generate Reports\" as UC5\n}\n\nStoreManager --> UC1\nStoreManager --> UC2\nStoreManager --> UC3\nStoreManager --> UC5\n\nSupplier --> UC4\n@enduml"
    },
    {
        "input": "Functional requirements for 'Gym Management System':\n\n1. The system must allow users to register as members, book sessions, and track their fitness progress.\n2. Trainers must be able to create workout plans, manage their schedules, and monitor client progress.\n3. The system must handle membership payments through an integrated payment gateway. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Trainer\n\nrectangle Gym_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Book Session\" as UC2\n    usecase \"Track Progress\" as UC3\n    usecase \"Create Workout Plan\" as UC4\n    usecase \"Manage Schedule\" as UC5\n    usecase \"Track Client Progress\" as UC6\n    usecase \"Make Payment\" as UC7\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC7\n\nTrainer --> UC4\nTrainer --> UC5\nTrainer --> UC6\n@enduml"
    },
    {
        "input": "Functional requirements for 'Warehouse Management System':\n\n1. The system must track stock levels in real-time and manage shipments and deliveries.\n2. Warehouse managers must be able to manage the entire stock lifecycle, generate reports, and manage employee schedules.\n3. The system must include inventory optimization features to adjust stock based on real-time demand. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor WarehouseManager\nactor Employee\n\nrectangle Warehouse_Management_System {\n    usecase \"Track Stock\" as UC1\n    usecase \"Manage Shipments\" as UC2\n    usecase \"Manage Deliveries\" as UC3\n    usecase \"Manage Stock\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Manage Employee Schedule\" as UC6\n    usecase \"Optimize Inventory\" as UC7\n}\n\nWarehouseManager --> UC1\nWarehouseManager --> UC4\nWarehouseManager --> UC5\nWarehouseManager --> UC6\nWarehouseManager --> UC7\n\nEmployee --> UC2\nEmployee --> UC3\n@enduml"
    },
    {
        "input": "Functional Requirements for Hospital Management System:\n1. The system shall allow patients to book appointments with available doctors.\n2. The system shall enable patients to view their medical records for ongoing treatments.\n3. The system shall allow patients to receive prescriptions electronically after consultations.\n4. The system shall allow doctors to manage patient records efficiently, keeping them up-to-date with relevant information.\n5. The system shall enable doctors to schedule follow-up appointments with patients.\n6. The system shall generate invoices for medical services used by patients through the billing module.\n7. The system shall allow doctors to issue prescriptions electronically, minimizing paperwork.\n Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Doctor\n\nrectangle Hospital_Management_System {\n    usecase \"Book Appointment\" as UC1\n    usecase \"View Medical Records\" as UC2\n    usecase \"Receive Prescription\" as UC3\n    usecase \"Manage Patient Records\" as UC4\n    usecase \"Schedule Appointments\" as UC5\n    usecase \"Prescribe Medications\" as UC6\n    usecase \"Generate Bill\" as UC7\n}\n\nPatient --> UC1\nPatient --> UC2\nPatient --> UC3\nPatient --> UC7\n\nDoctor --> UC4\nDoctor --> UC5\nDoctor --> UC6\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Banking System:\n1. The system shall allow customers to deposit money into their accounts.\n2. The system shall allow customers to withdraw money from their accounts.\n3. The system shall allow customers to transfer funds between accounts.\n4. The system shall allow customers to check their account balances.\n5. The system shall allow customers to apply for loans.\n6. The system shall provide customers with access to their transaction history.\n7. The system shall allow bank employees to manage customer accounts, including details and status.\n8. The system shall allow bank employees to approve or reject loan applications submitted by customers.\n9. The system shall allow bank employees to generate reports on banking operations.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor BankEmployee\n\nrectangle Banking_System {\n    usecase \"Deposit Money\" as UC1\n    usecase \"Withdraw Money\" as UC2\n    usecase \"Transfer Funds\" as UC3\n    usecase \"Check Balance\" as UC4\n    usecase \"Apply for Loan\" as UC5\n    usecase \"View Transaction History\" as UC6\n    usecase \"Manage Accounts\" as UC7\n    usecase \"Approve Loan Applications\" as UC8\n    usecase \"Generate Reports\" as UC9\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nBankEmployee --> UC7\nBankEmployee --> UC8\nBankEmployee --> UC9\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Car Rental System:\n1. The system shall allow customers to search for available cars.\n2. The system shall allow customers to select the desired car for rental.\n3. The system shall allow customers to make a reservation for the selected car.\n4. The system shall allow customers to view their booking history.\n5. The system shall allow customers to cancel their bookings if needed.\n6. The system shall allow car rental agencies to manage their fleet of cars.\n7. The system shall allow car rental agencies to track bookings made by customers.\n8. The system shall allow car rental agencies to generate reports on rental activity.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor CarRentalAgency\n\nrectangle Car_Rental_System {\n    usecase \"Search Cars\" as UC1\n    usecase \"Select Car\" as UC2\n    usecase \"Make Reservation\" as UC3\n    usecase \"View Booking History\" as UC4\n    usecase \"Cancel Booking\" as UC5\n    usecase \"Manage Fleet\" as UC6\n    usecase \"Track Bookings\" as UC7\n    usecase \"Generate Reports\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\n\nCarRentalAgency --> UC6\nCarRentalAgency --> UC7\nCarRentalAgency --> UC8\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Final Year Project (FYP) Management System:\n1. The system shall allow students to submit their project proposals for approval.\n2. The system shall allow students to upload progress reports at various stages of the project.\n3. The system shall allow students to track the evaluation status of their projects.\n4. The system shall allow supervisors to review student submissions and provide detailed feedback.\n5. The system shall allow supervisors to set project deadlines to ensure students stay on track.\n6. The system shall allow supervisors to monitor the progress of each student.\n7. The system shall allow panel members to evaluate projects during key milestones and offer scores.\n8. The system shall allow the FYP committee to assign panel members to projects.\n9. The system shall allow the FYP committee to approve or reject proposals based on academic standards.\n10. The system shall allow the FYP committee to ensure the overall quality of the submitted projects.\n11. The system shall facilitate communication between students, supervisors, and panel members to foster collaboration.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Supervisor\nactor Panel_Member\nactor FYP_Committee\n\nrectangle FYP_Management_System {\n    usecase \"Submit Proposal\" as UC1\n    usecase \"Upload Progress Report\" as UC2\n    usecase \"Track Evaluation Status\" as UC3\n    usecase \"Review Submissions\" as UC4\n    usecase \"Provide Feedback\" as UC5\n    usecase \"Set Project Deadlines\" as UC6\n    usecase \"Monitor Progress\" as UC7\n    usecase \"Evaluate Projects\" as UC8\n    usecase \"Assign Panel Members\" as UC9\n    usecase \"Approve Proposals\" as UC10\n    usecase \"Ensure Academic Standards\" as UC11\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\n\nSupervisor --> UC4\nSupervisor --> UC5\nSupervisor --> UC6\nSupervisor --> UC7\n\nPanel_Member --> UC4\nPanel_Member --> UC8\n\nFYP_Committee --> UC9\nFYP_Committee --> UC10\nFYP_Committee --> UC11\n\nUC4 --> UC5 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for 'Online Auction System':\n1. The system shall allow users to register and create accounts for bidding.\n2. The system shall allow users to browse and search for items available for auction.\n3. The system shall allow users to place bids on items they are interested in.\n4. The system shall notify users of the status of their bids and the auction results.\n5. The system shall allow sellers to list items for auction and set starting prices.\n6. The system shall allow sellers to monitor the progress of their auctions and view bids placed on their items.\n7. The system shall allow sellers to close auctions and finalize transactions with winning bidders.\n8. The system shall provide a secure payment gateway for users to make payments for won items.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Seller\n\nrectangle Online_Auction_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Account\" as UC2\n    usecase \"Browse Items\" as UC3\n    usecase \"Place Bid\" as UC4\n    usecase \"Notify Status\" as UC5\n    usecase \"List Items\" as UC6\n    usecase \"Monitor Auctions\" as UC7\n    usecase \"Close Auction\" as UC8\n    usecase \"Finalize Transaction\" as UC9\n    usecase \"Make Payment\" as UC10\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC10\n\nSeller --> UC6\nSeller --> UC7\nSeller --> UC8\nSeller --> UC9\n@enduml"
    },

    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Volunteer Management System:\n1. The system shall allow volunteers to sign up for events.\n2. The system shall allow volunteers to view assigned tasks.\n3. The system shall track the participation hours of each volunteer.\n4. The system shall allow volunteers to update their availability for events.\n5. The system shall allow coordinators to assign tasks to volunteers.\n6. The system shall allow coordinators to track the participation of volunteers.\n7. The system shall allow event managers to schedule events in advance.\n8. The system shall allow event managers to approve volunteer rosters for events.\n9. The system shall allow event managers to monitor the success and effectiveness of events.\n10. The system shall generate reports on participation and event success for evaluation.",
        "output": "@startuml\nleft to right direction\n\nactor Volunteer\nactor Coordinator\nactor Event_Manager\n\nrectangle Volunteer_Management_System {\n    usecase \"Sign Up for Event\" as UC1\n    usecase \"View Assigned Tasks\" as UC2\n    usecase \"Track Participation Hours\" as UC3\n    usecase \"Update Availability\" as UC4\n    usecase \"Assign Tasks\" as UC5\n    usecase \"Track Volunteer Participation\" as UC6\n    usecase \"Schedule Events\" as UC7\n    usecase \"Approve Volunteer Rosters\" as UC8\n    usecase \"Monitor Event Success\" as UC9\n    usecase \"Generate Reports\" as UC10\n}\n\nVolunteer --> UC1\nVolunteer --> UC2\nVolunteer --> UC3\nVolunteer --> UC4\n\nCoordinator --> UC5\nCoordinator --> UC6\n\nEvent_Manager --> UC7\nEvent_Manager --> UC8\nEvent_Manager --> UC9\nEvent_Manager --> UC10\n\nUC6 --> UC10 : <<include>>\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hiring System at TechHire Solutions:\n1. The system shall allow candidates to submit applications including resumes and cover letters.\n2. The system shall scan resumes for relevant skills, experience, and qualifications.\n3. The system shall automatically shortlist candidates based on the scan results.\n4. The system shall allow recruiters to schedule interviews for shortlisted candidates.\n5. The system shall allow interviewers to provide feedback and ratings after each interview round.\n6. The system shall allow recruiters to select the most qualified candidates based on interview feedback.\n7. The system shall generate offer letters for selected candidates.\n8. The system shall track the overall hiring status across all stages of the recruitment cycle.",
        "output": "@startuml\nleft to right direction\n\nactor Candidate\nactor Recruiter\nactor Interviewer\n\nrectangle Hiring_System_TechHire_Solutions {\n    usecase \"Submit Application\" as UC1\n    usecase \"Scan Resume\" as UC2\n    usecase \"Shortlist Candidates\" as UC3\n    usecase \"Schedule Interviews\" as UC4\n    usecase \"Provide Interview Feedback\" as UC5\n    usecase \"Select Candidates\" as UC6\n    usecase \"Generate Offer Letter\" as UC7\n    usecase \"Track Hiring Status\" as UC8\n}\n\nCandidate --> UC1\n\nRecruiter --> UC2\nRecruiter --> UC3\nRecruiter --> UC4\nRecruiter --> UC6\nRecruiter --> UC7\nRecruiter --> UC8\n\nInterviewer --> UC5\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for GitHub Universe 2023 Management System:\n1. The system shall allow participants to register for the event.\n2. The system shall allow participants to sign up for keynotes and workshops.\n3. The system shall manage sponsor onboarding and interactions.\n4. The system shall track sponsor branding during the event.\n5. The system shall manage the overall event schedule.\n6. The system shall send real-time updates to all users.\n7. The system shall allow participants to submit feedback on the sessions they attend.\n8. The system shall allow speakers to schedule and present technical talks.\n9. The system shall generate reports based on user feedback and event metrics.\n10. The system shall monitor event attendance.\n11. The system shall allow sponsors to submit sponsorship proposals.\n12. The system shall allow sponsors to review their benefits for sponsoring the event.",
        "output": "@startuml\nleft to right direction\n\nactor Participant\nactor Sponsor\nactor Organizer\nactor Speaker\n\nrectangle GitHub_Universe_Management_System {\n    usecase \"Register for Event\" as UC1\n    usecase \"Sign Up for Sessions\" as UC2\n    usecase \"Manage Sponsor Onboarding\" as UC3\n    usecase \"Track Sponsor Branding\" as UC4\n    usecase \"Manage Event Schedule\" as UC5\n    usecase \"Send Real-Time Updates\" as UC6\n    usecase \"Submit Session Feedback\" as UC7\n    usecase \"Give Tech-Talks\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Monitor Attendance\" as UC10\n    usecase \"Submit Sponsorship Proposal\" as UC11\n    usecase \"Review Sponsorship Benefits\" as UC12\n}\n\nParticipant --> UC1\nParticipant --> UC2\nParticipant --> UC7\n\nSponsor --> UC11\nSponsor --> UC4\n\nOrganizer --> UC5\nOrganizer --> UC6\nOrganizer --> UC9\nOrganizer --> UC10\nOrganizer --> UC3\nOrganizer --> UC4\n\nSpeaker --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for University Course Registration System:\n1. The system shall allow students to search for available courses.\n2. The system shall allow students to add courses to their course list.\n3. The system shall allow students to register for the upcoming semester.\n4. The system shall allow students to drop courses if needed.\n5. The system shall allow students to view their academic history.\n6. The system shall allow professors to view the list of enrolled students.\n7. The system shall allow professors to assign grades to students.\n8. The system shall allow professors to provide feedback on assignments.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Professor\n\nrectangle Course_Registration_System {\n    usecase \"Search Courses\" as UC1\n    usecase \"Add Course\" as UC2\n    usecase \"Register for Semester\" as UC3\n    usecase \"Drop Course\" as UC4\n    usecase \"View Academic History\" as UC5\n    usecase \"View Enrolled Students\" as UC6\n    usecase \"Assign Grades\" as UC7\n    usecase \"Provide Feedback\" as UC8\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\n\nProfessor --> UC6\nProfessor --> UC7\nProfessor --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Media Platform:\n1. The system shall allow users to create and manage their profiles.\n2. The system shall allow users to post content, including text, images, and videos.\n3. The system shall allow users to interact with other users by commenting and liking posts.\n4. The system shall allow users to join and participate in group discussions.\n5. The system shall allow users to send private messages to each other.\n6. The system shall notify users about new activities on the platform, such as interactions with their posts.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Social_Media_Platform {\n    usecase \"Create Profile\" as UC1\n    usecase \"Post Content\" as UC2\n    usecase \"Interact with Users\" as UC3\n    usecase \"Join Groups\" as UC4\n    usecase \"Participate in Discussions\" as UC5\n    usecase \"Send Messages\" as UC6\n    usecase \"Receive Notifications\" as UC7\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Networking Platform (like Facebook):\n1. The system shall allow users to create personalized profiles.\n2. The system shall allow users to send and accept friend requests to build connections.\n3. The system shall allow users to share posts including text, photos, and videos.\n4. The system shall allow users to engage with posts through likes, comments, and reactions.\n5. The system shall allow users to send private messages and share media.\n6. The system shall notify users in real-time about interactions and new connections.\n7. The system shall allow business users to create and manage business pages.\n8. The system shall allow business users to manage targeted advertisements.\n9. The system shall allow moderators to monitor content and ensure it complies with community guidelines.\n10. The system shall allow administrators to manage platform-wide activities and enforce guidelines.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Moderator\nactor Admin\n\nrectangle Facebook_System {\n    usecase \"Create Profile\" as UC1\n    usecase \"Manage Friends\" as UC2\n    usecase \"Share Life Moments\" as UC3\n    usecase \"Post Content\" as UC4\n    usecase \"Engage with Posts\" as UC5\n    usecase \"Send Private Messages\" as UC6\n    usecase \"Receive Notifications\" as UC7\n    usecase \"Create Business Page\" as UC8\n    usecase \"Manage Advertisements\" as UC9\n    usecase \"Monitor and Moderate Content\" as UC10\n    usecase \"Enforce Community Guidelines\" as UC11\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\n\nModerator --> UC10\n\nAdmin --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Blood Donation App:\n1. The system shall allow users to register as blood donors.\n2. The system shall allow recipients to find donors based on blood type and location.\n3. The system shall allow users to post blood requests in urgent situations.\n4. The system shall notify donors of blood requests.\n5. The system shall allow recipients to locate nearby hospitals.\n6. The system shall allow blood banks to organize blood donation drives.\n7. The system shall allow blood banks to track blood availability.\n8. The system shall allow donors to donate blood.\n",
        "output": "@startuml\nleft to right direction\n\nactor Donor\nactor Recipient\nactor BloodBank\n\nrectangle Blood_Donation_App {\n    usecase \"Register as Donor\" as UC1\n    usecase \"Find Blood Donor\" as UC2\n    usecase \"Post Blood Request\" as UC3\n    usecase \"Receive Notifications\" as UC4\n    usecase \"Locate Nearby Hospitals\" as UC5\n    usecase \"Organize Blood Donation Drives\" as UC6\n    usecase \"Track Blood Availability\" as UC7\n    usecase \"Donate Blood\" as UC8\n}\n\nDonor --> UC1\nDonor --> UC8\nDonor --> UC4\nRecipient --> UC2\nRecipient --> UC3\nRecipient --> UC5\nRecipient --> UC4\nBloodBank --> UC6\nBloodBank --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Ride-Sharing Platform (like Uber):\n1. The system shall allow passengers to request rides to specific destinations.\n2. The system shall allow passengers to track the location of their rides in real-time.\n3. The system shall allow passengers to pay for the service through the platform.\n4. The system shall allow passengers to rate their drivers after the ride.\n5. The system shall allow drivers to accept ride requests.\n6. The system shall allow drivers to navigate to the passenger's location and destination.\n7. The system shall allow drivers to provide safe and efficient rides to passengers.\n8. The system shall provide customer support features for passengers and drivers.\n9. The system shall allow customer support to assist users in resolving issues.\n",
        "output": "@startuml\nleft to right direction\n\nactor Passenger\nactor Driver\nactor CustomerSupport\n\nrectangle Ride_Sharing_Platform {\n    usecase \"Request Ride\" as UC1\n    usecase \"Track Location\" as UC2\n    usecase \"Pay for Service\" as UC3\n    usecase \"Rate Driver\" as UC4\n    usecase \"Accept Ride Request\" as UC5\n    usecase \"Navigate to Location\" as UC6\n    usecase \"Provide Ride\" as UC7\n    usecase \"Resolve Issues\" as UC8\n    usecase \"Provide Assistance\" as UC9\n}\n\nPassenger --> UC1\nPassenger --> UC2\nPassenger --> UC3\nPassenger --> UC4\n\nDriver --> UC5\nDriver --> UC6\nDriver --> UC7\n\nCustomerSupport --> UC8\nCustomerSupport --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Food Delivery Platform (like DoorDash):\n1. The system shall allow customers to browse restaurant menus.\n2. The system shall allow customers to place orders for delivery or pickup.\n3. The system shall allow customers to track the status of their delivery.\n4. The system shall allow restaurants to receive customer orders.\n5. The system shall allow restaurants to prepare food after receiving orders.\n6. The system shall allow restaurants to notify customers when their orders are ready for pickup or delivery.\n7. The system shall allow delivery drivers to accept delivery requests.\n8. The system shall allow delivery drivers to pick up orders from restaurants.\n9. The system shall allow delivery drivers to deliver orders to customers.\n10. The system shall provide customer support features to resolve issues.\n11. The system shall allow customer support to provide assistance to users.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Restaurant\nactor Driver\nactor CustomerSupport\n\nrectangle Food_Delivery_Platform {\n    usecase \"Browse Menus\" as UC1\n    usecase \"Place Order\" as UC2\n    usecase \"Track Delivery\" as UC3\n    usecase \"Receive Orders\" as UC4\n    usecase \"Prepare Food\" as UC5\n    usecase \"Notify Order Ready\" as UC6\n    usecase \"Accept Delivery Request\" as UC7\n    usecase \"Pick Up Order\" as UC8\n    usecase \"Deliver Order\" as UC9\n    usecase \"Resolve Issues\" as UC10\n    usecase \"Provide Assistance\" as UC11\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\n\nRestaurant --> UC4\nRestaurant --> UC5\nRestaurant --> UC6\n\nDriver --> UC7\nDriver --> UC8\nDriver --> UC9\n\nCustomerSupport --> UC10\nCustomerSupport --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Job Finder App (SheWorks):\n1. The system shall allow job seekers to create profiles.\n2. The system shall allow job seekers to upload resumes.\n3. The system shall allow job seekers to search for jobs that align with their preferences (e.g., flexible hours, remote work).\n4. The system shall allow job seekers to apply for jobs through the platform.\n5. The system shall notify users of job updates, interview calls, and feedback.\n6. The system shall allow job seekers to schedule interviews with employers.\n7. The system shall offer career development workshops for job seekers.\n8. The system shall allow job seekers to participate in networking events.\n9. The system shall allow employers to shortlist candidates based on their profiles and resumes.\n10. The system shall allow employers to post job vacancies.\n11. The system shall allow mentors to offer mentorship to job seekers.\n12. The system shall recommend job opportunities to job seekers based on their profiles and resumes.\n",
        "output": "@startuml\nleft to right direction\n\nactor Job_Seeker\nactor Employer\nactor Mentor\n\nrectangle SheWorks_App {\n    usecase \"Create Profile\" as UC1\n    usecase \"Upload Resume\" as UC2\n    usecase \"Search for Jobs\" as UC3\n    usecase \"Apply for Job\" as UC4\n    usecase \"Receive Notifications\" as UC5\n    usecase \"Schedule Interview\" as UC6\n    usecase \"Attend Workshops\" as UC7\n    usecase \"Participate in Networking Events\" as UC8\n    usecase \"Shortlist Candidates\" as UC9\n    usecase \"Post Job Vacancies\" as UC10\n    usecase \"Offer Mentorship\" as UC11\n    usecase \"Receive Job Recommendations\" as UC12\n}\n\nJob_Seeker --> UC1\nJob_Seeker --> UC2\nJob_Seeker --> UC3\nJob_Seeker --> UC4\nJob_Seeker --> UC6\nJob_Seeker --> UC5\nJob_Seeker --> UC7\nJob_Seeker --> UC8\nJob_Seeker --> UC12\n\nEmployer --> UC9\nEmployer --> UC10\n\nMentor --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hackathon Management Web App:\n1. The system shall allow participants to register for the hackathon event.\n2. The system shall allow participants to form teams for the event.\n3. The system shall allow participants to submit their projects.\n4. The system shall provide a chat feature for team communication.\n5. The system shall notify participants about event updates and important announcements.\n6. The system shall allow participants to view the event schedule.\n7. The system shall allow mentors to provide guidance through the platform.\n8. The system shall allow mentors to review team project progress.\n9. The system shall allow judges to evaluate projects.\n10. The system shall allow judges to score submissions.\n11. The system shall allow organizers to manage judging rounds.\n12. The system shall allow sponsors to submit sponsorship materials.\n13. The system shall allow sponsors to track the visibility of their sponsorships.\n14. The system shall allow organizers to coordinate event announcements.\n",
        "output": "@startuml\nleft to right direction\n\nactor Participant\nactor Organizer\nactor Mentor\nactor Judge\nactor Sponsor\n\nrectangle Hackathon_Management_System {\n    usecase \"Register for Event\" as UC1\n    usecase \"Form Team\" as UC2\n    usecase \"Submit Project\" as UC3\n    usecase \"Chat with Team\" as UC4\n    usecase \"Receive Notifications\" as UC5\n    usecase \"View Event Schedule\" as UC6\n    usecase \"Provide Mentorship\" as UC7\n    usecase \"Review Project Progress\" as UC8\n    usecase \"Evaluate Projects\" as UC9\n    usecase \"Score Submissions\" as UC10\n    usecase \"Manage Judging Rounds\" as UC11\n    usecase \"Submit Sponsorship Materials\" as UC12\n    usecase \"Track Sponsorship Visibility\" as UC13\n    usecase \"Coordinate Announcements\" as UC14\n}\n\nParticipant --> UC1\nParticipant --> UC2\nParticipant --> UC3\nParticipant --> UC4\nParticipant --> UC5\nParticipant --> UC6\n\nOrganizer --> UC6\nOrganizer --> UC14\nOrganizer --> UC11\nOrganizer --> UC8\n\nMentor --> UC7\nMentor --> UC8\n\nJudge --> UC9\nJudge --> UC10\n\nSponsor --> UC12\nSponsor --> UC13\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Seminar Management System:\n1. The system shall allow audience members to register for the seminar.\n2. The system shall allow audience members to book seats for sessions.\n3. The system shall notify audience members about session schedules and updates.\n4. The system shall allow audience members to view the seminar session schedule.\n5. The system shall provide a feedback mechanism for audience members to evaluate sessions.\n6. The system shall allow organizers to manage auditorium allocation for sessions.\n7. The system shall allow organizers to manage speaker session content.\n8. The system shall allow organizers to invite guest speakers to the seminar.\n9. The system shall allow organizers to track audience attendance.\n10. The system shall allow organizers to coordinate event timings and session schedules.\n11. The system shall allow sponsors to promote their brands through the platform.\n12. The system shall allow guest speakers to manage their seminar session content.\n",
        "output": "@startuml\nleft to right direction\n\nactor Audience\nactor Organizer\nactor Guest_Speaker\nactor Sponsor\n\nrectangle Seminar_Management_System {\n    usecase \"Register for Seminar\" as UC1\n    usecase \"Book Seat\" as UC2\n    usecase \"Receive Notifications\" as UC3\n    usecase \"View Session Schedule\" as UC4\n    usecase \"Submit Feedback\" as UC5\n    usecase \"Manage Auditorium Allocation\" as UC6\n    usecase \"Manage Speaker Sessions\" as UC7\n    usecase \"Invite Guest Speakers\" as UC8\n    usecase \"Track Attendance\" as UC9\n    usecase \"Coordinate Event Timings\" as UC10\n    usecase \"Promote Sponsor Branding\" as UC11\n    usecase \"Manage Seminar Session Content\" as UC12\n}\n\nAudience --> UC1\nAudience --> UC2\nAudience --> UC3\nAudience --> UC4\nAudience --> UC5\n\nOrganizer --> UC6\nOrganizer --> UC7\nOrganizer --> UC8\nOrganizer --> UC9\nOrganizer --> UC10\n\nGuest_Speaker --> UC7\nGuest_Speaker --> UC12\n\nSponsor --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Project Management System:\n1. The system shall allow project managers to create project plans.\n2. The system shall allow project managers to assign tasks to team members.\n3. The system shall allow project managers to track project progress.\n4. The system shall allow team members to view their assigned tasks.\n5. The system shall allow team members to update the status of their tasks.\n6. The system shall provide a communication feature for team members to interact with each other.\n7. The system shall allow project managers to generate project reports.\n8. The system shall allow project managers to monitor project timelines.\n9. The system shall help project managers identify potential risks.\n10. The system shall allow stakeholders to access project information.\n11. The system shall allow stakeholders to review progress reports.\n12. The system shall allow stakeholders to provide feedback on project deliverables.\n",
        "output": "@startuml\nleft to right direction\n\nactor ProjectManager\nactor TeamMember\nactor Stakeholder\n\n rectangle Project_Management_System {\n    usecase \"Create Project Plan\" as UC1\n    usecase \"Assign Tasks\" as UC2\n    usecase \"Track Progress\" as UC3\n    usecase \"View Assigned Tasks\" as UC4\n    usecase \"Update Task Status\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Risks\" as UC9\n    usecase \"Access Project Information\" as UC10\n    usecase \"Review Progress Reports\" as UC11\n    usecase \"Provide Feedback\" as UC12\n}\n\nProjectManager --> UC1\nProjectManager --> UC2\nProjectManager --> UC3\nProjectManager --> UC7\nProjectManager --> UC8\nProjectManager --> UC9\n\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\n\nStakeholder --> UC10\nStakeholder --> UC11\nStakeholder --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Customer Relationship Management (CRM) System:\n1. The system shall allow sales teams to track customer leads.\n2. The system shall allow sales teams to manage customer accounts.\n3. The system shall allow sales teams to analyze sales data.\n4. The system shall allow marketing teams to create targeted campaigns.\n5. The system shall allow marketing teams to track customer engagement.\n6. The system shall allow marketing teams to generate reports on campaign performance.\n7. The system shall allow customer support teams to log customer inquiries.\n8. The system shall allow customer support teams to resolve customer issues.\n9. The system shall allow customer support teams to provide feedback on customer satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor SalesTeam\nactor MarketingTeam\nactor CustomerSupport\n\nrectangle CRM_System {\n    usecase \"Track Leads\" as UC1\n    usecase \"Manage Customer Accounts\" as UC2\n    usecase \"Analyze Sales Data\" as UC3\n    usecase \"Create Campaigns\" as UC4\n    usecase \"Track Customer Engagement\" as UC5\n    usecase \"Generate Reports\" as UC6\n    usecase \"Log Customer Inquiries\" as UC7\n    usecase \"Resolve Issues\" as UC8\n    usecase \"Provide Feedback\" as UC9\n}\n\nSalesTeam --> UC1\nSalesTeam --> UC2\nSalesTeam --> UC3\n\nMarketingTeam --> UC4\nMarketingTeam --> UC5\nMarketingTeam --> UC6\n\nCustomerSupport --> UC7\nCustomerSupport --> UC8\nCustomerSupport --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Content Management System (CMS):\n1. The system shall allow users to create digital content.\n2. The system shall allow users to edit existing content.\n3. The system shall allow users to collaborate on content creation.\n4. The system shall allow users to upload media files (e.g., images, videos).\n5. The system shall allow users to organize content into categories.\n6. The system shall allow users to schedule content publication.\n7. The system shall allow administrators to approve content before publication.\n8. The system shall provide version control for content management.\n9. The system shall provide analytics to analyze content performance.\n10. The system shall allow administrators to manage user permissions.\n11. The system shall allow administrators to monitor content performance.\n12. The system shall ensure the security of the platform.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Content_Management_System {\n    usecase \"Create Content\" as UC1\n    usecase \"Edit Content\" as UC2\n    usecase \"Collaborate on Content\" as UC3\n    usecase \"Upload Media Files\" as UC4\n    usecase \"Organize Content\" as UC5\n    usecase \"Schedule Publication\" as UC6\n    usecase \"Approve Content\" as UC7\n    usecase \"Version Control\" as UC8\n    usecase \"Analyze Content\" as UC9\n    usecase \"Manage Permissions\" as UC10\n    usecase \"Monitor Performance\" as UC11\n    usecase \"Ensure Security\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC8\n\nAdministrator --> UC7\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Learning Management System (LMS):\n1. The system shall allow instructors to create courses.\n2. The system shall allow instructors to upload learning materials.\n3. The system shall allow instructors to assess student performance.\n4. The system shall allow students to enroll in courses.\n5. The system shall allow students to access course content.\n6. The system shall allow students to submit assignments.\n7. The system shall allow students to take quizzes.\n8. The system shall provide discussion forums for students to participate in course discussions.\n9. The system shall allow instructors to grade assignments.\n10. The system shall allow administrators to manage user accounts.\n11. The system shall allow administrators to monitor course enrollment.\n12. The system shall allow administrators to generate reports on student progress.\n",
        "output": "@startuml\nleft to right direction\n\nactor Instructor\nactor Student\nactor Administrator\n\nrectangle Learning_Management_System {\n    usecase \"Create Courses\" as UC1\n    usecase \"Upload Learning Materials\" as UC2\n    usecase \"Assess Student Performance\" as UC3\n    usecase \"Enroll in Courses\" as UC4\n    usecase \"Access Course Content\" as UC5\n    usecase \"Submit Assignments\" as UC6\n    usecase \"Take Quizzes\" as UC7\n    usecase \"Participate in Discussions\" as UC8\n    usecase \"Grade Assignments\" as UC9\n    usecase \"Manage User Accounts\" as UC10\n    usecase \"Monitor Course Enrollment\" as UC11\n    usecase \"Generate Reports\" as UC12\n}\n\nInstructor --> UC1\nInstructor --> UC2\nInstructor --> UC3\nInstructor --> UC9\n\nStudent --> UC4\nStudent --> UC5\nStudent --> UC6\nStudent --> UC7\nStudent --> UC8\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Project Tracking System:\n1. The system shall allow team members to create tasks.\n2. The system shall allow team members to assign tasks to other team members.\n3. The system shall allow team members to set deadlines for tasks.\n4. The system shall allow team members to update task statuses.\n5. The system shall allow team members to track progress on tasks.\n6. The system shall provide communication features for team members to collaborate.\n7. The system shall generate reports on project progress.\n8. The system shall allow project managers to monitor project timelines.\n9. The system shall help project managers identify bottlenecks in the project.\n10. The system shall allow project managers to oversee project progress.\n11. The system shall allow project managers to allocate resources for tasks.\n12. The system shall help project managers ensure that project milestones are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor TeamMember\nactor ProjectManager\n\nrectangle Project_Tracking_System {\n    usecase \"Create Tasks\" as UC1\n    usecase \"Assign Tasks\" as UC2\n    usecase \"Set Deadlines\" as UC3\n    usecase \"Update Task Status\" as UC4\n    usecase \"Track Progress\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Bottlenecks\" as UC9\n    usecase \"Oversee Project Progress\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Milestones\" as UC12\n}\n\nTeamMember --> UC1\nTeamMember --> UC2\nTeamMember --> UC3\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\nTeamMember --> UC7\n\nProjectManager --> UC8\nProjectManager --> UC9\nProjectManager --> UC10\nProjectManager --> UC11\nProjectManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Task Management System:\n1. The system shall allow users to create tasks.\n2. The system shall allow users to set priorities for tasks.\n3. The system shall allow users to set deadlines for task completion.\n4. The system shall allow users to update the status of tasks.\n5. The system shall allow users to track progress on tasks.\n6. The system shall allow users to categorize tasks based on different criteria.\n7. The system shall generate task lists for users.\n8. The system shall allow users to set reminders for tasks.\n9. The system shall allow users to organize tasks into projects.\n10. The system shall allow users to share tasks with collaborators.\n11. The system shall allow users to assign tasks to team members.\n12. The system shall notify users about task updates and deadlines.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Collaborator\n\nrectangle Task_Management_System {\n    usecase \"Create Tasks\" as UC1\n    usecase \"Set Priorities\" as UC2\n    usecase \"Set Deadlines\" as UC3\n    usecase \"Update Task Status\" as UC4\n    usecase \"Track Progress\" as UC5\n    usecase \"Categorize Tasks\" as UC6\n    usecase \"Generate Task Lists\" as UC7\n    usecase \"Set Reminders\" as UC8\n    usecase \"Organize Tasks\" as UC9\n    usecase \"Share Tasks\" as UC10\n    usecase \"Assign Tasks\" as UC11\n    usecase \"Receive Notifications\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n\nCollaborator --> UC10\nCollaborator --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Bug Tracking System:\n1. The system shall allow developers to log software bugs.\n2. The system shall allow developers to assign bugs to team members.\n3. The system shall allow developers to track the status of bug fixes.\n4. The system shall allow developers to update the status of bugs.\n5. The system shall allow developers to prioritize bugs based on severity.\n6. The system shall provide communication features for developers to collaborate on bug resolution.\n7. The system shall generate bug reports for tracking bug statistics.\n8. The system shall allow project managers to monitor bug resolution timelines.\n9. The system shall help project managers identify recurring bugs in the software.\n10. The system shall allow project managers to oversee the progress of bug resolution.\n11. The system shall allow project managers to allocate resources for fixing bugs.\n12. The system shall help project managers ensure software quality standards are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor Developer\nactor ProjectManager\n\nrectangle Bug_Tracking_System {\n    usecase \"Log Bugs\" as UC1\n    usecase \"Assign Bugs\" as UC2\n    usecase \"Track Bug Fixes\" as UC3\n    usecase \"Update Bug Status\" as UC4\n    usecase \"Prioritize Bugs\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Bug Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Bugs\" as UC9\n    usecase \"Oversee Bug Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Software Quality\" as UC12\n}\n\nDeveloper --> UC1\nDeveloper --> UC2\nDeveloper --> UC3\nDeveloper --> UC4\nDeveloper --> UC5\nDeveloper --> UC6\nDeveloper --> UC7\n\nProjectManager --> UC8\nProjectManager --> UC9\nProjectManager --> UC10\nProjectManager --> UC11\nProjectManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Customer Support System:\n1. The system shall allow customer support agents to log customer inquiries.\n2. The system shall allow customer support agents to assign tickets to support agents.\n3. The system shall allow customer support agents to track ticket resolutions.\n4. The system shall allow customer support agents to update ticket statuses.\n5. The system shall allow customer support agents to prioritize tickets based on urgency.\n6. The system shall provide communication features for customer support agents to communicate with customers about issue resolutions.\n7. The system shall generate support reports for tracking customer inquiries and resolutions.\n8. The system shall allow managers to monitor ticket resolution timelines.\n9. The system shall help managers identify recurring customer issues.\n10. The system shall allow managers to oversee the progress of ticket resolutions.\n11. The system shall allow managers to allocate resources for resolving customer issues.\n12. The system shall help managers ensure customer satisfaction standards are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor CustomerSupportAgent\nactor Manager\n\nrectangle Customer_Support_System {\n    usecase \"Log Customer Inquiries\" as UC1\n    usecase \"Assign Tickets\" as UC2\n    usecase \"Track Ticket Resolutions\" as UC3\n    usecase \"Update Ticket Status\" as UC4\n    usecase \"Prioritize Tickets\" as UC5\n    usecase \"Communicate with Customers\" as UC6\n    usecase \"Generate Support Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Issues\" as UC9\n    usecase \"Oversee Ticket Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Customer Satisfaction\" as UC12\n}\n\nCustomerSupportAgent --> UC1\nCustomerSupportAgent --> UC2\nCustomerSupportAgent --> UC3\nCustomerSupportAgent --> UC4\nCustomerSupportAgent --> UC5\nCustomerSupportAgent --> UC6\nCustomerSupportAgent --> UC7\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Help Desk System:\n1. The system shall allow users to log help desk tickets.\n2. The system shall allow support agents to assign tickets to agents.\n3. The system shall allow users and support agents to track ticket resolutions.\n4. The system shall allow support agents to update ticket statuses.\n5. The system shall allow support agents to prioritize tickets based on urgency.\n6. The system shall provide communication features for support agents to communicate with users regarding issue resolutions.\n7. The system shall generate help desk reports for tracking ticket statistics.\n8. The system shall allow managers to monitor ticket resolution timelines.\n9. The system shall help managers identify recurring technical issues.\n10. The system shall allow managers to oversee the progress of ticket resolutions.\n11. The system shall allow managers to allocate resources for resolving tickets.\n12. The system shall help managers ensure that service level agreements are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor SupportAgent\nactor Manager\n\nrectangle Help_Desk_System {\n    usecase \"Log Help Desk Tickets\" as UC1\n    usecase \"Assign Tickets\" as UC2\n    usecase \"Track Ticket Resolutions\" as UC3\n    usecase \"Update Ticket Status\" as UC4\n    usecase \"Prioritize Tickets\" as UC5\n    usecase \"Communicate with Users\" as UC6\n    usecase \"Generate Help Desk Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Issues\" as UC9\n    usecase \"Oversee Ticket Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Service Level Agreements\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nSupportAgent --> UC3\nSupportAgent --> UC4\nSupportAgent --> UC5\nSupportAgent --> UC6\nSupportAgent --> UC7\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Library Management System:\n1. The system shall allow librarians to catalog books.\n2. The system shall allow librarians to manage patron accounts.\n3. The system shall allow librarians to track book loans.\n4. The system shall allow patrons to search for books in the library catalog.\n5. The system shall allow patrons to check out books from the library.\n6. The system shall allow patrons to renew book loans.\n7. The system shall generate library reports for tracking book circulation and other statistics.\n8. The system shall allow librarians to monitor book circulation.\n9. The system shall help librarians identify overdue books.\n10. The system shall allow administrators to oversee library operations.\n11. The system shall allow administrators to allocate resources for the library.\n12. The system shall help administrators ensure that library policies are enforced.\n",
        "output": "@startuml\nleft to right direction\n\nactor Librarian\nactor Patron\nactor Administrator\n\nrectangle Library_Management_System {\n    usecase \"Catalog Books\" as UC1\n    usecase \"Manage Patron Accounts\" as UC2\n    usecase \"Track Book Loans\" as UC3\n    usecase \"Search for Books\" as UC4\n    usecase \"Check Out Books\" as UC5\n    usecase \"Renew Book Loans\" as UC6\n    usecase \"Generate Library Reports\" as UC7\n    usecase \"Monitor Book Circulation\" as UC8\n    usecase \"Identify Overdue Books\" as UC9\n    usecase \"Oversee Library Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Enforce Library Policies\" as UC12\n}\n\nLibrarian --> UC1\nLibrarian --> UC2\nLibrarian --> UC3\nLibrarian --> UC7\nLibrarian --> UC8\nLibrarian --> UC9\n\nPatron --> UC4\nPatron --> UC5\nPatron --> UC6\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hotel Management System:\n1. The system shall allow hotel staff to create guest reservations.\n2. The system shall allow hotel staff to assign rooms to guests.\n3. The system shall allow hotel staff to track guest check-ins and check-outs.\n4. The system shall allow guests to book rooms.\n5. The system shall allow guests to request hotel services.\n6. The system shall allow guests to provide feedback on their stay.\n7. The system shall generate reports for hotel staff on hotel operations.\n8. The system shall allow hotel staff to monitor room availability.\n9. The system shall help hotel staff identify guest preferences.\n10. The system shall allow managers to oversee hotel operations.\n11. The system shall allow managers to allocate resources effectively.\n12. The system shall help managers ensure guest satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor HotelStaff\nactor Guest\nactor Manager\n\nrectangle Hotel_Management_System {\n    usecase \"Create Guest Reservations\" as UC1\n    usecase \"Assign Rooms\" as UC2\n    usecase \"Track Check-Ins and Check-Outs\" as UC3\n    usecase \"Book Rooms\" as UC4\n    usecase \"Request Services\" as UC5\n    usecase \"Provide Feedback\" as UC6\n    usecase \"Generate Hotel Reports\" as UC7\n    usecase \"Monitor Room Availability\" as UC8\n    usecase \"Identify Guest Preferences\" as UC9\n    usecase \"Oversee Hotel Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Guest Satisfaction\" as UC12\n}\n\nHotelStaff --> UC1\nHotelStaff --> UC2\nHotelStaff --> UC3\nHotelStaff --> UC7\nHotelStaff --> UC8\nHotelStaff --> UC9\n\nGuest --> UC4\nGuest --> UC5\nGuest --> UC6\n\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for National Health ID System:\n1. The system shall allow patients to create a unique Health ID.\n2. The system shall allow health data consent managers to seek a patient’s consent for sharing health data.\n3. The system shall maintain the health records of patients digitally.\n4. The system shall allow health authorities to use health records for patient diagnosis.\n5. The system shall allow health authorities to record medications, including vaccinations, for newborns and patients.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor HealthAuthority\nactor HealthDataConsentManager\n\nrectangle National_Health_ID_System {\n    usecase \"Create Health ID\" as UC1\n    usecase \"Seek Patient's Consent\" as UC2\n    usecase \"Maintain Health Records\" as UC3\n    usecase \"Use for Patient Diagnosis\" as UC4\n    usecase \"Record Medications\" as UC5\n}\n\nPatient --> UC1\nPatient --> UC3\n\nHealthDataConsentManager --> UC2\nHealthAuthority --> UC5\nHealthAuthority --> UC4\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Device Donation System:\n1. The system shall allow donors to enter the details of the device they are willing to donate.\n2. The system shall allow donors to enter their address details for pickup.\n3. The system shall notify donors to wait for the approval of the device.\n4. The system shall allow admins to verify the details of the donated device.\n5. The system shall allow admins to assign a pickup executive to collect the device.\n6. The system shall allow volunteers to join the team to help with device pickups.\n",
        "output": "@startuml\nleft to right direction\n\nactor Donor\nactor Admin\nactor Volunteer\n\nrectangle Device_Donation_System {\n    usecase \"Enter Device Details\" as UC1\n    usecase \"Enter Address Details\" as UC2\n    usecase \"Wait for Approval\" as UC3\n    usecase \"Verify Device Details\" as UC4\n    usecase \"Assign Pickup Executive\" as UC5\n    usecase \"Join a Team\" as UC6\n}\n\nDonor --> UC1\nDonor --> UC2\nDonor --> UC3\n\nAdmin --> UC4\nAdmin --> UC5\n\nVolunteer --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Car Rental System:\n1. The system shall allow users to search for available cars for rental.\n2. The system shall allow users to select a car for rental from the available options.\n3. The system shall allow users to make a reservation for a rental car.\n4. The system shall allow users to specify the rental duration.\n5. The system shall allow users to specify the pick-up and drop-off locations for the rental car.\n6. The system shall generate rental agreements for car rentals.\n7. The system shall allow administrators to track rental durations for cars.\n8. The system shall process payments for car rentals.\n9. The system shall allow administrators to manage car listings.\n10. The system shall allow administrators to monitor reservations.\n11. The system shall allow administrators to confirm the availability of cars for rental.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Car_Rental_System {\n    usecase \"Search for Available Cars\" as UC1\n    usecase \"Select Car for Rental\" as UC2\n    usecase \"Make Reservation\" as UC3\n    usecase \"Specify Rental Duration\" as UC4\n    usecase \"Specify Pick&Drop Location\" as UC5\n    usecase \"Generate Rental Agreements\" as UC7\n    usecase \"Track Rental Durations\" as UC8\n    usecase \"Process Payments\" as UC9\n    usecase \"Manage Car Listings\" as UC10\n    usecase \"Monitor Reservations\" as UC11\n    usecase \"Confirm Car Availability\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nAdministrator --> UC7\nAdministrator --> UC8\nAdministrator --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Online College Magazine System:\n1. The system shall allow users (students, faculty, contributors) to manage articles, including writing, editing, and publishing.\n2. The system shall allow users to rate published articles.\n3. The system shall allow users to comment on published articles.\n4. The system shall allow users to organize articles based on appropriate categories.\n5. The system shall allow guests to read, comment on, and rate articles.\n6. The system shall allow guests to contribute content for the magazine if interested.\n7. The system shall allow moderators to review articles before they are published.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Guest\nactor Moderator\n\nUser <|-- Student\nUser <|-- Faculty\nUser <|-- Contributor\n\nrectangle Online_College_Magazine_System {\n    usecase \"Manage Articles\" as UC1\n    usecase \"Rate Articles\" as UC2\n    usecase \"Comment on Articles\" as UC3\n    usecase \"Organize Articles\" as UC4\n    usecase \"Generate Content\" as UC5\n    usecase \"Review Articles\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\n\nGuest --> UC2\nGuest --> UC3\nGuest --> UC5\n\nModerator --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Crime Record Management System:\n1. The system shall allow petitioners to file a First Incident Report (FIR).\n2. The system shall allow victims to record complaints.\n3. The system shall allow tracking of criminals, including those arrested, to be arrested, or escaped.\n4. The system shall allow investigating officers to manage cases, including updating and tracking the status of cases.\n5. The system shall allow investigating officers to monitor crime activities throughout the state.\n",
        "output": "@startuml\nleft to right direction\n\nactor Petitioner\nactor Victim\nactor Accused\nactor InvestigatingOfficer\n\nrectangle Crime_Record_Management_System {\n    usecase \"File FIR\" as UC1\n    usecase \"Record Complaints\" as UC2\n    usecase \"Track Criminals\" as UC3\n    usecase \"Manage Cases\" as UC4\n    usecase \"Monitor Crime Activities\" as UC5\n}\n\nPetitioner --> UC1\nVictim --> UC2\nAccused --> UC3\nInvestigatingOfficer --> UC4\nInvestigatingOfficer --> UC5\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Smart Traffic System:\n1. The system shall allow traffic police to monitor roads with high traffic levels.\n2. The system shall detect helmet and seat belt violations using image processing.\n3. The system shall submit details of driver violations to the traffic police when the driver violates the law more than two times.\n4. The system shall operate street lights based on population density at night to save electricity.\n5. The system shall allow traffic police to cancel the license of drivers who violate the law.\n6. The system shall regulate automated traffic lights to control traffic flow and avoid congestion.\n",
        "output": "@startuml\nleft to right direction\n\nactor TrafficPolice\n\nrectangle Smart_Traffic_System {\n    usecase \"Monitor Roads\" as UC1\n    usecase \"Detect Helmet/Seat Belt\" as UC2\n    usecase \"Submit Driver Violations\" as UC3\n    usecase \"Operate Street Lights\" as UC4\n    usecase \"Cancel License\" as UC5\n    usecase \"Regulate Traffic Lights\" as UC6\n}\n\nUC2 --> UC3 : <<extend>>\n\nTrafficPolice --> UC1\nTrafficPolice --> UC2\nTrafficPolice --> UC3\nTrafficPolice --> UC5\nUC3 --> UC5 :<<include>>\n\nUC1 --> UC4 : <<include>>\nUC1 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Job Portal System:\n1. The system shall allow job seekers to view available job listings.\n2. The system shall provide job availability predictions to job seekers.\n3. The system shall allow job seekers to search for jobs using filters like location, sector, and eligibility.\n4. The system shall allow job seekers and companies to register profiles.\n5. The system shall allow companies to shortlist candidates for job positions.\n6. The system shall allow companies to post job listings.\n7. The system shall allow job seekers to apply for jobs.\n",
        "output": "@startuml\nleft to right direction\n\nactor JobSeeker\nactor Company\n\nrectangle Job_Portal_System {\n    usecase \"See Available Job Listings\" as UC1\n    usecase \"See Job Availability Predictions\" as UC2\n    usecase \"Search Jobs by Filters\" as UC3\n    usecase \"Register Profile\" as UC4\n    usecase \"Shortlist Candidates\" as UC5\n    usecase \"Post Job Listings\" as UC6\n    usecase \"Apply for Job\" as UC7\n}\n\nJobSeeker --> UC1\nJobSeeker --> UC2\nJobSeeker --> UC3\nJobSeeker --> UC4\nJobSeeker --> UC7\n\nCompany --> UC4\nCompany --> UC5\nCompany --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Aarogya Setu App:\n1. The system shall help users identify COVID-19 hotspots in their area.\n2. The system shall perform contact tracing to identify possible COVID-19 exposures.\n3. The system shall notify users about their proximity to nearby infections or hotspots.\n4. The system shall allow users to self-identify their risk based on symptoms and exposure.\n5. The system shall monitor users' health assessments based on their self-reported data.\n6. The system shall help users identify COVID-19 symptoms.\n7. The system shall send users alerts about the best safety precautions.\n8. The system shall provide users with a list of quarantine measures for those at high risk.\n9. The system shall assist users who have a travel history with self-quarantine measures.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Aarogya_Setu_App {\n    usecase \"Identify Hotspots\" as UC1\n    usecase \"Contact Tracing\" as UC2\n    usecase \"Check Proximity to Infection\" as UC3\n    usecase \"Self-Identify Risk\" as UC4\n    usecase \"Monitor Health Assessment\" as UC5\n    usecase \"Identify Symptoms\" as UC6\n    usecase \"Receive Safety Precautions Alerts\" as UC7\n    usecase \"Access Quarantine Measures List\" as UC8\n    usecase \"Get Self-Quarantine Help\" as UC9\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Wedding Planner System:\n1. The system shall allow couples to create wedding budgets.\n2. The system shall allow couples to select venues for their wedding.\n3. The system shall allow couples to hire vendors for services like catering, photography, and entertainment.\n4. The system shall allow couples to manage guest lists.\n5. The system shall allow couples to send invitations to their guests.\n6. The system shall allow couples to track RSVPs from guests.\n7. The system shall allow couples to create wedding timelines for event planning.\n8. The system shall allow couples to manage seating arrangements for the wedding event.\n9. The system shall allow couples to coordinate event logistics.\n10. The system shall allow wedding planners to oversee the planning process.\n11. The system shall allow wedding planners to communicate with vendors.\n12. The system shall allow wedding planners to ensure the smooth execution of the wedding events.\n",
        "output": "@startuml\nleft to right direction\n\nactor Couple\nactor WeddingPlanner\n\nrectangle Wedding_Planner_System {\n    usecase \"Create Wedding Budget\" as UC1\n    usecase \"Select Venues\" as UC2\n    usecase \"Hire Vendors\" as UC3\n    usecase \"Manage Guest Lists\" as UC4\n    usecase \"Send Invitations\" as UC5\n    usecase \"Track RSVPs\" as UC6\n    usecase \"Create Wedding Timelines\" as UC7\n    usecase \"Manage Seating Arrangements\" as UC8\n    usecase \"Coordinate Event Logistics\" as UC9\n    usecase \"Oversee Planning Process\" as UC10\n    usecase \"Communicate with Vendors\" as UC11\n    usecase \"Ensure Smooth Execution\" as UC12\n}\n\nCouple --> UC1\nCouple --> UC2\nCouple --> UC3\nCouple --> UC4\nCouple --> UC5\nCouple --> UC6\nCouple --> UC7\nCouple --> UC8\nCouple --> UC9\n\nWeddingPlanner --> UC10\nWeddingPlanner --> UC11\nWeddingPlanner --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Arcade Management System:\n1. The system shall allow arcade owners to add new games.\n2. The system shall allow arcade owners to set game prices.\n3. The system shall allow arcade owners to track game usage.\n4. The system shall allow customers to purchase tickets to play games.\n5. The system shall allow customers to play games using purchased tickets.\n6. The system shall allow customers to redeem tickets for prizes.\n7. The system shall allow arcade owners to manage customer accounts.\n8. The system shall track ticket balances for customers.\n9. The system shall generate reports on game popularity and arcade performance.\n10. The system shall allow arcade owners to oversee arcade operations.\n11. The system shall allow arcade owners to allocate resources effectively.\n12. The system shall allow arcade owners to ensure customer satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor ArcadeOwner\nactor Customer\n\nrectangle Arcade_Management_System {\n    usecase \"Add New Games\" as UC1\n    usecase \"Set Game Prices\" as UC2\n    usecase \"Track Game Usage\" as UC3\n    usecase \"Purchase Tickets\" as UC4\n    usecase \"Play Games\" as UC5\n    usecase \"Redeem Tickets\" as UC6\n    usecase \"Manage Customer Accounts\" as UC7\n    usecase \"Track Ticket Balances\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Oversee Arcade Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Customer Satisfaction\" as UC12\n}\n\nArcadeOwner --> UC1\nArcadeOwner --> UC2\nArcadeOwner --> UC3\nArcadeOwner --> UC7\nArcadeOwner --> UC8\nArcadeOwner --> UC9\nArcadeOwner --> UC10\nArcadeOwner --> UC11\nArcadeOwner --> UC12\n\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Blind Navigation Mobile App:\n1. The system shall provide audio directions to blind users based on GPS data.\n2. The system shall allow blind users to search for nearby places of interest.\n3. The system shall allow blind users to plan routes for navigation.\n4. The system shall provide real-time updates on the user’s location during navigation.\n5. The system shall allow users to set their preferences for navigation and audio feedback.\n6. The system shall allow users to save their favorite locations for future reference.\n7. The system shall provide access to emergency services in case of need.\n",
        "output": "@startuml\nleft to right direction\n\nactor BlindUser\n\nrectangle Blind_Navigation_App {\n    usecase \"Get Audio Directions\" as UC1\n    usecase \"Search for Nearby Places\" as UC2\n    usecase \"Plan Routes\" as UC3\n    usecase \"Receive Real-Time Updates\" as UC4\n    usecase \"Set Preferences\" as UC5\n    usecase \"Save Favorite Locations\" as UC6\n    usecase \"Access Emergency Services\" as UC7\n}\n\nBlindUser --> UC1\nBlindUser --> UC2\nBlindUser --> UC3\nBlindUser --> UC4\nBlindUser --> UC5\nBlindUser --> UC6\nBlindUser --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Sign Language Translator Mobile App:\n1. The system shall translate sign language gestures into text and speech.\n2. The system shall allow deaf users to communicate with hearing users by converting signed words and phrases.\n3. The system shall convert sign language gestures into text for display.\n4. The system shall convert sign language gestures into spoken words.\n5. The system shall allow users to customize sign language dictionaries.\n6. The system shall allow users to save common phrases for quick access.\n7. The system shall allow users to adjust translation settings for personalized usage.\n",
        "output": "@startuml\nleft to right direction\n\nactor DeafUser\nactor HearingUser\n\nrectangle Sign_Language_Translator_App {\n    usecase \"Translate Sign Language Gestures\" as UC1\n    usecase \"Communicate with Hearing Users\" as UC2\n    usecase \"Convert Gestures to Text\" as UC3\n    usecase \"Convert Gestures to Speech\" as UC4\n    usecase \"Customize Dictionaries\" as UC5\n    usecase \"Save Common Phrases\" as UC6\n    usecase \"Adjust Translation Settings\" as UC7\n}\n\nDeafUser --> UC1\nDeafUser --> UC2\nDeafUser --> UC3\nDeafUser --> UC4\nDeafUser --> UC5\nDeafUser --> UC6\nDeafUser --> UC7\n\nHearingUser --> UC2\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Glacier Melting Prediction System:\n1. The system shall allow scientists to input data related to glacier melting.\n2. The system shall allow scientists to run simulations for predicting glacier melting.\n3. The system shall allow scientists to visualize the results of glacier melting predictions.\n4. The system shall generate reports on glacier melting and its potential impact.\n5. The system shall allow scientists to share data with other researchers.\n6. The system shall identify trends in glacier melting patterns over time.\n",
        "output": "@startuml\nleft to right direction\n\nactor Scientist\n\nrectangle Glacier_Melting_Prediction_System {\n    usecase \"Input Data\" as UC1\n    usecase \"Run Simulations\" as UC2\n    usecase \"Visualize Results\" as UC3\n    usecase \"Generate Reports\" as UC4\n    usecase \"Share Data\" as UC5\n    usecase \"Identify Trends\" as UC6\n}\n\nScientist --> UC1\nScientist --> UC2\nScientist --> UC3\nScientist --> UC4\nScientist --> UC5\nScientist --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Air Quality Monitoring System:\n1. The system shall allow environmental agencies to monitor real-time air quality data.\n2. The system shall allow environmental agencies to set pollution thresholds for various air pollutants.\n3. The system shall issue alerts when air pollution levels exceed set thresholds.\n4. The system shall generate air quality reports based on collected data.\n5. The system shall map pollution sources in urban areas.\n6. The system shall identify trends in air pollution patterns over time.\n",
        "output": "@startuml\nleft to right direction\n\nactor EnvironmentalAgency\n\nrectangle Air_Quality_Monitoring_System {\n    usecase \"Monitor Air Quality Data\" as UC1\n    usecase \"Set Pollution Thresholds\" as UC2\n    usecase \"Issue Pollution Alerts\" as UC3\n    usecase \"Generate Reports\" as UC4\n    usecase \"Map Pollution Sources\" as UC5\n    usecase \"Identify Trends\" as UC6\n}\n\nEnvironmentalAgency --> UC1\nEnvironmentalAgency --> UC2\nEnvironmentalAgency --> UC3\nEnvironmentalAgency --> UC4\nEnvironmentalAgency --> UC5\nEnvironmentalAgency --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Diagramming Tool:\n1. The system shall allow software engineers to create UML diagrams.\n2. The system shall allow software engineers to create flowcharts and other visual representations.\n3. The system shall allow software engineers to customize visual elements such as shapes and connectors.\n4. The system shall allow software engineers to collaborate on diagrams with team members.\n5. The system shall allow software engineers to share diagrams with other users.\n6. The system shall allow software engineers to export diagrams in various formats.\n7. The system shall provide version control for diagrams.\n8. The system shall provide diagram templates for easy use.\n9. The system shall integrate with other software development tools.\n",
        "output": "@startuml\nleft to right direction\n\nactor SoftwareEngineer\nactor TeamMember\n\nrectangle Diagramming_Tool {\n    usecase \"Create UML Diagrams\" as UC1\n    usecase \"Create Flowcharts\" as UC2\n    usecase \"Customize Visual Elements\" as UC3\n    usecase \"Collaborate on Diagrams\" as UC4\n    usecase \"Share Diagrams\" as UC5\n    usecase \"Export Diagrams\" as UC6\n    usecase \"Version Control\" as UC7\n    usecase \"Diagram Templates\" as UC8\n    usecase \"Integrate with Other Tools\" as UC9\n}\n\nSoftwareEngineer --> UC1\nSoftwareEngineer --> UC2\nSoftwareEngineer --> UC3\nSoftwareEngineer --> UC4\nSoftwareEngineer --> UC5\nSoftwareEngineer --> UC6\nSoftwareEngineer --> UC7\nSoftwareEngineer --> UC8\nSoftwareEngineer --> UC9\n\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Fitness Application:\n1. The system shall allow users to log exercises performed.\n2. The system shall track calories burned by users during workouts.\n3. The system shall allow users to create personalized workout plans.\n4. The system shall allow users to set fitness goals.\n5. The system shall provide users with workout summaries.\n6. The system shall send users reminders for scheduled workouts.\n7. The system shall allow users to track their nutrition intake.\n8. The system shall allow users to log their meals.\n9. The system shall calculate users' daily calorie intake.\n10. The system shall allow users to monitor their overall nutrition intake.\n11. The system shall provide users with meal summaries.\n12. The system shall send users alerts for meal planning.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Fitness_Application {\n    usecase \"Log Exercises\" as UC1\n    usecase \"Track Calories Burned\" as UC2\n    usecase \"Create Workout Plans\" as UC3\n    usecase \"Set Fitness Goals\" as UC4\n    usecase \"View Workout Summaries\" as UC5\n    usecase \"Receive Workout Reminders\" as UC6\n    usecase \"Track Nutrition\" as UC7\n    usecase \"Log Meals\" as UC8\n    usecase \"Calculate Calorie Intake\" as UC9\n    usecase \"Monitor Nutrition Intake\" as UC10\n    usecase \"View Meal Summaries\" as UC11\n    usecase \"Receive Meal Planning Alerts\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hostel Finding Application:\n1. The system shall allow students to search for hostels based on location, price, and amenities.\n2. The system shall allow students to book hostel accommodations online.\n3. The system shall provide filters for refining search results.\n4. The system shall allow students to view hostel reviews.\n5. The system shall allow students to compare hostel options.\n6. The system shall allow students to manage their bookings.\n7. The system shall send students booking confirmations.\n8. The system shall provide directions to hostels after booking.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\n\nrectangle Hostel_Finding_Application {\n    usecase \"Search Hostels\" as UC1\n    usecase \"Book Hostel Accommodations\" as UC2\n    usecase \"Filter Search Results\" as UC3\n    usecase \"View Hostel Reviews\" as UC4\n    usecase \"Compare Hostel Options\" as UC5\n    usecase \"Manage Bookings\" as UC6\n    usecase \"Receive Booking Confirmations\" as UC7\n    usecase \"Access Directions to Hostels\" as UC8\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\nStudent --> UC6\nStudent --> UC7\nStudent --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Messaging Application:\n1. The system shall allow users to send text messages to their contacts.\n2. The system shall allow users to send photos to their contacts.\n3. The system shall allow users to send videos to their contacts.\n4. The system shall allow users to send voice messages to their contacts.\n5. The system shall support group chats for multiple participants.\n6. The system shall provide message encryption for secure communication.\n7. The system shall allow users to share multimedia content, including photos, videos, and voice messages.\n8. The system shall allow users to create chat groups.\n9. The system shall allow users to add or remove participants from chat groups.\n10. The system shall allow users to customize chat settings, including notifications and privacy options.\n11. The system shall send notifications for new messages and updates.\n12. The system shall allow users to archive messages for future reference.\n13. The system shall allow users to block contacts from sending messages.\n14. The system shall allow users to manage message storage on their devices.\n15. The system shall allow users to view their message history.\n16. The system shall send alerts for incoming messages.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Messaging_Application {\n    usecase \"Send Text Messages\" as UC1\n    usecase \"Send Photos\" as UC2\n    usecase \"Send Videos\" as UC3\n    usecase \"Send Voice Messages\" as UC4\n    usecase \"Support Group Chats\" as UC5\n    usecase \"Encrypt Messages\" as UC6\n    usecase \"Share Multimedia\" as UC7\n    usecase \"Create Chat Groups\" as UC8\n    usecase \"Add/Remove Participants\" as UC9\n    usecase \"Customize Chat Settings\" as UC10\n    usecase \"Send Notifications\" as UC11\n    usecase \"Archive Messages\" as UC12\n    usecase \"Block Contacts\" as UC13\n    usecase \"Manage Message Storage\" as UC14\n    usecase \"View Message Histories\" as UC15\n    usecase \"Receive Message Alerts\" as UC16\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\nUser --> UC16\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Media Application:\n1. The system shall allow users to share photos with their friends.\n2. The system shall allow users to share videos with their friends.\n3. The system shall allow users to share messages with their friends.\n4. The system shall support multimedia sharing, including photos, videos, and messages.\n5. The system shall support chat messaging between users.\n6. The system shall support story posting for users to share temporary content.\n7. The system shall allow users to create posts for sharing on their profiles.\n8. The system shall allow users to view stories posted by their friends.\n9. The system shall allow users to send direct messages to their contacts.\n10. The system shall allow users to add friends to their social network.\n11. The system shall allow users to follow other users' profiles.\n12. The system shall allow users to comment on posts.\n13. The system shall allow users to manage their privacy settings.\n14. The system shall provide an activity feed for users to view new content from their friends.\n15. The system shall send notifications to users for new posts, messages, and updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Social_Media_Application {\n    usecase \"Share Photos\" as UC1\n    usecase \"Share Videos\" as UC2\n    usecase \"Share Messages\" as UC3\n    usecase \"Support Multimedia Sharing\" as UC4\n    usecase \"Support Chat Messaging\" as UC5\n    usecase \"Support Story Posting\" as UC6\n    usecase \"Create Posts\" as UC7\n    usecase \"View Stories\" as UC8\n    usecase \"Send Direct Messages\" as UC9\n    usecase \"Add Friends\" as UC10\n    usecase \"Follow Users\" as UC11\n    usecase \"Comment on Posts\" as UC12\n    usecase \"Manage Privacy Settings\" as UC13\n    usecase \"View Activity Feeds\" as UC14\n    usecase \"Receive Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Logo Design Application:\n1. The system shall allow users to create custom logos for businesses, websites, and products.\n2. The system shall allow users to select colors for their logo designs.\n3. The system shall allow users to add text and graphics to their logos.\n4. The system shall allow users to customize logo templates.\n5. The system shall allow users to save their logo designs for future use.\n6. The system shall allow users to download their logos in various formats.\n7. The system shall allow users to share their logos on social media platforms.\n8. The system shall allow users to collaborate on logo design projects with other users.\n9. The system shall provide access to design tools for logo creation.\n10. The system shall allow users to manage their logo design projects.\n11. The system shall allow users to view their design history.\n12. The system shall provide users with design suggestions based on their project requirements.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Logo_Design_Application {\n    usecase \"Create Custom Logos\" as UC1\n    usecase \"Select Colors\" as UC2\n    usecase \"Add Text and Graphics\" as UC3\n    usecase \"Customize Logo Templates\" as UC4\n    usecase \"Save Logo Designs\" as UC5\n    usecase \"Download Logos\" as UC6\n    usecase \"Share Logos\" as UC7\n    usecase \"Collaborate on Projects\" as UC8\n    usecase \"Access Design Tools\" as UC9\n    usecase \"Manage Logo Projects\" as UC10\n    usecase \"View Design Histories\" as UC11\n    usecase \"Receive Design Suggestions\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Daraz E-Commerce Platform:\n1. The system shall allow users to browse products available for sale.\n2. The system shall allow users to add items to their cart for purchase.\n3. The system shall allow users to make purchases online.\n4. The system shall support product categories for easy browsing.\n5. The system shall provide search filters for narrowing down product searches.\n6. The system shall offer product recommendations to users based on their preferences.\n7. The system shall allow users to create accounts for managing their shopping experience.\n8. The system shall allow users to view their order histories.\n9. The system shall allow users to track the shipment of their orders.\n10. The system shall process payments for purchases made by users.\n11. The system shall manage inventory for products listed on the platform.\n12. The system shall generate sales reports for tracking sales performance.\n13. The system shall allow administrators to add new products to the platform.\n14. The system shall allow administrators to update existing product listings.\n15. The system shall allow administrators to monitor user activity on the platform.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Daraz_E-Commerce_Platform {\n    usecase \"Browse Products\" as UC1\n    usecase \"Add Items to Cart\" as UC2\n    usecase \"Make Purchases\" as UC3\n    usecase \"Support Product Categories\" as UC4\n    usecase \"Support Search Filters\" as UC5\n    usecase \"Provide Product Recommendations\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Order Histories\" as UC8\n    usecase \"Track Order Shipments\" as UC9\n    usecase \"Process Payments\" as UC10\n    usecase \"Manage Inventory\" as UC11\n    usecase \"Generate Sales Reports\" as UC12\n    usecase \"Add New Products\" as UC13\n    usecase \"Update Product Listings\" as UC14\n    usecase \"Monitor User Activity\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Bidding Application:\n1. The system shall allow users to participate in online auctions.\n2. The system shall allow users to place bids on auction items.\n3. The system shall allow users to win auctions by placing the highest bid.\n4. The system shall support different auction categories for easy navigation.\n5. The system shall provide notifications for new bids and auction updates.\n6. The system shall include countdown timers for auctions.\n7. The system shall allow users to create accounts for managing their bidding activities.\n8. The system shall allow users to view available auction listings.\n9. The system shall allow users to track their bid histories.\n10. The system shall allow users to manage their auction wins.\n11. The system shall send auction alerts to users.\n12. The system shall allow users to manage their auction activities.\n13. The system shall allow users to view auction results after bidding ends.\n14. The system shall provide users with payment instructions after winning an auction.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Bidding_Application {\n    usecase \"Participate in Online Auctions\" as UC1\n    usecase \"Place Bids on Items\" as UC2\n    usecase \"Win Auctions\" as UC3\n    usecase \"Support Auction Categories\" as UC4\n    usecase \"Provide Bid Notifications\" as UC5\n    usecase \"Include Auction Countdowns\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Auction Listings\" as UC8\n    usecase \"Track Bid Histories\" as UC9\n    usecase \"Manage Auction Wins\" as UC10\n    usecase \"Receive Auction Alerts\" as UC11\n    usecase \"Manage Auction Activities\" as UC12\n    usecase \"View Auction Results\" as UC13\n    usecase \"Receive Payment Instructions\" as UC14\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for House Helper/Maid Finding Application:\n1. The system shall allow users to search for domestic helpers based on services, availability, and ratings.\n2. The system shall allow users to hire domestic helpers for household chores.\n3. The system shall allow users to view helper profiles, including services and ratings.\n4. The system shall allow users to request services from domestic helpers.\n5. The system shall allow users to schedule appointments with helpers.\n6. The system shall allow users to manage their bookings for helper services.\n7. The system shall track the service history of domestic helpers.\n8. The system shall allow users to provide feedback and ratings for domestic helpers.\n9. The system shall allow users to manage their preferences for selecting helpers.\n10. The system shall allow users to view service summaries after appointments.\n11. The system shall send users reminders for scheduled services.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle House_Helper_Finding_Application {\n    usecase \"Search for Helpers\" as UC1\n    usecase \"Hire Domestic Helpers\" as UC2\n    usecase \"View Helper Profiles\" as UC3\n    usecase \"Request Services\" as UC4\n    usecase \"Schedule Appointments\" as UC5\n    usecase \"Manage Bookings\" as UC6\n    usecase \"Track Service Histories\" as UC7\n    usecase \"Provide Feedback on Helpers\" as UC8\n    usecase \"Manage Helper Preferences\" as UC9\n    usecase \"View Service Summaries\" as UC10\n    usecase \"Receive Service Reminders\" as UC11\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Pharmaceutical Supply Chain Management System:\n1. The system shall allow pharmaceutical companies to track inventory of pharmaceutical products.\n2. The system shall allow pharmaceutical companies to manage orders for products.\n3. The system shall allow pharmaceutical companies to monitor shipments of pharmaceutical products.\n4. The system shall allow pharmaceutical companies to input production data for product management.\n5. The system shall allow pharmaceutical companies to generate purchase orders.\n6. The system shall allow pharmaceutical companies to track product deliveries.\n7. The system shall allow pharmaceutical companies to manage supplier relationships.\n8. The system shall allow pharmaceutical companies to track sales data.\n9. The system shall generate reports on product performance for pharmaceutical companies.\n10. The system shall allow administrators to oversee supply chain operations.\n11. The system shall allow administrators to allocate resources for supply chain management.\n12. The system shall allow administrators to ensure product quality across the supply chain.\n",
        "output": "@startuml\nleft to right direction\n\nactor PharmaceuticalCompany\nactor Administrator\n\nrectangle Pharmaceutical_Supply_Chain_Management_System {\n    usecase \"Track Inventory\" as UC1\n    usecase \"Manage Orders\" as UC2\n    usecase \"Monitor Shipments\" as UC3\n    usecase \"Input Production Data\" as UC4\n    usecase \"Generate Purchase Orders\" as UC5\n    usecase \"Track Product Deliveries\" as UC6\n    usecase \"Manage Suppliers\" as UC7\n    usecase \"Track Sales Data\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Oversee Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Product Quality\" as UC12\n}\n\nPharmaceuticalCompany --> UC1\nPharmaceuticalCompany --> UC2\nPharmaceuticalCompany --> UC3\nPharmaceuticalCompany --> UC4\nPharmaceuticalCompany --> UC5\nPharmaceuticalCompany --> UC6\nPharmaceuticalCompany --> UC7\nPharmaceuticalCompany --> UC8\nPharmaceuticalCompany --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Learn How to Code Application:\n1. The system shall allow users to learn programming languages through interactive tutorials.\n2. The system shall allow users to practice coding exercises to improve their skills.\n3. The system shall allow users to build software projects using project templates.\n4. The system shall provide coding tutorials for various programming languages.\n5. The system shall support code editors for users to write and test code.\n6. The system shall include project templates to assist users in building software projects.\n7. The system shall allow users to create accounts for managing their learning progress.\n8. The system shall allow users to view coding lessons provided by the platform.\n9. The system shall allow users to complete coding challenges to test their knowledge.\n10. The system shall track users' coding progress over time.\n11. The system shall allow users to manage code repositories for their projects.\n12. The system shall allow users to share code snippets with other users.\n13. The system shall allow users to manage their coding preferences.\n14. The system shall allow users to view their project histories.\n15. The system shall provide users with coding tips and suggestions to improve their skills.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Learn_How_to_Code_Application {\n    usecase \"Learn Programming Languages\" as UC1\n    usecase \"Practice Coding Exercises\" as UC2\n    usecase \"Build Software Projects\" as UC3\n    usecase \"Provide Coding Tutorials\" as UC4\n    usecase \"Support Code Editors\" as UC5\n    usecase \"Include Project Templates\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Coding Lessons\" as UC8\n    usecase \"Complete Coding Challenges\" as UC9\n    usecase \"Track Coding Progress\" as UC10\n    usecase \"Manage Code Repositories\" as UC11\n    usecase \"Share Code Snippets\" as UC12\n    usecase \"Manage Coding Preferences\" as UC13\n    usecase \"View Project Histories\" as UC14\n    usecase \"Receive Coding Tips\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Data Visualization Application:\n1. The system shall allow users to create visual representations of data.\n2. The system shall allow users to analyze trends based on the visualized data.\n3. The system shall allow users to present insights derived from data visualizations.\n4. The system shall provide data import tools for bringing in external data sets.\n5. The system shall support chart templates to assist users in visualizing data.\n6. The system shall include customization options for visual elements in charts.\n7. The system shall allow users to import data sets from various sources.\n8. The system shall allow users to create charts based on imported data.\n9. The system shall allow users to customize chart styles according to their preferences.\n10. The system shall allow users to save their visualizations for future reference.\n11. The system shall allow users to share data insights with others.\n12. The system shall allow users to export charts in various formats.\n13. The system shall allow users to manage their data sources.\n14. The system shall allow users to view the history of their visualizations.\n15. The system shall provide users with data analysis suggestions.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Data_Visualization_Application {\n    usecase \"Create Visual Representations\" as UC1\n    usecase \"Analyze Trends\" as UC2\n    usecase \"Present Insights\" as UC3\n    usecase \"Provide Data Import Tools\" as UC4\n    usecase \"Support Chart Templates\" as UC5\n    usecase \"Include Customization Options\" as UC6\n    usecase \"Import Data Sets\" as UC7\n    usecase \"Create Charts\" as UC8\n    usecase \"Customize Chart Styles\" as UC9\n    usecase \"Save Visualizations\" as UC10\n    usecase \"Share Data Insights\" as UC11\n    usecase \"Export Charts\" as UC12\n    usecase \"Manage Data Sources\" as UC13\n    usecase \"View Visualization Histories\" as UC14\n    usecase \"Receive Data Analysis Suggestions\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for 'Find the One' Matchmaking Application:\n1. The system shall allow users to find compatible partners using matching algorithms.\n2. The system shall allow users to build relationships and connect with like-minded individuals.\n3. The system shall provide user profiles for creating and managing user data.\n4. The system shall support matching algorithms to suggest potential partners.\n5. The system shall include chat messaging features for communication between users.\n6. The system shall allow users to create profiles to participate in matchmaking.\n7. The system shall allow users to view partner suggestions based on compatibility.\n8. The system shall allow users to send messages to potential matches.\n9. The system shall track relationship statuses of users.\n10. The system shall allow users to manage their connections with others.\n11. The system shall provide relationship advice to users.\n12. The system shall allow users to manage their privacy settings for safe interactions.\n13. The system shall allow users to view their relationship histories.\n14. The system shall notify users about new matches.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Find_the_One_Matchmaking_Application {\n    usecase \"Find Compatible Partners\" as UC1\n    usecase \"Build Relationships\" as UC2\n    usecase \"Connect with Like-Minded Individuals\" as UC3\n    usecase \"Provide User Profiles\" as UC4\n    usecase \"Support Matching Algorithms\" as UC5\n    usecase \"Include Chat Messaging Features\" as UC6\n    usecase \"Create Profiles\" as UC7\n    usecase \"View Partner Suggestions\" as UC8\n    usecase \"Send Messages\" as UC9\n    usecase \"Track Relationship Statuses\" as UC10\n    usecase \"Manage Connections\" as UC11\n    usecase \"Receive Relationship Advice\" as UC12\n    usecase \"Manage Privacy Settings\" as UC13\n    usecase \"View Relationship Histories\" as UC14\n    usecase \"Receive New Match Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for 'FoodPanda' Food Delivery Application:\n1. The system shall allow users to order food from restaurants for delivery.\n2. The system shall allow users to track the status of their food deliveries.\n3. The system shall allow users to provide feedback on the quality of the food they receive.\n4. The system shall support restaurant listings for users to browse available restaurants.\n5. The system shall allow users to browse menus of restaurants.\n6. The system shall allow users to customize their orders based on preferences.\n7. The system shall allow users to create accounts for managing orders and settings.\n8. The system shall allow users to place orders for food delivery.\n9. The system shall allow users to track the status of their orders in real-time.\n10. The system shall allow users to manage their delivery addresses for convenience.\n11. The system shall allow users to rate food items after receiving them.\n12. The system shall allow users to manage payment methods for seamless transactions.\n13. The system shall allow users to view their order histories.\n14. The system shall send notifications to users for order updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle FoodPanda_Food_Delivery_Application {\n    usecase \"Order Food from Restaurants\" as UC1\n    usecase \"Track Deliveries\" as UC2\n    usecase \"Provide Feedback on Food Quality\" as UC3\n    usecase \"Support Restaurant Listings\" as UC4\n    usecase \"Support Menu Browsing\" as UC5\n    usecase \"Support Order Customization\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"Browse Menus\" as UC8\n    usecase \"Place Orders for Delivery\" as UC9\n    usecase \"Track Order Statuses\" as UC10\n    usecase \"Manage Delivery Addresses\" as UC11\n    usecase \"Rate Food Items\" as UC12\n    usecase \"Manage Payment Methods\" as UC13\n    usecase \"View Order Histories\" as UC14\n    usecase \"Receive Order Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Web Vulnerability Scanner:\n1. The system shall allow hackers to identify security vulnerabilities in web applications.\n2. The system shall detect common vulnerabilities such as SQL injection and cross-site scripting.\n3. The system shall allow hackers to run scans on target URLs to detect vulnerabilities.\n4. The system shall allow hackers to analyze scan results for potential security flaws.\n5. The system shall generate reports detailing the vulnerabilities found in the scans.\n6. The system shall allow hackers to exploit detected security flaws.\n7. The system shall provide recommendations for remediating identified vulnerabilities.\n8. The system shall allow hackers to manage scan settings for customized scans.\n9. The system shall allow hackers to view the history of previous scans.\n10. The system shall send alerts to hackers when critical vulnerabilities are found.\n",
        "output": "@startuml\nleft to right direction\n\nactor Hacker\n\nrectangle Web_Vulnerability_Scanner {\n    usecase \"Identify Security Vulnerabilities\" as UC1\n    usecase \"Detect Common Vulnerabilities\" as UC2\n    usecase \"Run Scans\" as UC3\n    usecase \"Analyze Scan Results\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Exploit Security Flaws\" as UC6\n    usecase \"Get Recommendations\" as UC7\n    usecase \"Manage Scan Settings\" as UC8\n    usecase \"View Scan Histories\" as UC9\n    usecase \"Receive Alerts\" as UC10\n}\n\nHacker --> UC1\nHacker --> UC2\nHacker --> UC3\nHacker --> UC4\nHacker --> UC5\nHacker --> UC6\nHacker --> UC7\nHacker --> UC8\nHacker --> UC9\nHacker --> UC10\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Course Management System:\n1. The system shall allow students to enroll in courses.\n2. The system shall allow students to view course materials online.\n3. The system shall allow students to submit assignments for evaluation.\n4. The system shall allow instructors to create courses for students.\n5. The system shall allow instructors to upload course materials for student access.\n6. The system shall allow instructors to grade assignments submitted by students.\n7. The system shall allow students to search for available courses.\n8. The system shall allow students to access course materials after enrollment.\n9. The system shall track student progress through courses.\n10. The system shall manage course schedules for students and instructors.\n11. The system shall generate reports on course performance and student progress.\n12. The system shall allow instructors to monitor student performance.\n13. The system shall allow instructors to provide feedback on assignments.\n14. The system shall allow instructors to communicate with students directly.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Instructor\n\nrectangle Course_Management_System {\n    usecase \"Enroll in Courses\" as UC1\n    usecase \"View Course Materials\" as UC2\n    usecase \"Submit Assignments\" as UC3\n    usecase \"Create Courses\" as UC4\n    usecase \"Upload Course Materials\" as UC5\n    usecase \"Grade Assignments\" as UC6\n    usecase \"Search for Courses\" as UC7\n    usecase \"Access Course Materials\" as UC8\n    usecase \"Track Student Progress\" as UC9\n    usecase \"Manage Course Schedules\" as UC10\n    usecase \"Generate Course Reports\" as UC11\n    usecase \"Monitor Student Performance\" as UC12\n    usecase \"Provide Feedback on Assignments\" as UC13\n    usecase \"Communicate with Students\" as UC14\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC7\nStudent --> UC8\nStudent --> UC9\nStudent --> UC10\nStudent --> UC11\n\nInstructor --> UC4\nInstructor --> UC5\nInstructor --> UC6\nInstructor --> UC12\nInstructor --> UC13\nInstructor --> UC14\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Video Streaming Application:\n1. The system shall allow users to watch videos.\n2. The system shall allow users to create playlists of their favorite videos.\n3. The system shall allow users to share video content with friends.\n4. The system shall support video categories for browsing.\n5. The system shall provide search filters for narrowing down video searches.\n6. The system shall offer video recommendations based on user preferences.\n7. The system shall allow users to create accounts for personalized access.\n8. The system shall allow users to like or dislike videos.\n9. The system shall allow users to share videos on social media platforms.\n10. The system shall allow users to comment on videos.\n11. The system shall allow users to manage their video preferences.\n12. The system shall track users' video histories.\n13. The system shall send notifications to users when new content is available.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Video_Streaming_Application {\n    usecase \"Watch Videos\" as UC1\n    usecase \"Create Playlists\" as UC2\n    usecase \"Share Content\" as UC3\n    usecase \"Support Video Categories\" as UC4\n    usecase \"Support Search Filters\" as UC5\n    usecase \"Provide Video Recommendations\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"Like/Dislike Videos\" as UC8\n    usecase \"Share Videos on Social Media\" as UC9\n    usecase \"Comment on Videos\" as UC10\n    usecase \"Manage Video Preferences\" as UC11\n    usecase \"View Video Histories\" as UC12\n    usecase \"Receive New Content Notifications\" as UC13\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Zoo Management System:\n1. The system shall allow zookeepers to manage animals in the zoo.\n2. The system shall allow zookeepers to manage exhibits for animal display.\n3. The system shall allow zookeepers to manage visitor information.\n4. The system shall allow zookeepers to input animal data such as health records and feeding schedules.\n5. The system shall allow zookeepers to track feeding schedules for animals.\n6. The system shall allow zookeepers to monitor the health of animals.\n7. The system shall allow visitors to view exhibit information such as animal species and locations.\n8. The system shall allow visitors to purchase tickets for zoo entry.\n9. The system shall allow visitors to attend animal shows or events.\n10. The system shall allow administrators to manage exhibit maintenance and ensure their upkeep.\n11. The system shall track visitor attendance for reporting purposes.\n12. The system shall generate reports on animal populations and exhibits.\n13. The system shall allow administrators to oversee zoo operations.\n14. The system shall allow administrators to allocate resources such as staff and funds.\n15. The system shall ensure the safety of visitors during their time in the zoo.\n",
        "output": "@startuml\nleft to right direction\n\nactor Zookeeper\nactor Visitor\nactor Administrator \n\nrectangle Zoo_Management_System {\n    usecase \"Manage Animals\" as UC1\n    usecase \"Manage Exhibits\" as UC2\n    usecase \"Manage Visitor Information\" as UC3\n    usecase \"Input Animal Data\" as UC4\n    usecase \"Track Feeding Schedules\" as UC5\n    usecase \"Monitor Animal Health\" as UC6\n    usecase \"View Exhibit Information\" as UC7\n    usecase \"Purchase Tickets\" as UC8\n    usecase \"Attend Animal Shows\" as UC9\n    usecase \"Manage Exhibit Maintenance\" as UC10\n    usecase \"Track Visitor Attendance\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Visitor Safety\" as UC15\n}\n\nZookeeper --> UC1\nZookeeper --> UC2\nZookeeper --> UC3\nZookeeper --> UC4\nZookeeper --> UC5\nZookeeper --> UC6\n\nVisitor --> UC7\nVisitor --> UC8\nVisitor --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Welcome Party Planner Application:\n1. The system shall allow organizers to plan and manage welcome parties for new employees.\n2. The system shall allow organizers to manage party schedules.\n3. The system shall allow organizers to invite guests to the welcome parties.\n4. The system shall allow organizers to coordinate party activities.\n5. The system shall allow new employees to view party details.\n6. The system shall allow new employees to RSVP to events.\n7. The system shall allow new employees to participate in party games.\n8. The system shall allow organizers to manage party budgets for the events.\n9. The system shall allow organizers to track guest attendance.\n10. The system shall allow organizers to collect event feedback from guests.\n11. The system shall allow organizers to manage and customize party themes.\n12. The system shall allow organizers to view the history of past parties.\n13. The system shall send notifications to organizers for party updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor Organizer\nactor NewEmployee\n\nrectangle Welcome_Party_Planner_Application {\n    usecase \"Plan Welcome Parties\" as UC1\n    usecase \"Manage Party Schedules\" as UC2\n    usecase \"Invite Guests\" as UC3\n    usecase \"Coordinate Party Activities\" as UC4\n    usecase \"View Party Details\" as UC5\n    usecase \"RSVP to Events\" as UC6\n    usecase \"Participate in Party Games\" as UC7\n    usecase \"Manage Party Budgets\" as UC8\n    usecase \"Track Guest Attendance\" as UC9\n    usecase \"Provide Event Feedback\" as UC10\n    usecase \"Manage Party Themes\" as UC11\n    usecase \"View Party Histories\" as UC12\n    usecase \"Receive Party Updates\" as UC13\n}\n\nOrganizer --> UC1\nOrganizer --> UC2\nOrganizer --> UC3\nOrganizer --> UC4\nOrganizer --> UC8\nOrganizer --> UC9\nOrganizer --> UC10\nOrganizer --> UC11\nOrganizer --> UC12\nOrganizer --> UC13\n\nNewEmployee --> UC5\nNewEmployee --> UC6\nNewEmployee --> UC7\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Trip Planner Application:\n1. The system shall allow users to plan trips and create trip itineraries.\n2. The system shall allow users to organize and manage their travel itineraries.\n3. The system shall allow users to share their travel experiences with others.\n4. The system shall allow users to search for travel destinations.\n5. The system shall allow users to book accommodations for their trips.\n6. The system shall allow users to arrange transportation options for their travel.\n7. The system shall allow users to create trip plans and add activities to their itineraries.\n8. The system shall allow users to view detailed information about their trips.\n9. The system shall allow users to add activities to their trip itineraries.\n10. The system shall allow users to manage their trip budgets.\n11. The system shall allow users to track and manage their travel expenses.\n12. The system shall allow users to share trip photos and memories.\n13. The system shall allow users to manage their travel preferences for future trips.\n14. The system shall allow users to view their trip histories.\n15. The system shall send users notifications and updates for their trips.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Trip_Planner_Application {\n    usecase \"Plan Trips\" as UC1\n    usecase \"Organize Itineraries\" as UC2\n    usecase \"Share Travel Experiences\" as UC3\n    usecase \"Search Destinations\" as UC4\n    usecase \"Book Accommodations\" as UC5\n    usecase \"Arrange Transportation\" as UC6\n    usecase \"Create Trip Plans\" as UC7\n    usecase \"View Trip Details\" as UC8\n    usecase \"Add Activities to Itineraries\" as UC9\n    usecase \"Manage Trip Budgets\" as UC10\n    usecase \"Track Travel Expenses\" as UC11\n    usecase \"Share Trip Photos\" as UC12\n    usecase \"Manage Travel Preferences\" as UC13\n    usecase \"View Trip Histories\" as UC14\n    usecase \"Receive Trip Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Cafe Management System:\n1. The system shall allow cafe owners to manage orders placed by customers.\n2. The system shall track inventory levels for menu items and other products.\n3. The system shall analyze sales data to improve business performance.\n4. The system shall allow cafe owners to input and manage menu items.\n5. The system shall allow cafe owners to process customer orders.\n6. The system shall allow cafe owners to manage customer payments.\n7. The system shall allow customers to view menu options available at the cafe.\n8. The system shall allow customers to place orders for menu items.\n9. The system shall allow customers to pay for their purchases online or at the cafe.\n10. The system shall track inventory levels and notify owners of low stock.\n11. The system shall manage relationships with suppliers for inventory restocking.\n12. The system shall generate reports on sales performance for analysis.\n13. The system shall allow administrators to oversee cafe operations.\n14. The system shall allow administrators to allocate resources efficiently.\n15. The system shall ensure customer satisfaction by managing feedback and service quality.\n",
        "output": "@startuml\nleft to right direction\n\nactor CafeOwner\nactor Customer\nactor Administrator \n\nrectangle Cafe_Management_System {\n    usecase \"Manage Orders\" as UC1\n    usecase \"Track Inventory\" as UC2\n    usecase \"Analyze Sales Data\" as UC3\n    usecase \"Input Menu Items\" as UC4\n    usecase \"Process Orders\" as UC5\n    usecase \"Manage Customer Payments\" as UC6\n    usecase \"View Menu Options\" as UC7\n    usecase \"Place Orders\" as UC8\n    usecase \"Pay for Purchases\" as UC9\n    usecase \"Track Inventory Levels\" as UC10\n    usecase \"Manage Supplier Relationships\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Customer Satisfaction\" as UC15\n}\n\nCafeOwner --> UC1\nCafeOwner --> UC2\nCafeOwner --> UC3\nCafeOwner --> UC4\nCafeOwner --> UC5\nCafeOwner --> UC6\n\nCustomer --> UC7\nCustomer --> UC8\nCustomer --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Crime Management System:\n1. The system shall allow investigators to manage criminal cases.\n2. The system shall allow investigators to track suspects involved in criminal activities.\n3. The system shall allow investigators to analyze crime data for trends and insights.\n4. The system shall allow investigators to input case details such as descriptions, timelines, and evidence.\n5. The system shall allow investigators to gather evidence for criminal cases.\n6. The system shall allow investigators to identify potential suspects in ongoing cases.\n7. The system shall allow officers to search criminal records for investigation purposes.\n8. The system shall allow officers to issue warrants for arrests or searches.\n9. The system shall allow officers to make arrests of suspects.\n10. The system shall allow administrators to track the progress of cases.\n11. The system shall allow administrators to manage evidence storage for cases.\n12. The system shall generate reports on crime trends and case statistics.\n13. The system shall allow administrators to oversee law enforcement operations.\n14. The system shall allow administrators to allocate resources for crime management.\n15. The system shall ensure public safety by tracking crime and managing law enforcement activities.\n",
        "output": "@startuml\nleft to right direction\n\nactor Investigator\nactor Officer\nactor Administrator \n\nrectangle Crime_Management_System {\n    usecase \"Manage Criminal Cases\" as UC1\n    usecase \"Track Suspects\" as UC2\n    usecase \"Analyze Crime Data\" as UC3\n    usecase \"Input Case Details\" as UC4\n    usecase \"Gather Evidence\" as UC5\n    usecase \"Identify Suspects\" as UC6\n    usecase \"Search Criminal Records\" as UC7\n    usecase \"Issue Warrants\" as UC8\n    usecase \"Make Arrests\" as UC9\n    usecase \"Track Case Progress\" as UC10\n    usecase \"Manage Evidence Storage\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Public Safety\" as UC15\n}\n\nInvestigator --> UC1\nInvestigator --> UC2\nInvestigator --> UC3\nInvestigator --> UC4\nInvestigator --> UC5\nInvestigator --> UC6\n\nOfficer --> UC7\nOfficer --> UC8\nOfficer --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Intelligence Agency System:\n1. The system shall allow intelligence officers to manage national security threats.\n2. The system shall allow intelligence officers to track suspects involved in potential security threats.\n3. The system shall allow intelligence officers to analyze intelligence data for security insights.\n4. The system shall allow intelligence officers to input threat details, including descriptions and evidence.\n5. The system shall allow intelligence officers to gather intelligence related to national security.\n6. The system shall allow intelligence officers to identify suspects based on intelligence gathered.\n7. The system shall allow administrators to search criminal records for further investigation.\n8. The system shall allow administrators to issue warrants for security operations.\n9. The system shall allow administrators to make arrests based on warrants.\n10. The system shall allow administrators to track threat levels and updates.\n11. The system shall allow administrators to manage intelligence storage and security data.\n12. The system shall generate reports on security trends and intelligence data.\n13. The system shall allow administrators to oversee intelligence operations.\n14. The system shall allow administrators to allocate resources for national security.\n15. The system shall ensure national security through threat management and intelligence analysis.\n",
        "output": "@startuml\nleft to right direction\n\nactor IntelligenceOfficer\nactor Administrator \n\nrectangle Intelligence_Agency_System {\n    usecase \"Manage National Security Threats\" as UC1\n    usecase \"Track Suspects\" as UC2\n    usecase \"Analyze Intelligence Data\" as UC3\n    usecase \"Input Threat Details\" as UC4\n    usecase \"Gather Intelligence\" as UC5\n    usecase \"Identify Suspects\" as UC6\n    usecase \"Search Criminal Records\" as UC7\n    usecase \"Issue Warrants\" as UC8\n    usecase \"Make Arrests\" as UC9\n    usecase \"Track Threat Levels\" as UC10\n    usecase \"Manage Intelligence Storage\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure National Security\" as UC15\n}\n\nIntelligenceOfficer --> UC1\nIntelligenceOfficer --> UC2\nIntelligenceOfficer --> UC3\nIntelligenceOfficer --> UC4\nIntelligenceOfficer --> UC5\nIntelligenceOfficer --> UC6\n\nAdministrator --> UC7\nAdministrator --> UC8\nAdministrator --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Protest Management System:\n1. The system shall allow organizers to manage demonstrations and protests.\n2. The system shall allow organizers to track participants involved in protests.\n3. The system shall allow organizers to analyze protest data for insights.\n4. The system shall allow organizers to input protest details such as location, time, and participants.\n5. The system shall allow organizers to gather information related to protests.\n6. The system shall allow organizers to identify participants for coordination.\n7. The system shall allow officers to monitor protest activities to ensure safety.\n8. The system shall allow officers to issue permits for protests and demonstrations.\n9. The system shall allow officers to ensure public safety during protests.\n10. The system shall allow administrators to track the progress of protests.\n11. The system shall allow administrators to manage protest locations and logistics.\n12. The system shall generate reports on protest trends and data.\n13. The system shall allow administrators to oversee protest operations.\n14. The system shall allow administrators to allocate resources for protest management.\n15. The system shall ensure peaceful demonstrations through proper coordination and safety measures.\n",
        "output": "@startuml\nleft to right direction\n\nactor Organizer\nactor Officer\nactor Administrator \n\nrectangle Protest_Management_System {\n    usecase \"Manage Demonstrations\" as UC1\n    usecase \"Track Participants\" as UC2\n    usecase \"Analyze Protest Data\" as UC3\n    usecase \"Input Protest Details\" as UC4\n    usecase \"Gather Information\" as UC5\n    usecase \"Identify Participants\" as UC6\n    usecase \"Monitor Protest Activities\" as UC7\n    usecase \"Issue Permits\" as UC8\n    usecase \"Ensure Public Safety\" as UC9\n    usecase \"Track Protest Progress\" as UC10\n    usecase \"Manage Protest Locations\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Peaceful Demonstrations\" as UC15\n}\n\nOrganizer --> UC1\nOrganizer --> UC2\nOrganizer --> UC3\nOrganizer --> UC4\nOrganizer --> UC5\nOrganizer --> UC6\n\nOfficer --> UC7\nOfficer --> UC8\nOfficer --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Boycott Management System:\n1. The system shall allow activists to organize boycotts and manage protest activities.\n2. The system shall allow activists to track the supporters involved in the boycott.\n3. The system shall allow activists to analyze boycott data and trends for insights.\n4. The system shall allow activists to input boycott details, including location and objectives.\n5. The system shall allow activists to gather information related to the boycott.\n6. The system shall allow activists to identify supporters and manage their involvement.\n7. The system shall allow officers to monitor boycott activities and ensure public safety.\n8. The system shall allow officers to issue public statements during the boycott.\n9. The system shall allow officers to ensure public safety during the boycott.\n10. The system shall allow administrators to track boycott progress and updates.\n11. The system shall allow administrators to manage boycott locations and logistics.\n12. The system shall generate reports on boycott trends and data analysis.\n13. The system shall allow administrators to oversee boycott operations.\n14. The system shall allow administrators to allocate resources for managing the boycott.\n15. The system shall ensure peaceful demonstrations by coordinating with law enforcement.\n",
        "output": "@startuml\nleft to right direction\n\nactor Activist\nactor Officer\nactor Administrator \n\nrectangle Boycott_Management_System {\n    usecase \"Organize Boycotts\" as UC1\n    usecase \"Track Supporters\" as UC2\n    usecase \"Analyze Boycott Data\" as UC3\n    usecase \"Input Boycott Details\" as UC4\n    usecase \"Gather Information\" as UC5\n    usecase \"Identify Supporters\" as UC6\n    usecase \"Monitor Boycott Activities\" as UC7\n    usecase \"Issue Statements\" as UC8\n    usecase \"Ensure Public Safety\" as UC9\n    usecase \"Track Boycott Progress\" as UC10\n    usecase \"Manage Boycott Locations\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Peaceful Demonstrations\" as UC15\n}\n\nActivist --> UC1\nActivist --> UC2\nActivist --> UC3\nActivist --> UC4\nActivist --> UC5\nActivist --> UC6\n\nOfficer --> UC7\nOfficer --> UC8\nOfficer --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Disaster Management System:\n1. The system shall allow responders to manage disaster incidents and response activities.\n2. The system shall allow responders to track victims affected by disasters.\n3. The system shall allow responders to analyze disaster data for insights.\n4. The system shall allow responders to input disaster details, including location and severity.\n5. The system shall allow responders to gather information during the disaster response.\n6. The system shall allow responders to identify victims for rescue operations.\n7. The system shall allow officers to monitor disaster activities to ensure public safety.\n8. The system shall allow officers to issue alerts and warnings during disasters.\n9. The system shall ensure public safety during disaster events.\n10. The system shall allow administrators to track disaster progress and updates.\n11. The system shall allow administrators to manage disaster locations and logistics.\n12. The system shall generate reports on disaster trends and data analysis.\n13. The system shall allow administrators to oversee disaster operations.\n14. The system shall allow administrators to allocate resources for disaster response.\n15. The system shall ensure timely responses by coordinating resources effectively.\n",
        "output": "@startuml\nleft to right direction\n\nactor Responder\nactor Officer\nactor Administrator \n\nrectangle Disaster_Management_System {\n    usecase \"Manage Disasters\" as UC1\n    usecase \"Track Victims\" as UC2\n    usecase \"Analyze Disaster Data\" as UC3\n    usecase \"Input Disaster Details\" as UC4\n    usecase \"Gather Information\" as UC5\n    usecase \"Identify Victims\" as UC6\n    usecase \"Monitor Disaster Activities\" as UC7\n    usecase \"Issue Alerts\" as UC8\n    usecase \"Ensure Public Safety\" as UC9\n    usecase \"Track Disaster Progress\" as UC10\n    usecase \"Manage Disaster Locations\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Timely Responses\" as UC15\n}\n\nResponder --> UC1\nResponder --> UC2\nResponder --> UC3\nResponder --> UC4\nResponder --> UC5\nResponder --> UC6\n\nOfficer --> UC7\nOfficer --> UC8\nOfficer --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Disaster Recovery System:\n1. The system shall allow organizations to recover from disasters and restore business operations.\n2. The system shall allow organizations to restore operations and critical systems after disasters.\n3. The system shall minimize downtime during the disaster recovery process.\n4. The system shall allow organizations to input disaster recovery plans for future incidents.\n5. The system shall allow organizations to activate recovery procedures when necessary.\n6. The system shall allow organizations to restore critical systems affected by the disaster.\n7. The system shall allow IT staff to monitor recovery progress during the recovery phase.\n8. The system shall allow IT staff to test backup systems for operational readiness.\n9. The system shall allow IT staff to ensure data integrity during recovery.\n10. The system shall track recovery timelines to measure the speed of restoration.\n11. The system shall manage resources required for disaster recovery efforts.\n12. The system shall generate reports on disaster recovery performance and timelines.\n13. The system shall allow administrators to oversee recovery operations and strategies.\n14. The system shall allow administrators to allocate resources effectively for recovery.\n15. The system shall ensure business continuity by minimizing downtime and restoring operations.\n",
        "output": "@startuml\nleft to right direction\n\nactor Organization\nactor ITStaff\nactor Administrator \n\nrectangle Disaster_Recovery_System {\n    usecase \"Recover from Disasters\" as UC1\n    usecase \"Restore Operations\" as UC2\n    usecase \"Minimize Downtime\" as UC3\n    usecase \"Input Recovery Plans\" as UC4\n    usecase \"Activate Recovery Procedures\" as UC5\n    usecase \"Restore Critical Systems\" as UC6\n    usecase \"Monitor Recovery Progress\" as UC7\n    usecase \"Test Backup Systems\" as UC8\n    usecase \"Ensure Data Integrity\" as UC9\n    usecase \"Track Recovery Timelines\" as UC10\n    usecase \"Manage Recovery Resources\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Oversee Operations\" as UC13\n    usecase \"Allocate Resources\" as UC14\n    usecase \"Ensure Business Continuity\" as UC15\n}\n\nOrganization --> UC1\nOrganization --> UC2\nOrganization --> UC3\nOrganization --> UC4\nOrganization --> UC5\nOrganization --> UC6\n\nITStaff --> UC7\nITStaff --> UC8\nITStaff --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Calculator Application:\n1. The system shall allow users to perform basic arithmetic operations such as addition, subtraction, multiplication, and division.\n2. The system shall provide a user-friendly interface for interacting with the calculator.\n3. The system shall allow users to input numerical values and select mathematical operators.\n4. The system shall display calculation results to the users.\n5. The system shall include the option to clear input values for new calculations.\n6. The system shall allow users to perform multiple operations in a sequence.\n7. The system shall save calculation history for reference.\n8. The system shall allow users to customize calculator settings, such as number format or theme.\n9. The system shall provide access to past calculations through a calculation log.\n10. The system shall notify users in case of calculation errors or invalid inputs.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Calculator_Application {\n    usecase \"Perform Addition\" as UC1\n    usecase \"Perform Subtraction\" as UC2\n    usecase \"Perform Multiplication\" as UC3\n    usecase \"Perform Division\" as UC4\n    usecase \"Provide User-Friendly Interface\" as UC5\n    usecase \"Input Numerical Values\" as UC6\n    usecase \"Select Operators\" as UC7\n    usecase \"View Calculation Results\" as UC8\n    usecase \"Clear Input\" as UC9\n    usecase \"Perform Multiple Operations\" as UC10\n    usecase \"Save Calculation History\" as UC11\n    usecase \"Customize Calculator Settings\" as UC12\n    usecase \"View Calculation Logs\" as UC13\n    usecase \"Receive Calculation Error Notifications\" as UC14\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Code Repository Platform:\n1. The system shall allow developers to manage source code for software development projects.\n2. The system shall facilitate collaboration on projects by providing tools for multiple developers to work together.\n3. The system shall track code changes and version control using appropriate tools.\n4. The system shall provide version control tools to manage revisions and updates to the codebase.\n5. The system shall support code review features to allow developers to review and approve code changes.\n6. The system shall include project management capabilities for organizing and tracking project progress.\n7. The system shall allow developers to create repositories to store project code.\n8. The system shall allow developers to commit code changes and save them in the repository.\n9. The system shall allow developers to merge code branches when working on multiple features.\n10. The system shall track code histories, including changes made by different developers.\n11. The system shall allow developers to manage project issues, such as bug tracking and feature requests.\n12. The system shall automate code testing to verify the functionality of code changes.\n13. The system shall allow developers to manage access permissions for the code repository.\n14. The system shall provide project wikis for sharing project documentation.\n15. The system shall send notifications to developers about updates or changes to the code.\n",
        "output": "@startuml\nleft to right direction\n\nactor Developer\n\nrectangle Code_Repository_Platform {\n    usecase \"Manage Source Code\" as UC1\n    usecase \"Collaborate on Projects\" as UC2\n    usecase \"Track Code Changes\" as UC3\n    usecase \"Provide Version Control Tools\" as UC4\n    usecase \"Support Code Review Features\" as UC5\n    usecase \"Include Project Management Capabilities\" as UC6\n    usecase \"Create Repositories\" as UC7\n    usecase \"Commit Code Changes\" as UC8\n    usecase \"Merge Code Branches\" as UC9\n    usecase \"Track Code Histories\" as UC10\n    usecase \"Manage Project Issues\" as UC11\n    usecase \"Automate Code Testing\" as UC12\n    usecase \"Manage Code Access Permissions\" as UC13\n    usecase \"View Project Wikis\" as UC14\n    usecase \"Receive Code Update Notifications\" as UC15\n}\n\nDeveloper --> UC1\nDeveloper --> UC2\nDeveloper --> UC3\nDeveloper --> UC4\nDeveloper --> UC5\nDeveloper --> UC6\nDeveloper --> UC7\nDeveloper --> UC8\nDeveloper --> UC9\nDeveloper --> UC10\nDeveloper --> UC11\nDeveloper --> UC12\nDeveloper --> UC13\nDeveloper --> UC14\nDeveloper --> UC15\n@enduml"
    },
    {
        "input": "Give me a use case diagram for this system. Functional Requirements for Meeting Scheduler Application:\n1. The system shall allow users to schedule meetings by selecting dates, times, and participants.\n2. The system shall allow users to invite participants to the meeting via email or other communication methods.\n3. The system shall allow users to manage meeting details, including the location, agenda, and duration.\n4. The system shall integrate with users' calendars for better scheduling.\n5. The system shall support availability checks for participants to find suitable meeting times.\n6. The system shall send reminder notifications to users for upcoming meetings.\n7. The system shall allow users to create meeting requests and share them with participants.\n8. The system shall allow users to send meeting invitations to participants.\n9. The system shall allow users to set meeting agendas and distribute them to participants.\n10. The system shall track meeting schedules and maintain a record of upcoming and past meetings.\n11. The system shall manage participant responses to meeting invitations (accept/decline).\n12. The system shall generate meeting reports, including attendance and meeting notes.\n13. The system shall allow users to customize meeting settings, such as notification preferences.\n14. The system shall provide users with access to past meeting histories.\n15. The system shall send notifications to users about meeting updates or cancellations.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Meeting_Scheduler_Application {\n    usecase \"Schedule Meetings\" as UC1\n    usecase \"Invite Participants\" as UC2\n    usecase \"Manage Meeting Details\" as UC3\n    usecase \"Provide Calendar Integration\" as UC4\n    usecase \"Support Availability Checks\" as UC5\n    usecase \"Send Reminder Notifications\" as UC6\n    usecase \"Create Meeting Requests\" as UC7\n    usecase \"Send Invitations\" as UC8\n    usecase \"Set Meeting Agendas\" as UC9\n    usecase \"Track Meeting Schedules\" as UC10\n    usecase \"Manage Participant Responses\" as UC11\n    usecase \"Generate Meeting Reports\" as UC12\n    usecase \"Customize Meeting Settings\" as UC13\n    usecase \"View Meeting Histories\" as UC14\n    usecase \"Receive Meeting Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Webinar Platform:\n1. The system shall allow users (hosts) to host webinars with interactive features and audience engagement options.\n2. The system shall allow hosts to schedule webinars, invite participants, and present webinar content.\n3. The system shall allow hosts to track attendee interactions, such as Q&A and polls, during webinars.\n4. The system shall allow hosts to manage webinar recordings and store them for future access.\n5. The system shall provide tools for generating analytics reports on webinar performance.\n6. The system shall allow hosts to customize webinar settings, such as layout and branding.\n7. The system shall allow hosts to view the history of previous webinars.\n8. The system shall send notifications to hosts about upcoming webinars.\n",
        "output": "@startuml\nleft to right direction\n\nactor Host\n\nrectangle Webinar_Platform {\n    usecase \"Host Webinars\" as UC1\n    usecase \"Engage with Attendees\" as UC2\n    usecase \"Analyze Webinar Data\" as UC3\n    usecase \"Provide Webinar Creation Tools\" as UC4\n    usecase \"Support Interactive Features\" as UC5\n    usecase \"Offer Audience Engagement Options\" as UC6\n    usecase \"Schedule Webinars\" as UC7\n    usecase \"Invite Participants\" as UC8\n    usecase \"Present Webinar Content\" as UC9\n    usecase \"Track Attendee Interactions\" as UC10\n    usecase \"Manage Webinar Recordings\" as UC11\n    usecase \"Generate Analytics Reports\" as UC12\n    usecase \"Customize Webinar Settings\" as UC13\n    usecase \"View Webinar Histories\" as UC14\n    usecase \"Receive Webinar Notifications\" as UC15\n}\n\nHost --> UC1\nHost --> UC2\nHost --> UC3\nHost --> UC4\nHost --> UC5\nHost --> UC6\nHost --> UC7\nHost --> UC8\nHost --> UC9\nHost --> UC10\nHost --> UC11\nHost --> UC12\nHost --> UC13\nHost --> UC14\nHost --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Video Conferencing Application (Zoom):\n1. The system shall allow users to host virtual meetings and collaborate with team members and clients.\n2. The system shall provide video and audio conferencing tools for communication.\n3. The system shall allow users to share their screens during meetings.\n4. The system shall include a chat messaging feature for communication during meetings.\n5. The system shall allow users to schedule meetings, invite participants, and join virtual rooms.\n6. The system shall allow users to record meetings for future reference.\n7. The system shall allow users to manage meeting settings, such as mute/unmute participants.\n8. The system shall generate meeting reports with attendance and meeting details.\n9. The system shall allow users to customize virtual meeting backgrounds.\n10. The system shall allow users to view the history of previous meetings.\n11. The system shall notify users of upcoming meetings.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Zoom_Video_Conferencing_Application {\n    usecase \"Host Virtual Meetings\" as UC1\n    usecase \"Collaborate with Team Members\" as UC2\n    usecase \"Communicate with Clients\" as UC3\n    usecase \"Provide Video Conferencing Tools\" as UC4\n    usecase \"Offer Screen Sharing Features\" as UC5\n    usecase \"Support Chat Messaging Options\" as UC6\n    usecase \"Schedule Meetings\" as UC7\n    usecase \"Invite Participants\" as UC8\n    usecase \"Join Virtual Rooms\" as UC9\n    usecase \"Record Meetings\" as UC10\n    usecase \"Manage Meeting Settings\" as UC11\n    usecase \"Generate Meeting Reports\" as UC12\n    usecase \"Customize Meeting Backgrounds\" as UC13\n    usecase \"View Meeting Histories\" as UC14\n    usecase \"Receive Meeting Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Team Collaboration Platform (Slack):\n1. The system shall allow users to communicate, share files, and collaborate on projects using messaging channels.\n2. The system shall allow users to create channels for team communication and project discussions.\n3. The system shall allow users to send messages and share documents in the platform.\n4. The system shall provide tools for tracking project progress and managing team tasks.\n5. The system shall generate productivity reports based on task completion and collaboration.\n6. The system shall allow users to customize notification settings based on their preferences.\n7. The system shall provide access to message histories for reference.\n8. The system shall send alerts to users for important updates related to the project or messages.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Slack_Team_Collaboration_Platform {\n    usecase \"Communicate\" as UC1\n    usecase \"Share Files\" as UC2\n    usecase \"Collaborate on Projects\" as UC3\n    usecase \"Provide Messaging Channels\" as UC4\n    usecase \"Offer File Sharing Options\" as UC5\n    usecase \"Support Project Management Tools\" as UC6\n    usecase \"Create Channels\" as UC7\n    usecase \"Send Messages\" as UC8\n    usecase \"Share Documents\" as UC9\n    usecase \"Track Project Progress\" as UC10\n    usecase \"Manage Team Tasks\" as UC11\n    usecase \"Generate Productivity Reports\" as UC12\n    usecase \"Customize Notification Settings\" as UC13\n    usecase \"View Message Histories\" as UC14\n    usecase \"Receive Alerts\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Project Management Tool (Trello):\n1. The system shall allow users to organize tasks and track project progress.\n2. The system shall provide task boards, task cards, and project timelines for task organization.\n3. The system shall allow users to create task boards, add task cards, and assign tasks to team members.\n4. The system shall allow users to track task statuses, manage project deadlines, and generate progress reports.\n5. The system shall allow users to customize task labels, view task histories, and receive notifications for task updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Trello_Project_Management_Tool {\n    usecase \"Organize Tasks\" as UC1\n    usecase \"Track Project Progress\" as UC2\n    usecase \"Collaborate with Team Members\" as UC3\n    usecase \"Provide Task Boards\" as UC4\n    usecase \"Offer Task Cards\" as UC5\n    usecase \"Support Project Timelines\" as UC6\n    usecase \"Create Task Boards\" as UC7\n    usecase \"Add Task Cards\" as UC8\n    usecase \"Assign Tasks\" as UC9\n    usecase \"Track Task Statuses\" as UC10\n    usecase \"Manage Project Deadlines\" as UC11\n    usecase \"Generate Progress Reports\" as UC12\n    usecase \"Customize Task Labels\" as UC13\n    usecase \"View Task Histories\" as UC14\n    usecase \"Receive Task Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Celebrity News and Events Platform:\n1. The system shall allow users to stay updated on celebrity news, explore profiles, and view event schedules.\n2. The system shall provide news articles, event listings, and celebrity profiles for user exploration.\n3. The system shall allow users to read news articles, view event schedules, and explore celebrity profiles.\n4. The system shall track trending topics, manage event registrations, and generate reports on celebrity engagements.\n5. The system shall allow users to customize news preferences, view event histories, and receive notifications for upcoming events.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Celebrity_News_and_Events_Platform {\n    usecase \"Stay Updated on Celebrity News\" as UC1\n    usecase \"Explore Celebrity Profiles\" as UC2\n    usecase \"View Event Schedules\" as UC3\n    usecase \"Provide News Articles\" as UC4\n    usecase \"Offer Event Listings\" as UC5\n    usecase \"Support Celebrity Profiles\" as UC6\n    usecase \"Read News Articles\" as UC7\n    usecase \"View Event Schedules\" as UC8\n    usecase \"Explore Celebrity Profiles\" as UC9\n    usecase \"Track Trending Topics\" as UC10\n    usecase \"Manage Event Registrations\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize News Preferences\" as UC13\n    usecase \"View Event Histories\" as UC14\n    usecase \"Receive Event Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Tech-Talk Platform:\n1. The system shall allow users to engage in tech discussions, share knowledge, and collaborate on tech projects.\n2. The system shall provide discussion forums, knowledge-sharing tools, and project management features.\n3. The system shall allow users to participate in discussions, share tech resources, and collaborate on tech projects.\n4. The system shall track tech trends, manage project tasks, and generate reports on tech innovations.\n5. The system shall allow users to customize discussion preferences, view project histories, and receive notifications for tech updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Tech_Talk_Platform {\n    usecase \"Engage in Tech Discussions\" as UC1\n    usecase \"Share Knowledge\" as UC2\n    usecase \"Collaborate on Tech Projects\" as UC3\n    usecase \"Provide Discussion Forums\" as UC4\n    usecase \"Offer Knowledge Sharing Tools\" as UC5\n    usecase \"Support Project Management Features\" as UC6\n    usecase \"Participate in Tech Discussions\" as UC7\n    usecase \"Share Tech Resources\" as UC8\n    usecase \"Collaborate on Tech Projects\" as UC9\n    usecase \"Track Tech Trends\" as UC10\n    usecase \"Manage Project Tasks\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Discussion Preferences\" as UC13\n    usecase \"View Project Histories\" as UC14\n    usecase \"Receive Tech Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for Babysitter Management System:\n1. The system shall allow parents to search for available babysitters and book babysitting appointments.\n2. The system shall allow parents to communicate with babysitters, track babysitting sessions, and manage payment transactions.\n3. Babysitters shall be able to view babysitting requests, accept appointments, and provide care for children.\n4. The system shall include features for tracking babysitting schedules, generating reports on babysitter performance, and notifying parents of babysitting updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor Parent\nactor Babysitter\n\nrectangle Babysitter_Management_System {\n    usecase \"Find Babysitters\" as UC1\n    usecase \"Schedule Babysitting Sessions\" as UC2\n    usecase \"Track Babysitter Activities\" as UC3\n    usecase \"Search for Available Babysitters\" as UC4\n    usecase \"Book Babysitting Appointments\" as UC5\n    usecase \"Communicate with Babysitters\" as UC6\n    usecase \"View Babysitting Requests\" as UC7\n    usecase \"Accept Appointments\" as UC8\n    usecase \"Provide Care for Children\" as UC9\n    usecase \"Track Babysitting Schedules\" as UC10\n    usecase \"Manage Payment Transactions\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Babysitting Preferences\" as UC13\n    usecase \"View Babysitter Histories\" as UC14\n    usecase \"Receive Babysitting Updates\" as UC15\n}\n\nParent --> UC1\nParent --> UC2\nParent --> UC3\nParent --> UC4\nParent --> UC5\nParent --> UC6\n\nBabysitter --> UC7\nBabysitter --> UC8\nBabysitter --> UC9\n\nParent --> UC10\nParent --> UC11\nParent --> UC12\nParent --> UC13\nParent --> UC14\nParent --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for WhatsApp Sticker Maker Application:\n1. The system shall allow users to create custom stickers by designing stickers, importing images, and adding text.\n2. The system shall allow users to save stickers to collections, share stickers with friends, and download sticker packs.\n3. The system shall include features for editing sticker designs, managing sticker categories, and generating reports on sticker usage.\n4. The system shall allow users to customize sticker settings, view sticker histories, and receive notifications for sticker updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle WhatsApp_Sticker_Maker_Application {\n    usecase \"Create Custom Stickers\" as UC1\n    usecase \"Share Stickers with Friends\" as UC2\n    usecase \"Manage Sticker Collections\" as UC3\n    usecase \"Design Stickers\" as UC4\n    usecase \"Import Images\" as UC5\n    usecase \"Add Text to Stickers\" as UC6\n    usecase \"Save Stickers to Collections\" as UC7\n    usecase \"Share Stickers in Chats\" as UC8\n    usecase \"Download Sticker Packs\" as UC9\n    usecase \"Edit Sticker Designs\" as UC10\n    usecase \"Manage Sticker Categories\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Sticker Settings\" as UC13\n    usecase \"View Sticker Histories\" as UC14\n    usecase \"Receive Sticker Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for AI-Based Slides/Presentation Maker:\n1. The system shall allow users to create professional presentations by designing slides, adding content, and customizing slide layouts.\n2. The system shall provide templates, design tools, and data visualization options for slide creation.\n3. The system shall include features for tracking presentation progress, managing slide transitions, and generating reports on presentation engagement.\n4. The system shall allow users to customize presentation settings, view presentation histories, and receive notifications for presentation updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle AI_Based_Slides_Presentation_Maker {\n    usecase \"Create Professional Presentations\" as UC1\n    usecase \"Design Slides\" as UC2\n    usecase \"Analyze Presentation Data\" as UC3\n    usecase \"Provide Templates\" as UC4\n    usecase \"Offer Design Tools\" as UC5\n    usecase \"Support Data Visualization Options\" as UC6\n    usecase \"Create Slides\" as UC7\n    usecase \"Add Content\" as UC8\n    usecase \"Customize Slide Layouts\" as UC9\n    usecase \"Track Presentation Progress\" as UC10\n    usecase \"Manage Slide Transitions\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Presentation Settings\" as UC13\n    usecase \"View Presentation Histories\" as UC14\n    usecase \"Receive Presentation Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for AI-Based Resume Builder:\n1. The system shall allow users to create professional resumes.\n2. The system shall allow users to design resume templates.\n3. The system shall allow users to analyze resume data.\n4. The system shall provide resume templates.\n5. The system shall provide design tools.\n6. The system shall support data visualization options.\n7. The system shall allow users to create resumes.\n8. The system shall allow users to add content to resumes.\n9. The system shall allow users to customize resume layouts.\n10. The system shall allow users to track resume progress.\n11. The system shall allow users to manage resume sections.\n12. The system shall generate reports on resume engagement.\n13. The system shall allow users to customize resume settings.\n14. The system shall allow users to view resume histories.\n15. The system shall notify users of resume updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle AI_Based_Resume_Builder {\n    usecase \"Create Professional Resumes\" as UC1\n    usecase \"Design Resume Templates\" as UC2\n    usecase \"Analyze Resume Data\" as UC3\n    usecase \"Provide Resume Templates\" as UC4\n    usecase \"Offer Design Tools\" as UC5\n    usecase \"Support Data Visualization Options\" as UC6\n    usecase \"Create Resumes\" as UC7\n    usecase \"Add Content\" as UC8\n    usecase \"Customize Resume Layouts\" as UC9\n    usecase \"Track Resume Progress\" as UC10\n    usecase \"Manage Resume Sections\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Resume Settings\" as UC13\n    usecase \"View Resume Histories\" as UC14\n    usecase \"Receive Resume Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for AI-Based Chatbot:\n1. The system shall allow users to interact with automated responses.\n2. The system shall allow users to provide information through the chatbot.\n3. The system shall analyze user queries.\n4. The system shall provide chatbot templates.\n5. The system shall offer design tools for chatbot creation.\n6. The system shall support data visualization options.\n7. The system shall allow users to chat with the chatbot.\n8. The system shall allow users to ask questions.\n9. The system shall allow users to receive answers.\n10. The system shall track chatbot interactions.\n11. The system shall manage user queries.\n12. The system shall generate reports on chatbot performance.\n13. The system shall allow users to customize chatbot settings.\n14. The system shall allow users to view chatbot histories.\n15. The system shall notify users of chatbot updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle AI_Based_Chatbot {\n    usecase \"Interact with Automated Responses\" as UC1\n    usecase \"Provide Information\" as UC2\n    usecase \"Analyze User Queries\" as UC3\n    usecase \"Provide Chatbot Templates\" as UC4\n    usecase \"Offer Design Tools\" as UC5\n    usecase \"Support Data Visualization Options\" as UC6\n    usecase \"Chat with Chatbot\" as UC7\n    usecase \"Ask Questions\" as UC8\n    usecase \"Receive Answers\" as UC9\n    usecase \"Track Chatbot Interactions\" as UC10\n    usecase \"Manage User Queries\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Chatbot Settings\" as UC13\n    usecase \"View Chatbot Histories\" as UC14\n    usecase \"Receive Chatbot Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for VR-Based Training Platform:\n1. The system shall allow users to engage in virtual training sessions.\n2. The system shall allow users to learn new skills.\n3. The system shall analyze training data.\n4. The system shall provide VR training modules.\n5. The system shall offer interactive simulations.\n6. The system shall support progress tracking tools.\n7. The system shall allow users to participate in VR training sessions.\n8. The system shall allow users to complete skill challenges.\n9. The system shall provide feedback on user performance.\n10. The system shall track user training progress.\n11. The system shall manage skill assessments.\n12. The system shall generate reports on training outcomes.\n13. The system shall allow users to customize training settings.\n14. The system shall allow users to view training histories.\n15. The system shall notify users of training updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle VR_Based_Training_Platform {\n    usecase \"Engage in Virtual Training Sessions\" as UC1\n    usecase \"Learn New Skills\" as UC2\n    usecase \"Analyze Training Data\" as UC3\n    usecase \"Provide VR Training Modules\" as UC4\n    usecase \"Offer Interactive Simulations\" as UC5\n    usecase \"Support Progress Tracking Tools\" as UC6\n    usecase \"Participate in VR Training Sessions\" as UC7\n    usecase \"Complete Skill Challenges\" as UC8\n    usecase \"Receive Feedback on Performance\" as UC9\n    usecase \"Track Training Progress\" as UC10\n    usecase \"Manage Skill Assessments\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Training Settings\" as UC13\n    usecase \"View Training Histories\" as UC14\n    usecase \"Receive Training Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for Connexus VR-Based Social Platform:\n1. The system shall allow users to connect with like-minded individuals.\n2. The system shall allow users to engage in virtual social activities.\n3. The system shall analyze social interactions.\n4. The system shall provide VR social spaces for users.\n5. The system shall offer interactive games.\n6. The system shall support privacy settings for users.\n7. The system shall allow users to create virtual avatars.\n8. The system shall allow users to join social events.\n9. The system shall allow users to interact with other users.\n10. The system shall track social connections of users.\n11. The system shall allow users to manage privacy preferences.\n12. The system shall generate reports on social engagements.\n13. The system shall allow users to customize social settings.\n14. The system shall allow users to view social histories.\n15. The system shall notify users of social updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Connexus_VR_Social_Platform {\n    usecase \"Connect with Like-Minded Individuals\" as UC1\n    usecase \"Engage in Virtual Social Activities\" as UC2\n    usecase \"Analyze Social Interactions\" as UC3\n    usecase \"Provide VR Social Spaces\" as UC4\n    usecase \"Offer Interactive Games\" as UC5\n    usecase \"Support Privacy Settings\" as UC6\n    usecase \"Create Virtual Avatars\" as UC7\n    usecase \"Join Social Events\" as UC8\n    usecase \"Interact with Other Users\" as UC9\n    usecase \"Track Social Connections\" as UC10\n    usecase \"Manage Privacy Preferences\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Social Settings\" as UC13\n    usecase \"View Social Histories\" as UC14\n    usecase \"Receive Social Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for VR-Based Public Speaking App:\n1. The system shall allow users to overcome stage fright.\n2. The system shall allow users to practice public speaking.\n3. The system shall analyze speaking performance.\n4. The system shall provide VR speaking environments.\n5. The system shall offer speech coaching tools.\n6. The system shall support audience feedback options.\n7. The system shall allow users to practice speeches.\n8. The system shall provide coaching tips to users.\n9. The system shall allow users to improve their speaking skills.\n10. The system shall track the speaking progress of users.\n11. The system shall allow users to manage speech evaluations.\n12. The system shall generate reports on speaking performance.\n13. The system shall allow users to customize speaking settings.\n14. The system shall allow users to view speaking histories.\n15. The system shall notify users of speaking updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle VR_Based_Public_Speaking_App {\n    usecase \"Overcome Stage Fright\" as UC1\n    usecase \"Practice Public Speaking\" as UC2\n    usecase \"Analyze Speaking Performance\" as UC3\n    usecase \"Provide VR Speaking Environments\" as UC4\n    usecase \"Offer Speech Coaching Tools\" as UC5\n    usecase \"Support Audience Feedback Options\" as UC6\n    usecase \"Practice Speeches\" as UC7\n    usecase \"Receive Coaching Tips\" as UC8\n    usecase \"Improve Speaking Skills\" as UC9\n    usecase \"Track Speaking Progress\" as UC10\n    usecase \"Manage Speech Evaluations\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Speaking Settings\" as UC13\n    usecase \"View Speaking Histories\" as UC14\n    usecase \"Receive Speaking Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for VR-Based Physiotherapy App:\n1. The system shall allow users to perform physical therapy exercises.\n2. The system shall allow users to track their rehabilitation progress.\n3. The system shall analyze rehabilitation data.\n4. The system shall provide VR exercise routines for users.\n5. The system shall offer motion tracking tools for users.\n6. The system shall support progress monitoring features.\n7. The system shall allow users to follow guided exercises.\n8. The system shall allow users to monitor their movements during exercises.\n9. The system shall help users improve their physical mobility.\n10. The system shall track users' exercise progress.\n11. The system shall allow users to manage their rehabilitation goals.\n12. The system shall generate reports on rehabilitation outcomes.\n13. The system shall allow users to customize exercise settings.\n14. The system shall allow users to view their exercise histories.\n15. The system shall notify users of exercise updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle VR_Based_Physiotherapy_App {\n    usecase \"Perform Physical Therapy Exercises\" as UC1\n    usecase \"Track Progress\" as UC2\n    usecase \"Analyze Rehabilitation Data\" as UC3\n    usecase \"Provide VR Exercise Routines\" as UC4\n    usecase \"Offer Motion Tracking Tools\" as UC5\n    usecase \"Support Progress Monitoring Features\" as UC6\n    usecase \"Follow Guided Exercises\" as UC7\n    usecase \"Monitor Movements\" as UC8\n    usecase \"Improve Physical Mobility\" as UC9\n    usecase \"Track Exercise Progress\" as UC10\n    usecase \"Manage Rehabilitation Goals\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Exercise Settings\" as UC13\n    usecase \"View Exercise Histories\" as UC14\n    usecase \"Receive Exercise Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Create a use case diagram for following, Functional Requirements for VR-Based Meditation App:\n1. The system shall allow users to practice meditation and mindfulness exercises.\n2. The system shall allow users to track their meditation progress.\n3. The system shall analyze meditation data.\n4. The system shall provide VR meditation environments for users.\n5. The system shall offer guided meditation sessions.\n6. The system shall support relaxation techniques for users.\n7. The system shall allow users to follow meditation guides.\n8. The system shall allow users to monitor their breathing and heart rate during meditation.\n9. The system shall help users improve their mental well-being.\n10. The system shall track users' meditation progress.\n11. The system shall allow users to manage their meditation goals.\n12. The system shall generate reports on meditation outcomes.\n13. The system shall allow users to customize meditation settings.\n14. The system shall allow users to view their meditation histories.\n15. The system shall notify users of meditation updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle VR_Based_Meditation_App {\n    usecase \"Practice Meditation and Mindfulness\" as UC1\n    usecase \"Track Progress\" as UC2\n    usecase \"Analyze Meditation Data\" as UC3\n    usecase \"Provide VR Meditation Environments\" as UC4\n    usecase \"Offer Guided Meditation Sessions\" as UC5\n    usecase \"Support Relaxation Techniques\" as UC6\n    usecase \"Follow Meditation Guides\" as UC7\n    usecase \"Monitor Breathing and Heart Rate\" as UC8\n    usecase \"Improve Mental Well-Being\" as UC9\n    usecase \"Track Meditation Progress\" as UC10\n    usecase \"Manage Meditation Goals\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Meditation Settings\" as UC13\n    usecase \"View Meditation Histories\" as UC14\n    usecase \"Receive Meditation Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Salah Tracker App:\n1. The system shall allow users to track their daily prayers.\n2. The system shall allow users to set prayer reminders.\n3. The system shall analyze users' prayer habits.\n4. The system shall provide prayer tracking tools.\n5. The system shall offer reminder notifications.\n6. The system shall support prayer statistics for users.\n7. The system shall allow users to log their daily prayers.\n8. The system shall allow users to receive reminders for prayer times.\n9. The system shall allow users to view their prayer history.\n10. The system shall track the prayer progress of users.\n11. The system shall allow users to manage their prayer goals.\n12. The system shall generate reports on prayer habits.\n13. The system shall allow users to customize their prayer settings.\n14. The system shall allow users to view their prayer histories.\n15. The system shall notify users of prayer updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Salah_Tracker_App {\n    usecase \"Track Daily Prayers\" as UC1\n    usecase \"Set Prayer Reminders\" as UC2\n    usecase \"Analyze Prayer Habits\" as UC3\n    usecase \"Provide Prayer Tracking Tools\" as UC4\n    usecase \"Offer Reminder Notifications\" as UC5\n    usecase \"Support Prayer Statistics\" as UC6\n    usecase \"Log Daily Prayers\" as UC7\n    usecase \"Receive Reminders for Prayer Times\" as UC8\n    usecase \"View Prayer History\" as UC9\n    usecase \"Track Prayer Progress\" as UC10\n    usecase \"Manage Prayer Goals\" as UC11\n    usecase \"Generate Reports\" as UC12\n    usecase \"Customize Prayer Settings\" as UC13\n    usecase \"View Prayer Histories\" as UC14\n    usecase \"Receive Prayer Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Online Pharmacy System:\n1. The system shall allow customers to create an account.\n2. The system shall allow customers to select medicines.\n3. The system shall allow customers to place an order.\n4. The system shall allow customers to view the status of their order.\n5. The system shall allow admins to manage supplier information.\n6. The system shall allow admins to provide supplier details.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Admin\n\nrectangle Online_Pharmacy_System {\n    usecase \"Create Account\" as UC1\n    usecase \"Select Medicines\" as UC2\n    usecase \"Place Order\" as UC3\n    usecase \"View Order Status\" as UC4\n    usecase \"Manage Supplier Information\" as UC5\n    usecase \"Provide Supplier Details\" as UC6\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\n\nAdmin --> UC5\nAdmin --> UC6\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Health Equity Management System:\n1. The system shall allow patients to register and upload social and medical data.\n2. The system shall classify patients based on social determinants.\n3. The system shall allow patients to track their personal health.\n4. The system shall allow healthcare providers to plan health worker activity.\n5. The system shall notify patients of relevant medical events.\n6. The system shall allow healthcare providers, medical professionals, and government officials to access and analyze health data.\n7. The system shall allow the government to implement intervention schemes.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Caretaker\nactor Healthcare_Provider\nactor Medical_Professional\nactor Government_Official\n\nrectangle Health_Equity_Management_System {\n    usecase \"Register and Upload Social and Medical Data\" as UC1\n    usecase \"Classify Patients Based on Social Determinants\" as UC2\n    usecase \"Track Personal Health\" as UC3\n    usecase \"Plan Health Worker Activity\" as UC4\n    usecase \"Notify Relevant Medical Events\" as UC5\n    usecase \"Access and Analyze Health Data\" as UC6\n    usecase \"Implement Intervention Schemes\" as UC7\n}\n\nPatient --> UC1\nPatient --> UC3\nPatient --> UC5\n\nCaretaker --> UC3\n\nHealthcare_Provider --> UC4\nHealthcare_Provider --> UC6\n\nMedical_Professional --> UC6\n\nGovernment_Official --> UC6\nGovernment_Official --> UC7\n\nUC1 --> UC2 : <<include>>\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for e-Med System:\n1. The system shall allow users to set a medicine intake schedule.\n2. The system shall notify users when they need to restock their medicines.\n3. The system shall allow users to schedule appointments with family doctors.\n4. The system shall provide an emergency button for users to press in critical situations.\n5. The system shall contact individuals listed in the user's emergency contact list when the emergency button is pressed.\n6. The system shall allow users to record their medical history.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Doctor <<secondary>>\nactor Emergency_Contact <<secondary>>\n\nrectangle e-Med_System {\n    usecase \"Set Medicine Intake Schedule\" as UC1\n    usecase \"Receive Medicine Restock Notifications\" as UC2\n    usecase \"Schedule Appointments\" as UC3\n    usecase \"Press Emergency Button\" as UC4\n    usecase \"Contact Emergency Contacts\" as UC5\n    usecase \"Record Medical History\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC6\n\nEmergency_Contact --> UC5\nDoctor --> UC3\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Health Application:\n1. The system shall allow users to provide their daily diet cycle.\n2. The system shall provide nutrient recommendations based on the daily diet cycle.\n3. The system shall allow users to upload their medical reports.\n4. The system shall provide nutrient suggestions based on the user's medical reports.\n5. The system shall allow users to enter disease information.\n6. The system shall provide nutrient benefits for fighting the entered disease.\n7. The system shall allow users to contact professional nutritionists for clarification.\n8. The system shall authenticate users before providing recommendations.\n9. The system shall provide machine learning-based nutrient recommendations.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Nutritionist <<secondary>>\n\nrectangle Health_Application {\n    usecase \"Provide Daily Diet Cycle\" as UC1\n    usecase \"Get Nutrient Recommendations\" as UC2\n    usecase \"Upload Medical Reports\" as UC3\n    usecase \"Receive Medical-based Nutrient Suggestions\" as UC4\n    usecase \"Enter Disease Information\" as UC5\n    usecase \"Get Disease-based Nutrient Benefits\" as UC6\n    usecase \"Contact Nutritionist\" as UC7\n    usecase \"Authenticate User\" as UC8\n    usecase \"Receive ML-based Nutrient Recommendations\" as UC9\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\n\nNutritionist --> UC7\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Health Tracker Application:\n1. The system shall allow users to input their daily food intake.\n2. The system shall allow users to track their exercise routines.\n3. The system shall allow users to monitor their water consumption.\n4. The system shall provide personalized recommendations based on user health data and goals.\n5. The system shall allow users to set reminders for meals, workouts, and hydration.\n6. The system shall allow users to connect with friends.\n7. The system shall allow users to share their achievements with friends.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Friend <<secondary>>\n\nrectangle Health_Tracker_Application {\n    usecase \"Input Daily Food Intake\" as UC1\n    usecase \"Track Exercise Routines\" as UC2\n    usecase \"Monitor Water Consumption\" as UC3\n    usecase \"Receive Personalized Recommendations\" as UC4\n    usecase \"Set Reminders\" as UC5\n    usecase \"Connect with Friends\" as UC6\n    usecase \"Share Achievements\" as UC7\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nFriend --> UC6\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for FitnessPal Application:\n1. The system shall allow users to input their fitness preferences.\n2. The system shall allow users to provide their dietary restrictions.\n3. The system shall allow users to set health goals.\n4. The system shall provide personalized suggestions based on user data.\n5. The system shall allow users to track their progress.\n6. The system shall allow users to set reminders for workouts and meals.\n7. The system shall provide access to exercise routines.\n8. The system shall provide recipes for users to explore.\n9. The system shall allow users to connect with fitness trainers.\n10. The system shall allow users to consult nutritionists.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Fitness_Trainer <<secondary>>\nactor Nutritionist <<secondary>>\n\nrectangle FitnessPal_Application {\n    usecase \"Input Fitness Preferences\" as UC1\n    usecase \"Provide Dietary Restrictions\" as UC2\n    usecase \"Set Health Goals\" as UC3\n    usecase \"Receive Personalized Suggestions\" as UC4\n    usecase \"Track Progress\" as UC5\n    usecase \"Set Reminders\" as UC6\n    usecase \"Access Exercise Routines\" as UC7\n    usecase \"Explore Recipes\" as UC8\n    usecase \"Connect with Fitness Trainers\" as UC9\n    usecase \"Consult Nutritionists\" as UC10\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\n\nFitness_Trainer --> UC9\nNutritionist --> UC10\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Student Counselling Management System:\n1. The system shall allow students to register for counselling.\n2. The system shall allow students to check their eligibility criteria for counselling.\n3. The system shall provide information about available colleges and universities.\n4. The system shall track counselling procedures for counsellors.\n5. The system shall generate reports based on the merit list of students.\n6. The system shall allow students to monitor seat availability in institutions.\n7. The system shall publish results of the counselling process.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Counsellor\n\nrectangle Student_Counselling_Management_System {\n    usecase \"Register for Counselling\" as UC1\n    usecase \"Check Eligibility Criteria\" as UC2\n    usecase \"View College Information\" as UC3\n    usecase \"Track Counselling Procedures\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Monitor Seat Availability\" as UC6\n    usecase \"Publish Results\" as UC7\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC6\nStudent --> UC7\n\nCounsellor --> UC4\nCounsellor --> UC5\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Online Visa Processing System:\n1. The system shall allow applicants to register by providing a valid email and password.\n2. The system shall allow applicants to log in by verifying credentials.\n3. The system shall allow applicants to apply for a visa online.\n4. The system shall allow applicants to submit necessary documents.\n5. The system shall allow applicants to select a visa type.\n6. The system shall allow applicants to view and modify the application.\n7. The system shall allow applicants to delete their visa application.\n8. The system shall allow applicants to check the status of their visa application.\n9. The system shall allow administrators to update applicant details.\n10. The system shall allow administrators to interact with the Visa Consultant Officer.\n11. The system shall allow administrators to approve or reject the visa application.\n12. The system shall allow Visa Consultant Officers to view visa details.\n13. The system shall allow Visa Consultant Officers to view document proofs submitted by the applicant.\n",
        "output": "@startuml\nleft to right direction\n\nactor Applicant\nactor Administrator\nactor Visa_Consultant_Officer\n\nrectangle Online_Visa_Processing_System {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Apply for Visa\" as UC3\n    usecase \"Submit Documents\" as UC4\n    usecase \"Select Visa Type\" as UC5\n    usecase \"View/Modify Application\" as UC6\n    usecase \"Delete Application\" as UC7\n    usecase \"Check Visa Status\" as UC8\n    usecase \"Update Applicant Details\" as UC9\n    usecase \"Interact with Visa Consultant Officer\" as UC10\n    usecase \"Approve/Reject Application\" as UC11\n    usecase \"View Visa Details\" as UC12\n    usecase \"View Document Proofs\" as UC13\n}\n\nApplicant --> UC1\nApplicant --> UC2\nApplicant --> UC3\nApplicant --> UC4\nApplicant --> UC5\nApplicant --> UC6\nApplicant --> UC7\nApplicant --> UC8\n\nAdministrator --> UC9\nAdministrator --> UC10\nAdministrator --> UC11\n\nVisa_Consultant_Officer --> UC10\nVisa_Consultant_Officer --> UC12\nVisa_Consultant_Officer --> UC13\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Placement Automation System:\n1. The system shall allow students to register as a student.\n2. The system shall allow companies to register as a company.\n3. The system shall allow students to upload their resumes.\n4. The system shall allow students to view available skills training.\n5. The system shall allow students to enroll in training.\n6. The system shall allow companies to post job opportunities.\n7. The system shall allow administrators to manage placement drives.\n8. The system shall allow students to view registered companies.\n9. The system shall allow students to track their placement status.\n10. The system shall allow administrators to manage student training records.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Company\nactor Admin\n\nrectangle Placement_Automation_System {\n    usecase \"Register as Student\" as UC1\n    usecase \"Register as Company\" as UC2\n    usecase \"Upload Resume\" as UC3\n    usecase \"View Available Skills Training\" as UC4\n    usecase \"Enroll in Training\" as UC5\n    usecase \"Post Job Opportunity\" as UC6\n    usecase \"Manage Placement Drives\" as UC7\n    usecase \"View Registered Companies\" as UC8\n    usecase \"Track Placement Status\" as UC9\n    usecase \"Manage Student Training Records\" as UC10\n}\n\nStudent --> UC1\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\nStudent --> UC9\n\nCompany --> UC2\nCompany --> UC6\nCompany --> UC8\n\nAdmin --> UC7\nAdmin --> UC10\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Farming Insights Application:\n1. The system shall provide real-time weather insights to the farmers.\n2. The system shall provide soil condition alerts to the farmers.\n3. The system shall provide market trend tracking information to the farmers.\n4. The system shall provide information about labour availability to the farmers.\n5. The system shall provide farming recommendations to the farmers.\n6. The system shall allow farmers to make data-driven decisions based on the recommendations provided.\n",
        "output": "@startuml\nleft to right direction\n\nactor Farmer\nactor Data_Provider <<secondary>>\nactor Market_Agent <<secondary>>\n\nrectangle Farming_Insights_Application {\n    usecase \"Get Real-Time Weather Insights\" as UC1\n    usecase \"Receive Soil Condition Alerts\" as UC2\n    usecase \"Track Market Trends\" as UC3\n    usecase \"Access Labour Availability Info\" as UC4\n    usecase \"Get Farming Recommendations\" as UC5\n    usecase \"Make Data-Driven Decisions\" as UC6\n}\n\nFarmer --> UC1\nFarmer --> UC2\nFarmer --> UC3\nFarmer --> UC4\nFarmer --> UC5\n\nUC5 --> UC6 : <<include>>\nData_Provider --> UC1\nData_Provider --> UC2\n\nMarket_Agent --> UC3\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Green Rides Application:\n1. The system shall allow users to select a route from source to destination.\n2. The system shall display traffic and pollution levels for the selected route.\n3. The system shall send notifications for traffic jams to users within a specific radius.\n4. The system shall allow users to report accident-prone spots to the concerned authority.\n5. The system shall provide Meals-on-Wheel service information for available restaurants on the route.\n6. The system shall allow users to activate Drive Mode to notify callers that they are driving.\n7. The system shall allow users to provide feedback on traffic and pollution accuracy.\n8. The system shall notify users of accident-prone areas based on the number of accidents.\n9. The system shall allow road authority admins to monitor road conditions and accident reports.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor \"Road Authority Admin\" as Admin\nactor \"Hotel/Restaurant\" as Restaurant\n\nrectangle Green_Rides_App {\n    usecase \"Select Route\" as UC1\n    usecase \"View Traffic and Pollution Levels\" as UC2\n    usecase \"Receive Notifications for Traffic Jams\" as UC3\n    usecase \"Report Accident Spots\" as UC4\n    usecase \"Use Meals-on-Wheel Service\" as UC5\n    usecase \"Activate Drive Mode\" as UC6\n    usecase \"Provide Feedback\" as UC7\n    usecase \"Track Accident-Prone Areas\" as UC8\n    usecase \"Monitor Road Conditions\" as UC9\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nAdmin --> UC9\nAdmin --> UC8\n\nRestaurant --> UC5\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for Art Gallery Management System:\n1. The system shall allow customers to browse art collections.\n2. The system shall allow customers to view detailed information about each art piece.\n3. The system shall allow customers to place orders for purchasing art.\n4. The system shall allow customers to make payments for orders.\n5. The system shall allow customers to cancel their orders if needed.\n6. The system shall allow admins to manage (add, update, delete) art items in the gallery.\n7. The system shall allow admins to update details like price, description, and stock availability for art.\n8. The system shall allow admins to generate reports on gallery activity and sales.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Admin\n\nrectangle Art_Gallery_Management_System {\n    usecase \"Browse Art\" as UC1\n    usecase \"View Art Details\" as UC2\n    usecase \"Place Order\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Cancel Order\" as UC5\n    usecase \"Manage Art\" as UC6\n    usecase \"Update Art Details\" as UC7\n    usecase \"Generate Gallery Report\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\n\nAdmin --> UC6\nAdmin --> UC7\nAdmin --> UC8\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for College Trade Platform:\n1. The system shall allow students to register on the platform.\n2. The system shall allow students to post items for sale or trade.\n3. The system shall allow students to search for available goods.\n4. The system shall allow students to rate sellers based on previous transactions.\n5. The system shall allow students to buy or trade items.\n6. The system shall allow students to access and view seller ratings.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\n\nrectangle College_Trade_Platform {\n    usecase \"Register\" as UC1\n    usecase \"Post Items for Sale/Trade\" as UC2\n    usecase \"Search for Goods\" as UC3\n    usecase \"Rate Sellers\" as UC4\n    usecase \"Buy/Trade Items\" as UC5\n    usecase \"Access Seller Ratings\" as UC6\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC5\nStudent --> UC4\nStudent --> UC6\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Online Quiz System:\n1. The system shall allow the admin to register students and teachers.\n2. The system shall allow teachers to create quizzes.\n3. The system shall allow teachers to schedule quizzes.\n4. The system shall allow teachers to edit quizzes.\n5. The system shall allow students to take quizzes.\n6. The system shall automatically evaluate the quizzes.\n7. The system shall allow students to view correct answers after taking the quiz.\n8. The system shall allow students to provide feedback on the quiz.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Teacher\nactor Admin\n\nrectangle Online_Quiz_System {\n    usecase \"Register Students and Teachers\" as UC1\n    usecase \"Create Quiz\" as UC2\n    usecase \"Schedule Quiz\" as UC3\n    usecase \"Edit Quiz\" as UC4\n    usecase \"Take Quiz\" as UC5\n    usecase \"Auto Evaluation\" as UC6\n    usecase \"View Correct Answers\" as UC7\n    usecase \"Provide Feedback\" as UC8\n}\n\nAdmin --> UC1\n\nTeacher --> UC2\nTeacher --> UC3\nTeacher --> UC4\nTeacher --> UC6\n\nStudent --> UC5\nStudent --> UC7\nStudent --> UC8\n\nUC5 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Book Bank Management System:\n1. The system shall authenticate users before allowing access.\n2. The system shall allow members to borrow books.\n3. The system shall allow members to buy books.\n4. The system shall allow members to reserve books or magazines.\n5. The system shall allow members to return borrowed books.\n6. The system shall allow admins to update book stock.\n7. The system shall calculate due fines for late returns.\n8. The system shall track misplaced books using a bar scanner.\n9. The system shall allow admins to manage book titles.\n10. The system shall generate sales reports.\n11. The system shall manage user records.\n12. The system shall handle payments for books.\n",
        "output": "@startuml\nleft to right direction\n\nactor Member\nactor Admin\n\nrectangle Book_Bank_Management_System {\n    usecase \"User Authentication\" as UC1\n    usecase \"Borrow Books\" as UC2\n    usecase \"Buy Books\" as UC3\n    usecase \"Reserve Books\" as UC4\n    usecase \"Return Books\" as UC5\n    usecase \"Update Stock\" as UC6\n    usecase \"Calculate Due Fine\" as UC7\n    usecase \"Track Misplaced Books\" as UC8\n    usecase \"Manage Book Titles\" as UC9\n    usecase \"Generate Sales Reports\" as UC10\n    usecase \"Manage User Records\" as UC11\n    usecase \"Handle Payments\" as UC12\n}\n\nMember --> UC1\nMember --> UC2\nMember --> UC3\nMember --> UC4\nMember --> UC5\nMember --> UC7\n\nAdmin --> UC6\nAdmin --> UC7\nAdmin --> UC8\nAdmin --> UC9\nAdmin --> UC10\nAdmin --> UC11\nAdmin --> UC12\n\nUC2 --> UC7 : <<extend>>\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Mega Associates Website:\n1. The system shall allow clients to view the firm's major projects.\n2. The system shall allow clients to explore available departments and collaborations.\n3. The system shall allow clients to read recent news related to the firm.\n4. The system shall allow clients to explore firm insights.\n5. The system shall allow clients to learn about the firm's history.\n6. The system shall allow clients to contact the firm via mail or chat.\n7. The system shall allow job seekers to view career opportunities.\n8. The system shall allow administrators to manage website content.\n",
        "output": "@startuml\nleft to right direction\n\nactor Client\nactor Job_Seeker\nactor Administrator\n\nrectangle Mega_Associates_Website {\n    usecase \"View Major Projects\" as UC1\n    usecase \"Explore Departments & Collaborations\" as UC2\n    usecase \"Read Recent News\" as UC3\n    usecase \"Explore Firm Insights\" as UC4\n    usecase \"Learn Firm History\" as UC5\n    usecase \"Contact via Mail or Chat\" as UC6\n    usecase \"View Career Opportunities\" as UC7\n    usecase \"Manage Website Content\" as UC8\n}\n\nClient --> UC1\nClient --> UC2\nClient --> UC3\nClient --> UC4\nClient --> UC5\nClient --> UC6\n\nJob_Seeker --> UC7\n\nAdministrator --> UC8\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Startup Meet System:\n1. The system shall allow entrepreneurs to create startup profiles.\n2. The system shall allow entrepreneurs to request funding from investors or mentors.\n3. The system shall allow entrepreneurs to submit startup abstracts to investors or mentors.\n4. The system shall allow entrepreneurs to give virtual presentations to investors or mentors.\n5. The system shall allow entrepreneurs to apply for government loans.\n6. The system shall allow entrepreneurs to view government policies for startups.\n7. The system shall allow mentors to provide guidance and mentorship to entrepreneurs.\n8. The system shall allow investors and mentors to review startup ideas.\n9. The system shall allow investors to accept investment proposals from entrepreneurs.\n",
        "output": "@startuml\nleft to right direction\n\nactor Entrepreneur\nactor Investor\nactor Mentor\nactor Government_Agency <<secondary>>\n\nrectangle Startup_Meet_System {\n    usecase \"Create Startup Profile\" as UC1\n    usecase \"Request Funding\" as UC2\n    usecase \"Submit Abstract\" as UC3\n    usecase \"Give Virtual Presentation\" as UC4\n    usecase \"Apply for Government Loans\" as UC5\n    usecase \"View Government Policies\" as UC6\n    usecase \"Provide Mentorship\" as UC7\n    usecase \"Review Startup Ideas\" as UC8\n    usecase \"Accept Investment Proposal\" as UC9\n}\n\nEntrepreneur --> UC1\nEntrepreneur --> UC2\nEntrepreneur --> UC3\nEntrepreneur --> UC4\nEntrepreneur --> UC5\nEntrepreneur --> UC6\n\nInvestor --> UC8\nInvestor --> UC9\nInvestor --> UC4\n\nMentor --> UC7\nMentor --> UC8\n\nGovernment_Agency --> UC5\nGovernment_Agency --> UC6\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Video Suggestion System:\n1. The system shall collect user activity data for video recommendations.\n2. The system shall process user data to generate video suggestions.\n3. The system shall generate a video dataset based on user interactions.\n4. The system shall suggest relevant videos to users.\n5. The system shall refresh and update video suggestions when users request or refresh their page.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Data_Processor <<secondary>>\n\nrectangle Video_Suggestion_System {\n    usecase \"Collect User Activity\" as UC1\n    usecase \"Process User Data\" as UC2\n    usecase \"Generate Video Dataset\" as UC3\n    usecase \"Suggest Videos\" as UC4\n    usecase \"Refresh and Update Suggestions\" as UC5\n}\n\nUser --> UC4\nUser --> UC5\n\nData_Processor --> UC1\nData_Processor --> UC2\nData_Processor --> UC3\n\nUC1 --> UC2 : <<include>>\nUC2 --> UC3 : <<include>>\nUC3 --> UC4 : <<include>>\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Library Management System:\n1. The system shall allow library members to search books by title, author, subject, or publication date.\n2. The system shall allow library members to check out available book items.\n3. The system shall allow library members to reserve book items that are not currently available.\n4. The system shall retrieve book information, including borrower details.\n5. The system shall allow library members to return checked-out books.\n6. The system shall collect fines for late returns.\n7. The system shall send notifications when reserved books become available or when books are overdue.\n",
        "output": "@startuml\nleft to right direction\n\nactor Library_Member\nactor Librarian\n\nrectangle Library_Management_System {\n    usecase \"Search Books\" as UC1\n    usecase \"Check-out Book\" as UC2\n    usecase \"Reserve Book\" as UC3\n    usecase \"Retrieve Book Information\" as UC4\n    usecase \"Return Book\" as UC5\n    usecase \"Collect Fines\" as UC6\n    usecase \"Send Notifications\" as UC7\n}\n\nLibrary_Member --> UC1\nLibrary_Member --> UC2\nLibrary_Member --> UC3\nLibrary_Member --> UC5\nLibrary_Member --> UC6\n\nLibrarian --> UC6\nLibrarian --> UC4\n\nUC5 --> UC7 : <<extend>>\nUC3 --> UC7 : <<extend>>\n@enduml"
    },
    {
        "input": "Draw a use case diagram. Functional Requirements for the Course Management System:\n1. The system shall allow lecturers to give one or more lectures.\n2. The system shall allow lecturers to go on leave for research purposes, preventing them from giving lectures.\n3. The system shall allow students to attend one or more lectures.\n4. The system shall provide study groups for solving exercises during the semester.\n5. The system shall assign each student to a specific study group for the semester.\n6. The system shall ensure that a study group consists of two to three students.\n7. The system shall allow tutors to grade solutions submitted by study groups.\n",
        "output": "@startuml\nleft to right direction\n\nactor Lecturer\nactor Student\nactor Tutor\n\nrectangle Course_Management_System {\n    usecase \"Give Lecture\" as UC1\n    usecase \"Attend Lecture\" as UC2\n    usecase \"Assign Study Group\" as UC3\n    usecase \"Submit Solution\" as UC4\n    usecase \"Grade Solution\" as UC5\n}\n\nLecturer --> UC1\nLecturer --> UC3 : <<include>>\nStudent --> UC2\nStudent --> UC4\nStudent --> UC3\nTutor --> UC5\nUC4 --> UC5 : <<include>>\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Content Management System:\n1. The system shall allow an administrator to create a new blog account.\n2. The system shall verify author details before creating a blog account using the author credentials database.\n3. The system shall allow an administrator to create a new personal Wiki.\n4. The system shall verify author details before creating a personal Wiki using the Author Credentials service.\n",
        "output": "@startuml\nleft to right direction\n\nactor Administrator\nactor \"Verification Service\" as VerificationService <<secondary>>\n\nrectangle Content_Management_System {\n    usecase \"Create New Blog Account\" as UC1\n    usecase \"Create New Wiki\" as UC2\n    usecase \"Verify Author Details\" as UC3\n}\n\nAdministrator --> UC1\nAdministrator --> UC2\nUC1 --> UC3 : <<include>>\nUC2 --> UC3 : <<include>>\n\nVerificationService --> UC3\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the eDoc Health Record Management System:\n1. The system shall manage patient profiles, including comprehensive personal information.\n2. The system shall allow healthcare providers to input and organize patient medical history.\n3. The system shall allow advanced appointment scheduling for patients, including reminders.\n4. The system shall provide appointment reminders for both patients and healthcare providers.\n5. The system shall enable telemedicine consultations and remote interactions with patients.\n6. The system shall provide patients access to their health records through secure portals.\n7. The system shall allow data analysis, collaboration, and report generation for healthcare teams.\n8. The system shall support importing and exporting health data between systems.\n9. The system shall perform regular backups and provide data recovery options.\n10. The system shall manage patient medication records, including medication reminders.\n11. The system shall store and manage diagnostic records like lab results and imaging reports.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Healthcare_Provider\nactor System_Admin\n\nrectangle eDoc_Health_Record_Management_System {\n    usecase \"Manage Patient Profile\" as UC1\n    usecase \"Input Medical History\" as UC2\n    usecase \"Schedule Appointments\" as UC3\n    usecase \"Send Appointment Reminders\" as UC4\n    usecase \"Perform Telemedicine Consultations\" as UC5\n    usecase \"Access Secure Patient Portals\" as UC6\n    usecase \"Analyze Data and Generate Reports\" as UC7\n    usecase \"Import/Export Health Data\" as UC8\n    usecase \"Perform Data Backup and Recovery\" as UC9\n    usecase \"Manage Medication Records\" as UC10\n    usecase \"Store and Manage Diagnostic Records\" as UC11\n}\n\nPatient --> UC1\nPatient --> UC2\nPatient --> UC3\nPatient --> UC6\nPatient --> UC10\n\nHealthcare_Provider --> UC2\nHealthcare_Provider --> UC3\nHealthcare_Provider --> UC5\nHealthcare_Provider --> UC7\nHealthcare_Provider --> UC10\nHealthcare_Provider --> UC11\n\nSystem_Admin --> UC8\nSystem_Admin --> UC9\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the HealthCare Management System:\n1. The system shall manage patient profiles.\n2. The system shall input and organize medical history.\n3. The system shall allow advanced appointment scheduling.\n4. The system shall send appointment reminders.\n5. The system shall allow telemedicine consultations.\n6. The system shall provide access to patient portals.\n7. The system shall analyze data and generate reports.\n8. The system shall support import/export of health data.\n9. The system shall perform data backups and recovery.\n10. The system shall manage medication records.\n11. The system shall store diagnostic reports.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Healthcare_Provider\nactor System_Admin\n\nrectangle HealthCare_Management_System {\n    usecase \"Manage Patient Profiles\" as UC1\n    usecase \"Input Medical History\" as UC2\n    usecase \"Schedule Appointments\" as UC3\n    usecase \"Send Appointment Reminders\" as UC4\n    usecase \"Perform Telemedicine Consultations\" as UC5\n    usecase \"Access Patient Portal\" as UC6\n    usecase \"Analyze Data and Generate Reports\" as UC7\n    usecase \"Import/Export Health Data\" as UC8\n    usecase \"Perform Data Backup and Recovery\" as UC9\n    usecase \"Manage Medication Records\" as UC10\n    usecase \"Store Diagnostic Reports\" as UC11\n}\n\nPatient --> UC1\nPatient --> UC2\nPatient --> UC3\nPatient --> UC6\nPatient --> UC10\n\nHealthcare_Provider --> UC2\nHealthcare_Provider --> UC3\nHealthcare_Provider --> UC5\nHealthcare_Provider --> UC7\nHealthcare_Provider --> UC10\nHealthcare_Provider --> UC11\n\nSystem_Admin --> UC8\nSystem_Admin --> UC9\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Parcel Delivery Management System:\n1. The system shall provide advanced parcel tracking.\n2. The system shall manage returns efficiently.\n3. The system shall monitor real-time parcel inventory.\n4. The system shall support customer interactions with customer service.\n5. The system shall process payments securely and efficiently.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Admin\n\nrectangle Parcel_Delivery_Management_System {\n    usecase \"Track Parcels\" as UC1\n    usecase \"Manage Returns\" as UC2\n    usecase \"Monitor Inventory\" as UC3\n    usecase \"Access Customer Support\" as UC4\n    usecase \"Process Payments\" as UC5\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC4\nCustomer --> UC5\n\nAdmin --> UC3\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Crime Information System:\n1. The system shall manage users.\n2. The system shall receive crime-related notifications.\n3. The system shall allow the police to update FIRs.\n4. The system shall allow the police to create FIRs.\n5. The system shall provide access to police station information.\n6. The system shall provide access to a crime database.\n7. The system shall allow users to join community safety forums.\n8. The system shall manage criminal records.\n9. The system shall allow the police to search criminal records.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Police_Officer\nactor Admin\n\nrectangle Crime_Information_System {\n    usecase \"User Management\" as UC1\n    usecase \"Receive Crime Notifications\" as UC2\n    usecase \"Update FIR\" as UC3\n    usecase \"Create FIR\" as UC4\n    usecase \"Access Police Station Info\" as UC5\n    usecase \"Access Crime Database\" as UC6\n    usecase \"Join Community Safety Forums\" as UC7\n    usecase \"Manage Criminal Records\" as UC8\n    usecase \"Search Criminal Records\" as UC9\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC7\n\nPolice_Officer --> UC3\nPolice_Officer --> UC4\nPolice_Officer --> UC6\nPolice_Officer --> UC9\n\nAdmin --> UC1\nAdmin --> UC5\nAdmin --> UC8\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Timetable Management System:\n1. The system shall allow users to register and log in securely.\n2. The system shall allow administrators to enroll students and manage their information.\n3. The system shall allow administrators to assign courses to students.\n4. The system shall allow administrators to assign courses to faculty.\n5. The system shall allow faculty members to input their preferred time slots for lectures.\n6. The system shall generate timetables based on student courses, faculty preferences, and available resources.\n7. The system shall allocate available lecture halls based on the generated timetable.\n8. The system shall generate reports detailing course allocations and schedules.\n9. The system shall provide students with reports showing their enrolled courses and schedules.\n10. The system shall provide faculty with reports detailing their course assignments and schedules.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Admin\nactor Faculty\n\nrectangle Timetable_Management_System {\n    usecase \"Register and Login\" as UC1\n    usecase \"Enroll Student\" as UC2\n    usecase \"Allocate Courses to Students\" as UC3\n    usecase \"Allocate Courses to Faculty\" as UC4\n    usecase \"Add Faculty Time Preferences\" as UC5\n    usecase \"Generate Timetable\" as UC6\n    usecase \"Allocate Lecture Halls\" as UC7\n    usecase \"Generate Course Report\" as UC8\n    usecase \"Generate Student Course Report\" as UC9\n    usecase \"Generate Faculty Course Report\" as UC10\n}\n\nStudent --> UC1\nStudent --> UC9\n\nAdmin --> UC1\nAdmin --> UC2\nAdmin --> UC3\nAdmin --> UC4\nAdmin --> UC6\nAdmin --> UC7\nAdmin --> UC8\n\nFaculty --> UC1\nFaculty --> UC5\nFaculty --> UC10\n\nUC6 --> UC7 : <<extend>>\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Cricket Stadium Management System:\n1. The system shall allow fans to view comprehensive information about upcoming events in the stadium.\n2. The system shall allow fans to explore different pricing plans for tickets.\n3. The system shall allow fans to check seat availability.\n4. The system shall allow fans to securely purchase tickets for events.\n5. The system shall allow sponsors to explore available sponsorship options within the stadium.\n6. The system shall allow sponsors to track the return on investment (ROI) for their sponsorships.\n",
        "output": "@startuml\nleft to right direction\n\nactor Fan\nactor Sponsor\n\nrectangle Cricket_Stadium_Management_System {\n    usecase \"View Event Information\" as UC1\n    usecase \"Explore Pricing Plans\" as UC2\n    usecase \"Check Seat Availability\" as UC3\n    usecase \"Purchase Tickets\" as UC4\n    usecase \"Explore Sponsorship Options\" as UC5\n    usecase \"Track Sponsorship ROI\" as UC6\n}\n\nFan --> UC1\nFan --> UC2\nFan --> UC3\nFan --> UC4\n\nSponsor --> UC5\nSponsor --> UC6\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Tech E-Commerce System:\n1. The system shall allow customers to browse the catalog of tech goods and repair services.\n2. The system shall allow customers to add items to a shopping cart.\n3. The system shall allow customers to complete the checkout process to purchase products or services.\n4. The system shall allow customers to review their past orders.\n5. The system shall allow customers to cancel ongoing repair orders.\n6. The system shall allow customers to manage account details, including personal and billing information.\n7. The system shall allow customers to provide feedback on purchased goods and services.\n8. The system shall allow customers to contact support through a helpline for inquiries and assistance.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Support <<secondary>>\n\nrectangle Tech_E_Commerce_System {\n    usecase \"Browse Catalog\" as UC1\n    usecase \"Add Items to Cart\" as UC2\n    usecase \"Checkout\" as UC3\n    usecase \"Review Past Orders\" as UC4\n    usecase \"Cancel Repair Order\" as UC5\n    usecase \"Manage Account Details\" as UC6\n    usecase \"Provide Feedback\" as UC7\n    usecase \"Contact Helpline\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\nCustomer --> UC8\n\nSupport --> UC8\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for the Clinic Management System:\n1. The system shall allow for patient registration.\n2. The system shall manage patient information, including personal details, medical history, and contact information.\n3. The system shall support appointment scheduling for patients.\n4. The system shall send appointment reminders to patients and staff.\n5. The system shall generate bills based on services provided.\n6. The system shall track payment statuses for each patient.\n7. The system shall facilitate staff collaboration and communication.\n8. The system shall generate reports and analytics based on patient data, appointments, and billing information.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Staff\n\nrectangle Clinic_Management_System {\n    usecase \"Register Patient\" as UC1\n    usecase \"Manage Patient Information\" as UC2\n    usecase \"Schedule Appointment\" as UC3\n    usecase \"Send Appointment Reminders\" as UC4\n    usecase \"Generate Bills\" as UC5\n    usecase \"Track Payment Status\" as UC6\n    usecase \"Staff Collaboration\" as UC7\n    usecase \"Generate Reports and Analytics\" as UC8\n}\n\nPatient --> UC1\nPatient --> UC3\nPatient --> UC6\n\nStaff --> UC2\nStaff --> UC7\nStaff --> UC5\nStaff --> UC8\n\nUC3 --> UC4 : <<include>>\n@enduml"
    },
    {
        "input": "Give use case diagram. Functional Requirements for LawKeeper - Law Firm Management System:\n1. The system shall allow lawyers to create, update, and manage case files.\n2. The system shall allow lawyers to create and assign tasks related to cases.\n3. The system shall allow lawyers to access and manage legal references and research materials.\n4. The system shall allow lawyers to send case updates to clients.\n5. The system shall help users monitor and manage critical case deadlines.\n6. The system shall track billable hours for each client.\n7. The system shall allow clients and lawyers to review billing details.\n8. The system shall allow clients to receive updates about their cases.\n9. The system shall allow clients to review payment transactions.\n10. The system shall allow clients to file new cases.\n11. The system shall allow clients to share case-related documents.\n",
        "output": "@startuml\nleft to right direction\n\nactor Lawyer\nactor Client\n\nrectangle LawKeeper_Management_System {\n    usecase \"Manage Case Files\" as UC1\n    usecase \"Create and Assign Tasks\" as UC2\n    usecase \"Access Legal References\" as UC3\n    usecase \"Send Case Updates\" as UC4\n    usecase \"Monitor Case Deadlines\" as UC5\n    usecase \"Track Billable Hours\" as UC6\n    usecase \"Review Billing Details\" as UC7\n    usecase \"Receive Updates\" as UC8\n    usecase \"Review Payments\" as UC9\n    usecase \"File a Case\" as UC10\n    usecase \"Share Documents\" as UC11\n}\n\nLawyer --> UC1\nLawyer --> UC2\nLawyer --> UC3\nLawyer --> UC4\nLawyer --> UC5\nLawyer --> UC6\nLawyer --> UC7\n\nClient --> UC8\nClient --> UC9\nClient --> UC10\nClient --> UC11\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for the Online Shopping System:\n1. The system shall allow customers to browse products.\n2. The system shall allow customers to add items to their shopping cart.\n3. The system shall allow customers to complete the checkout process.\n4. The system shall allow customers to create an account.\n5. The system shall allow customers to manage their profile.\n6. The system shall allow customers to view order history.\n7. The system shall support secure payment processing.\n8. The system shall provide order tracking functionality.\n9. The system shall allow administrators to manage product listings.\n10. The system shall allow administrators to view sales reports.\n11. The system shall allow administrators to process customer inquiries.\n12. The system shall integrate with a payment gateway for processing payments.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Admin\nactor \"Payment Gateway\" as Payment_Gateway <<secondary>>\n\nrectangle Online_Shopping_System {\n    usecase \"Browse Products\" as UC1\n    usecase \"Add to Cart\" as UC2\n    usecase \"Checkout\" as UC3\n    usecase \"Create Account\" as UC4\n    usecase \"Manage Profile\" as UC5\n    usecase \"View Order History\" as UC6\n    usecase \"Secure Payment Processing\" as UC7\n    usecase \"Order Tracking\" as UC8\n    usecase \"Manage Product Listings\" as UC9\n    usecase \"View Sales Reports\" as UC10\n    usecase \"Process Customer Inquiries\" as UC11\n    usecase \"Process Payment\" as UC12\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\nCustomer --> UC8\n\nAdmin --> UC9\nAdmin --> UC10\nAdmin --> UC11\n\nUC12 --> Payment_Gateway\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system.\n Functional Requirements for the ATM System:\n1. The system must check the validity of the inserted ATM card.\n2. The system must validate the PIN number entered by the customer.\n3. The system must ensure that no more than $250 is dispensed against any ATM card within a 24-hour period.\n4. The system must be written in C++.\n5. The system must communicate with the bank using 256-bit encryption.\n6. The system must validate an ATM card in three seconds or less.\n7. The system must validate a PIN in three seconds or less.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Bank_System <<secondary>>\n\nrectangle ATM_System {\n    usecase \"Insert ATM Card\" as UC1\n    usecase \"Enter PIN\" as UC2\n    usecase \"Withdraw Cash\" as UC3\n    usecase \"Check Account Balance\" as UC4\n    usecase \"Transfer Funds\" as UC5\n    usecase \"Check Card Validity\" as UC6\n    usecase \"Validate PIN\" as UC7\n    usecase \"Dispense Cash\" as UC8\n    usecase \"Check Daily Limit\" as UC9\n    usecase \"Handle Bank Communication\" as UC10\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\n\nUC1 --> UC6 : <<include>>\nUC2 --> UC7 : <<include>>\nUC3 --> UC9 : <<include>>\nUC3 --> UC8 : <<include>>\nUC5 --> UC10 : <<include>>\n\nBank_System --> UC10\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. \n Functional Requirements for the Hotel Management System:\n1. The system must allow guests to check-in and check-out of the hotel.\n2. The system must provide room booking functionality for guests.\n3. The system must support room service requests for guests.\n4. The system must generate invoices detailing guest stays and charges.\n5. The system must allow staff to manage room availability, view guest information, and process payments.",
        "output": "@startuml\nleft to right direction\n\nactor Guest\nactor Staff\n\nrectangle Hotel_Management_System {\n    usecase \"Check-in\" as UC1\n    usecase \"Check-out\" as UC2\n    usecase \"Book Room\" as UC3\n    usecase \"Order Room Service\" as UC4\n    usecase \"Generate Invoice\" as UC5\n    usecase \"Manage Room Availability\" as UC6\n    usecase \"View Guest Information\" as UC7\n    usecase \"Process Payments\" as UC8\n}\n\nGuest --> UC1\nGuest --> UC2\nGuest --> UC3\nGuest --> UC4\nGuest --> UC5\n\nStaff --> UC6\nStaff --> UC7\nStaff --> UC8\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for the ASU Registration System:\n1. Professors indicate which courses they will teach online.\n2. A course catalog can be printed.\n3. Students must be able to select up to four courses for the upcoming semester online.\n4. The system must enforce a maximum of 10 students and a minimum of 3 students per course.\n5. After registration, the system must send information to the billing system.\n6. Professors must be able to obtain course rosters online.\n7. Students must be able to add or drop classes online.",
        "output": "@startuml\nleft to right direction\n\nactor Professor\nactor Student\nactor Billing_System <<secondary>>\n\nrectangle ASU_Registration_System {\n    usecase \"Indicate Courses to Teach\" as UC1\n    usecase \"Print Course Catalog\" as UC2\n    usecase \"Select Courses for Semester\" as UC3\n    usecase \"Add or Drop Classes\" as UC4\n    usecase \"Send Information to Billing System\" as UC5\n    usecase \"Obtain Course Rosters\" as UC6\n}\n\nProfessor --> UC1\nProfessor --> UC6\nProfessor --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC2\nUC3 --> UC5 : <<include>>\nUC4 --> UC5 : <<include>>\n\nBilling_System --> UC5\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for the University Information System:\n1. The system must manage details of faculties and institutes, including their names and addresses.\n2. Each faculty is led by a dean, who must have their details managed by the system.\n3. The system must manage employee information, including social security numbers, names, and e-mail addresses.\n4. The system must distinguish between research personnel and administrative personnel.\n5. Research associates must be assigned to one or more institutes, and their field of study must be recorded.\n6. The system must track research projects, including names, starting and end dates, and assigned hours for research associates.\n7. Research associates involved in teaching are considered lecturers, and the system must track course details such as unique ID, course name, and weekly duration in hours.",
        "output": "@startuml\nleft to right direction\n\nactor Dean\nactor Research_Associate\nactor Admin_Personnel\nactor Lecturer\nactor University_Admin\n\nLecturer <|-- Research_Associate\n\nrectangle University_Information_System {\n    usecase \"Manage Faculty Details\" as UC1\n    usecase \"Manage Institute Details\" as UC2\n    usecase \"Record Faculty and Institute Addresses\" as UC3\n    usecase \"Manage Employee Information\" as UC4\n    usecase \"Assign Research Associates to Institutes\" as UC5\n    usecase \"Track Research Projects\" as UC6\n    usecase \"Track Course Details\" as UC7\n}\n\nDean --> UC1\nDean --> UC2\nDean --> UC3\n\nResearch_Associate --> UC5\nResearch_Associate --> UC6\n\nAdmin_Personnel --> UC4\nUniversity_Admin --> UC4\nUniversity_Admin --> UC6\nUniversity_Admin --> UC7\n\nLecturer --> UC7\n\nUC5 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Legal Eagle Case Management System:\n1. The system must support the creation of legal cases and allow updates to case status.\n2. The system must provide clients with the ability to file cases and receive updates on case status.\n3. The system must generate reports and analytics based on case data for legal professionals.\n4. The system must allow legal research to be performed within the system.\n5. The system must support document management for legal cases, allowing legal professionals to store and access case-related documents.\n6. The system must integrate voice commands for key functions such as case creation, updates, filing, and notifications.",
        "output": "@startuml\nleft to right direction\n\nactor Legal_Professional\nactor Client\nactor Legal_Researcher\nactor Voice_Assistant <<secondary>>\n\nrectangle Legal_Eagle_Case_Management_System {\n    usecase \"Create Case\" as UC1\n    usecase \"Track Case Status\" as UC2\n    usecase \"Update Case Status\" as UC3\n    usecase \"File a Case\" as UC4\n    usecase \"Receive Case Updates\" as UC5\n    usecase \"Generate Reports and Analytics\" as UC6\n    usecase \"Perform Legal Research\" as UC7\n    usecase \"Manage Documents\" as UC8\n    usecase \"Activate Using Voice\" as UC9\n}\n\nLegal_Professional --> UC1\nLegal_Professional --> UC2\nLegal_Professional --> UC3\nLegal_Professional --> UC6\nLegal_Professional --> UC7\nLegal_Professional --> UC8\n\nClient --> UC4\nClient --> UC5\n\nLegal_Researcher --> UC7\n\nVoice_Assistant --> UC9\n\nUC1 --> UC9 : <<extend>>\nUC3 --> UC9 : <<extend>>\nUC4 --> UC9 : <<extend>>\nUC5 --> UC9 : <<extend>>\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for TimeCraft Parcel Management System:\n1. The system must allow users (senders and receivers) to track parcels in real-time.\n2. The system must provide users with the ability to report rough handling issues.\n3. Delivery companies must be able to update the status of parcels in transit.\n4. Users must receive real-time updates about parcel status and delivery.\n5. The system must allow senders to schedule parcel pickups.\n6. Delivery companies must be able to manage parcel delivery routes efficiently.\n7. Delivery companies must have control over various delivery options.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Delivery_Company\n\nUser <|-- Sender\nUser <|-- Receiver\n\nrectangle TimeCraft_Parcel_Management_System {\n    usecase \"Track Parcels\" as UC1\n    usecase \"Report Rough Handling Issues\" as UC2\n    usecase \"Update Parcel Status\" as UC3\n    usecase \"Receive Real-Time Updates\" as UC4\n    usecase \"Schedule Parcel Pickup\" as UC5\n    usecase \"Manage Parcel Routes\" as UC6\n    usecase \"Control Delivery Options\" as UC7\n}\n\nSender --> UC5\nSender --> UC2\nSender --> UC1\n\nReceiver --> UC4\nReceiver --> UC1\n\nDelivery_Company --> UC6\nDelivery_Company --> UC7\nDelivery_Company --> UC3\n\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Employee Management System (EMS):\n1. The system must allow HR teams to manage employee information.\n2. The system must track employee attendance in real-time.\n3. The system must support salary management functionality.\n4. The system must enable HR teams to generate automated reports.\n5. The system must allow employees to view their attendance records.",
        "output": "@startuml\nleft to right direction\n\nactor HR_Team\nactor Employee\n\nrectangle Employee_Management_System {\n    usecase \"Manage Employee Information\" as UC1\n    usecase \"Track Attendance\" as UC2\n    usecase \"Manage Salaries\" as UC3\n    usecase \"Generate Reports\" as UC4\n    usecase \"View Attendance Record\" as UC5\n}\n\nHR_Team --> UC1\nHR_Team --> UC2\nHR_Team --> UC3\nHR_Team --> UC4\n\nEmployee --> UC5\nEmployee --> UC1\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for RoboCop Crime Information System:\n1. The system must allow law enforcement agents to manage user accounts.\n2. The system must provide crime-related notifications to users.\n3. The system must handle FIR (First Information Reports).\n4. The system must provide information about the nearest police station.\n5. The system must display crime statistics.\n6. The system must provide access to a comprehensive crime database.\n7. The system must manage criminal records.\n8. The system must allow searching for criminal records.\n9. The system must support community safety forums for public participation.",
        "output": "@startuml\nleft to right direction\n\nactor Law_Enforcement_Agent\nactor Citizen\n\nrectangle RoboCop_Crime_Information_System {\n    usecase \"Manage User Accounts\" as UC1\n    usecase \"Receive Crime Notifications\" as UC2\n    usecase \"Handle FIR\" as UC3\n    usecase \"Access Police Station Info\" as UC4\n    usecase \"View Crime Statistics\" as UC5\n    usecase \"Access Crime Database\" as UC6\n    usecase \"Manage Criminal Records\" as UC7\n    usecase \"Search Criminal Records\" as UC8\n    usecase \"Participate in Safety Forums\" as UC9\n}\n\nCitizen --> UC2\nCitizen --> UC3\nCitizen --> UC4\nCitizen --> UC9\n\nLaw_Enforcement_Agent --> UC1\nLaw_Enforcement_Agent --> UC2\nLaw_Enforcement_Agent --> UC3\nLaw_Enforcement_Agent --> UC4\nLaw_Enforcement_Agent --> UC5\nLaw_Enforcement_Agent --> UC6\nLaw_Enforcement_Agent --> UC7\nLaw_Enforcement_Agent --> UC8\n\nUC3 --> UC2 : <<include>>\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Anywhere Grocery Store Management System:\n1. The system must allow store managers to manage inventory effectively.\n2. The system must support sales processing at the point of sale.\n3. The system must provide supplier management tools for store managers.\n4. The system must handle customer service requests.\n5. The system must support online shopping functionality for customers.\n6. The system must allow customers to track their orders.\n7. The system must enable store managers to view sales reports.\n8. The system must allow suppliers to provide stock to the store.\n9. The system must handle order delivery processes.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Supplier <<secondary>>\nactor Store_Manager\n\nrectangle Anywhere_Grocery_Store_Management_System {\n    usecase \"Manage Inventory\" as UC1\n    usecase \"Process Sales\" as UC2\n    usecase \"Manage Suppliers\" as UC3\n    usecase \"Handle Customer Service Requests\" as UC4\n    usecase \"Online Shopping\" as UC5\n    usecase \"Track Orders\" as UC6\n    usecase \"View Sales Reports\" as UC7\n    usecase \"Provide Stock\" as UC8\n    usecase \"Deliver Orders\" as UC9\n}\n\nCustomer --> UC5\nCustomer --> UC6\n\nStore_Manager --> UC1\nStore_Manager --> UC2\nStore_Manager --> UC3\nStore_Manager --> UC4\nStore_Manager --> UC7\nStore_Manager --> UC9\n\nSupplier --> UC8\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Gym Management System:\n1. The system must allow members to register.\n2. The system must provide members with access to class schedules.\n3. The system must track attendance using biometric or card-based methods.\n4. The system must support payment processing for members.\n5. The system must enable gym administrators to manage inventory in real-time.\n6. The system must allow communication between members and staff.\n7. The system must allow trainers to access class assignments.\n8. The system must facilitate automated payment processing.\n9. The system must provide real-time updates on inventory management.",
        "output": "@startuml\nleft to right direction\n\nactor Member\nactor Trainer\nactor Gym_Admin\nactor Payment_Gateway <<secondary>>\n\nrectangle Gym_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"View Class Schedule\" as UC2\n    usecase \"Track Attendance\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Manage Inventory\" as UC5\n    usecase \"Communicate with Staff\" as UC6\n    usecase \"Assign Classes\" as UC7\n    usecase \"Process Payment\" as UC8\n    usecase \"Track Real-time Inventory\" as UC9\n}\n\nMember --> UC1\nMember --> UC2\nMember --> UC4\nMember --> UC6\n\nTrainer --> UC7\nTrainer --> UC3\n\nGym_Admin --> UC2\nGym_Admin --> UC5\nGym_Admin --> UC9\nGym_Admin --> UC8\n\nPayment_Gateway --> UC8\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Time Table Generating Management System:\n1. The system must allow administrators to enroll students.\n2. The system must enable administrators to allocate courses to students.\n3. The system must enable administrators to allocate courses to faculty members.\n4. The system must generate optimized timetables automatically.\n5. The system must allocate lecture halls based on the generated timetable.\n6. The system must generate reports detailing courses and schedules for both students and faculty.\n7. The system must allow faculty members to input their time preferences.\n8. The system must allow students to view their course schedules.",
        "output": "@startuml\nleft to right direction\n\nactor Admin\nactor Faculty\nactor Student\n\nrectangle Time_Table_Generating_Management_System {\n    usecase \"Enroll Students\" as UC1\n    usecase \"Allocate Courses to Students\" as UC2\n    usecase \"Allocate Courses to Faculty\" as UC3\n    usecase \"Generate Timetable\" as UC4\n    usecase \"Allocate Lecture Halls\" as UC5\n    usecase \"Generate Reports\" as UC6\n    usecase \"Input Time Preferences\" as UC7\n    usecase \"View Course Schedule\" as UC8\n}\n\nAdmin --> UC1\nAdmin --> UC2\nAdmin --> UC3\nAdmin --> UC4\nAdmin --> UC5\nAdmin --> UC6\n\nFaculty --> UC7\nFaculty --> UC6\n\nStudent --> UC8\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Cricket Stadium Management System:\n1. The system must allow fans to buy tickets.\n2. The system must provide access to event information for fans.\n3. The system must send updates about events to fans.\n4. The system must enable sponsors to explore sponsorship opportunities.\n5. The system must support sponsors in engaging with the cricket community.",
        "output": "@startuml\nleft to right direction\n\nactor Fan\nactor Sponsor\n\nrectangle Cricket_Stadium_Management_System {\n    usecase \"Buy Tickets\" as UC1\n    usecase \"Access Event Information\" as UC2\n    usecase \"Receive Event Updates\" as UC3\n    usecase \"Explore Sponsorship Opportunities\" as UC4\n    usecase \"Engage with Cricket Community\" as UC5\n}\n\nFan --> UC1\nFan --> UC2\nFan --> UC3\n\nSponsor --> UC4\nSponsor --> UC5\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for E-Commerce System:\n1. The system must allow customers to log in.\n2. The system must enable customers to purchase tech goods.\n3. The system must enable customers to purchase tech services.\n4. The system must allow customers to track orders.\n5. The system must allow customers to provide feedback.\n6. The system must provide a customer helpline for assistance.\n7. The system must provide a catalog of products for browsing.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Support <<secondary>>\n\nrectangle E_Commerce_System {\n    usecase \"Log In\" as UC1\n    usecase \"Purchase Tech Goods\" as UC2\n    usecase \"Purchase Tech Services\" as UC3\n    usecase \"Track Orders\" as UC4\n    usecase \"Provide Feedback\" as UC5\n    usecase \"Access Customer Helpline\" as UC6\n    usecase \"Browse Product Catalog\" as UC7\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC6\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for Clinisync System:\n1. The system must allow patients to register.\n2. The system must enable staff to manage patient information.\n3. The system must allow patients to schedule appointments.\n4. The system must handle billing operations.\n5. The system must generate reports for the clinic.\n6. The system must support managing invoicing for patient transactions.",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Staff\n\nrectangle Clinisync_System {\n    usecase \"Register\" as UC1\n    usecase \"Manage Patient Information\" as UC2\n    usecase \"Schedule Appointment\" as UC3\n    usecase \"Handle Billing\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Manage Invoicing\" as UC6\n}\n\nPatient --> UC1\nPatient --> UC3\n\nStaff --> UC2\nStaff --> UC3\nStaff --> UC4\nStaff --> UC5\nStaff --> UC6\n@enduml"
    },
    {
        "input": "Given the requirements, generate a use case diagram for this system. Functional Requirements for LawKeeper System:\n1. The system must allow lawyers to access and manage client files.\n2. The system must enable lawyers to track billable hours.\n3. The system must allow lawyers to organize case files.\n4. The system must support managing appointments for lawyers.\n5. The system must track case progress for clients and lawyers.\n6. The system must provide clients with updates on case progress.\n7. The system must allow clients to access essential case documents.\n8. The system must allow clients to view billable hours.\n9. The system must support clients in conducting transactions.\n10. The system must process payments through an external payment gateway.",
        "output": "@startuml\nleft to right direction\n\nactor Lawyer\nactor Client\nactor Payment_Gateway <<secondary>>\n\nrectangle LawKeeper_System {\n    usecase \"Access and Manage Client Files\" as UC1\n    usecase \"Track Billable Hours\" as UC2\n    usecase \"Organize Case Files\" as UC3\n    usecase \"Manage Appointments\" as UC4\n    usecase \"Track Case Progress\" as UC5\n    usecase \"Receive Case Progress Updates\" as UC6\n    usecase \"Access Essential Documents\" as UC7\n    usecase \"View Billable Hours\" as UC8\n    usecase \"Conduct Transactions\" as UC9\n    usecase \"Process Payment\" as UC10\n}\n\nLawyer --> UC1\nLawyer --> UC2\nLawyer --> UC3\nLawyer --> UC4\n\nClient --> UC5\nClient --> UC7\nClient --> UC8\nClient --> UC9\n\nUC5 --> UC6 : <<include>>\nUC9 --> UC10 : <<include>>\n\nPayment_Gateway --> UC10\n@enduml"
    },
    {
        "input": "Generate a use case diagram. Functional Requirements for Real Estate Management System (REMS):\n1. The system must allow property managers to manage property listings.\n2. The system must enable property managers to track properties.\n3. The system must handle property sales for property managers.\n4. The system must handle property rentals for property managers.\n5. The system must handle property leasing for property managers.\n6. The system must generate compliance reports.\n7. The system must analyze market data for informed decisions.\n8. The system must allow clients to perform transactions related to properties.\n9. The system must allow clients to view property details.\n10. The system must integrate with an external financial system for transaction processing.",
        "output": "@startuml\nleft to right direction\n\nactor Property_Manager\nactor Client\nactor Financial_System <<secondary>>\n\nrectangle Real_Estate_Management_System {\n    usecase \"Manage Property Listings\" as UC1\n    usecase \"Track Property\" as UC2\n    usecase \"Handle Sales\" as UC3\n    usecase \"Handle Rentals\" as UC4\n    usecase \"Handle Leasing\" as UC5\n    usecase \"Generate Compliance Reports\" as UC6\n    usecase \"Analyze Market Data\" as UC7\n    usecase \"Make Transactions\" as UC8\n    usecase \"View Property\" as UC9\n}\n\nProperty_Manager --> UC1\nProperty_Manager --> UC2\nProperty_Manager --> UC3\nProperty_Manager --> UC4\nProperty_Manager --> UC5\nProperty_Manager --> UC6\nProperty_Manager --> UC7\n\nClient --> UC8\nClient --> UC9\n\nUC3 --> UC8 : <<include>>\nUC4 --> UC8 : <<include>>\nUC5 --> UC8 : <<include>>\n\nFinancial_System --> UC8\n@enduml"
    },
    {
        "input": "Generate a use case diagram. Functional Requirements for EventEase Management System:\n1. The system must allow attendees to register for events.\n2. The system must enable attendees to purchase tickets online.\n3. The system must provide event organizers with an event dashboard.\n4. The system must send event updates to attendees.\n5. The system must provide performance metrics for organizers to evaluate event success.\n6. The system must manage event logistics for organizers (e.g., speakers, venues, attendees).\n7. The system must monitor event progress.\n8. The system must allow sponsors to promote branding during events.\n9. The system must ensure secure payment processing through an external payment system.",
        "output": "@startuml\nleft to right direction\n\nactor Organizer\nactor Attendee\nactor Sponsor\nactor Payment_System <<secondary>>\n\nrectangle EventEase_Management_System {\n    usecase \"Register for Event\" as UC3\n    usecase \"Purchase Tickets\" as UC5\n    usecase \"Access Event Dashboard\" as UC8\n    usecase \"Receive Event Updates\" as UC6\n    usecase \"View Event Performance Metrics\" as UC7\n    usecase \"Manage Event Logistics\" as UC9\n    usecase \"Monitor Event Progress\" as UC10\n    usecase \"Promote Sponsor Branding\" as UC11\n    usecase \"Process Payment\" as UC12\n}\n\nOrganizer --> UC9\nOrganizer --> UC10\nOrganizer --> UC8\nOrganizer --> UC11\nOrganizer --> UC7\nOrganizer --> UC8\nAttendee --> UC3\nAttendee --> UC5\nAttendee --> UC6\nAttendee --> UC8\n\nSponsor --> UC11\n\nUC5 --> UC12 : <<include>>\n\nPayment_System --> UC12\n@enduml"
    },
    {
        "input": "Generate a use case diagram. Functional Requirements for EventEase Management System:\n1. The system must allow attendees to register for events.\n2. The system must enable attendees to purchase tickets.\n3. The system must provide organizers with a centralized event dashboard.\n4. The system must send event updates to attendees.\n5. The system must display performance metrics for event organizers.\n6. The system must allow organizers to manage event logistics.\n7. The system must monitor the progress of events.\n8. The system must allow sponsors to promote their branding during events.\n9. The system must integrate with a payment system to handle transactions securely.",
        "output": "@startuml\nleft to right direction\n\nactor Organizer\nactor Attendee\nactor Sponsor\nactor Payment_System <<secondary>>\n\nrectangle EventEase_Management_System {\n    usecase \"Register for Event\" as UC3\n    usecase \"Purchase Tickets\" as UC5\n    usecase \"Access Event Dashboard\" as UC8\n    usecase \"Receive Event Updates\" as UC6\n    usecase \"View Event Performance Metrics\" as UC7\n    usecase \"Manage Event Logistics\" as UC9\n    usecase \"Monitor Event Progress\" as UC10\n    usecase \"Promote Sponsor Branding\" as UC11\n    usecase \"Process Payment\" as UC12\n}\n\nOrganizer --> UC9\nOrganizer --> UC10\nOrganizer --> UC8\nOrganizer --> UC11\nOrganizer --> UC7\n\nAttendee --> UC3\nAttendee --> UC5\nAttendee --> UC6\nAttendee --> UC8\n\nSponsor --> UC11\n\nUC5 --> UC12 : <<include>>\n\nPayment_System --> UC12\n@enduml"
    },
    {
        "input": "Generate a use case diagram. Functional Requirements for Online Learning Management System (OLMS):\n1. The system must allow instructors to create courses.\n2. The system must allow instructors to enroll students.\n3. The system must allow instructors to assess students.\n4. The system must allow instructors to track student progress.\n5. The system must provide communication tools like chat for both instructors and students.\n6. The system must allow instructors to deliver course content.\n7. The system must allow students to take assessments.",
        "output": "@startuml\nleft to right direction\n\nactor Instructor\nactor Student\n\nrectangle Online_Learning_Management_System {\n    usecase \"Create Course\" as UC1\n    usecase \"Enroll Students\" as UC2\n    usecase \"Assess Students\" as UC3\n    usecase \"Track Progress\" as UC4\n    usecase \"Communicate through Chat\" as UC5\n    usecase \"Deliver Content\" as UC6\n    usecase \"Take Assessment\" as UC7\n}\n\nInstructor --> UC1\nInstructor --> UC2\nInstructor --> UC3\nInstructor --> UC4\nInstructor --> UC5\nInstructor --> UC6\nStudent --> UC5\nStudent --> UC7\n@enduml"
    },
    {
        "input": "Generate a use case diagram. Functional Requirements for Crypto Exchange System:\n1. The system must allow users to exchange cryptocurrencies.\n2. The system must enable users to perform trading.\n3. The system must allow users to view market trends.\n4. The system must update market trends using external market data from sources like Binance and Kraken.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor \"External Market API (Binance, Kraken)\" as ExternalMarketAPI <<secondary>>\n\nrectangle Crypto_Exchange_System {\n    usecase \"Exchange Cryptocurrencies\" as UC1\n    usecase \"Perform Trading\" as UC2\n    usecase \"View Market Trends\" as UC3\n    usecase \"Update Market Trends\" as UC4\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\n\nUC3 --> UC4 : <<include>>\nExternalMarketAPI --> UC4\n@enduml"
    }
        
]
