[
    {
        "input": "Design a usecase diagram for it. Functional requirements for Webmed Healthcare System:\n\n1. The system must allow patients and caregivers to register on the platform.\n2. The system must provide a secure login feature for accessing healthcare services.\n3. The system must offer a feature for users to explore different healthcare facilities and services.\n4. The system must include a finance module focused on purchasing insurance.\n5. The system must display comprehensive information about diseases and their symptoms under a Health A-Z feature.\n6. The system must include resources such as a symptom checker, health calculator, and a function to find a doctor based on location.\n7. The system must provide an online medicine delivery option under the drugs and supplements section.\n8. The system must offer a payment module for reimbursing providers for services delivered.\n9. The system must collect user feedback for quality improvement purposes.\n10. The system must offer a logout functionality for users to securely exit the platform.\n11. The system must include a bulletin for news, health awareness, and information on experts and counselling programs.\n12. The system must provide access to health insurance guides and ambulance services under the resources section.",
        "output": "@startuml\nleft to right direction\n\nactor ServiceProvider\nactor User\n\nrectangle System {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Use Facilities\" as UC3\n    usecase \"Access Finance\" as UC4\n    usecase \"Access Health A-Z\" as UC5\n    usecase \"Use Resources\" as UC6\n    usecase \"Do Payment\" as UC7\n    usecase \"Give Feedback\" as UC8\n    usecase \"Logout\" as UC9\n    usecase \"Access News And Experts\" as UC10\n    usecase \"Get Drugs And Supplements\" as UC11\n}\n\nServiceProvider --> UC6\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC9\nUser --> UC7\nUser --> UC6\nUser --> UC10\nUser --> UC11\nUser --> UC5\nUser --> UC4\n\nUC7 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Online Examination System:\n\n1. The system must allow students to register and create accounts.\n2. The system must enable teachers to create exams and set questions.\n3. The system must allow students to take exams online.\n4. The system must generate results for the exams taken by students.\n5. The system must provide exam analysis, including performance review and insights.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Teacher\n\nrectangle Online_Examination_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Exam\" as UC2\n    usecase \"Take Exam\" as UC3\n    usecase \"Generate Result\" as UC4\n    usecase \"Analyze Exam\" as UC5\n}\n\nStudent --> UC1\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\n\nTeacher --> UC2\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Online Voting System:\n\n1. The system must allow citizens to register as voters.\n2. The system must enable candidates to register for elections.\n3. The system must allow registered voters to cast their votes online.\n4. The system must generate results for the elections based on the votes cast.\n5. The system must provide analysis of the votes, including voter turnout and demographics.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor Candidate\n\nrectangle Online_Voting_System {\n    usecase \"Register as Voter\" as UC1\n    usecase \"Register as Candidate\" as UC2\n    usecase \"Cast Vote\" as UC3\n    usecase \"Generate Result\" as UC4\n    usecase \"Analyze Votes\" as UC5\n}\n\nCitizen --> UC1\nCitizen --> UC3\nCitizen --> UC4\nCitizen --> UC5\n\nCandidate --> UC2\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the E-Ticketing System for Buses:\n\n1. The system must allow customers to register and create an account for booking tickets.\n2. The system must enable customers to make bus reservations and purchase tickets online.\n3. The system must provide customers with the ability to cancel their reservations if needed.\n4. The system must facilitate secure payments, allowing customers to pay for tickets online through bank transactions.\n5. The system must allow customers to check the status of their reservations and buses online.\n6. The system must allow customers to edit their profiles and manage their accounts.\n7. The system must allow the admin to manage user accounts, including deleting accounts.\n8. The system must enable managers to update and manage routes, bus schedules, vehicle records, and payment information.\n9. The system must generate reports related to bus reservations, payments, and cancellations for management use.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Manager\n\nrectangle Bus_E-Ticketing_System {\n    usecase \"Registration\" as UC1\n    usecase \"Make Reservation\" as UC2\n    usecase \"Cancellation\" as UC3\n    usecase \"Do Payment\" as UC4\n    usecase \"Check Status\" as UC5\n    usecase \"Edit Profile\" as UC6\n    usecase \"Delete Account\" as UC7\n    usecase \"Manage Transactions\" as UC8\n    usecase \"Update Routes\" as UC9\n    usecase \"Update Bus Schedules\" as UC10\n    usecase \"Update Vehicle Records\" as UC11\n    usecase \"Update User Credentials\" as UC12\n    usecase \"Manage Account\" as UC13\n    usecase \"Generate Reports\" as UC14\n}\n\nCustomer --> UC1\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC13\nCustomer --> UC2\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC14\n\nactor Admin <<secondary>>\n\nAdmin --> UC10\nAdmin --> UC12\nAdmin --> UC7\n\nUC4 --> UC3 : <<extend>>\nUC13 --> UC7 : <<extend>>\nUC13 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Design a usecase diagram for this system. Functional requirements for the Weather Monitoring System:\n\n1. The system must allow users to check the current weather status, including temperature, humidity, rainfall, pressure, and dew point.\n2. The system must provide live updates of weather data for real-time viewing.\n3. The system must alert users with tips and warnings during certain weather conditions.\n4. The system must display weather data in graphical form to allow easier analysis of temperature variations.\n5. The system must predict the weather for the next few days based on current and past data.\n6. The system must provide a weekly analysis, including average, highest, and lowest temperatures of the week.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Weather_Monitoring_System {\n    usecase \"Check Weather Status\" as UC1\n    usecase \"Live Update\" as UC2\n    usecase \"Get Alerts\" as UC3\n    usecase \"Generate Graphical Representation\" as UC4\n    usecase \"Predict Future Weather\" as UC5\n    usecase \"Weekly Analysis\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\n\nUC1 --> UC2 : <<extend>>\nUC4 --> UC5 : <<extend>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Online Shopping System:\n\n1. The system must allow users to register and create an account.\n2. The system must provide a product catalog displaying available products for purchase.\n3. The system must allow users to add products to their shopping cart.\n4. The system must include a payment gateway for users to make payments for their purchases.\n5. The system must display the user's order history, showing past orders.\n6. The system must offer customer support functionality for users to ask queries or report issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Shopping_System {\n    usecase \"Register\" as UC1\n    usecase \"View Products\" as UC2\n    usecase \"Add To Cart\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"View Order History\" as UC5\n    usecase \"Contact Support\" as UC6\n    usecase \"Provide Support\" as UC7\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nSupport --> UC7\nUC6 --> UC7 : <<include>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Library Management System:\n\n1. The system must allow users to register and create an account.\n2. The system must provide a book catalog displaying all available books.\n3. The system must allow users to borrow books from the library.\n4. The system must allow users to return borrowed books.\n5. The system must allow users to renew borrowed books.\n6. The system must calculate late fees for books returned after the due date.",
        "output": "@startuml\nleft to right direction\n\nactor Librarian\nactor User\n\nrectangle Library_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"View Books\" as UC2\n    usecase \"Borrow Book\" as UC3\n    usecase \"Return Book\" as UC4\n    usecase \"Renew Book\" as UC5\n    usecase \"Calculate Late Fee\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\n\nLibrarian -right-> UC6\n\nUC5 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the e-Province system:\n\n1. The system must allow citizens to register for an account.\n2. The system must provide a login module where users can log in using their unique application number with an approved status.\n3. The system must allow users to apply for government certificates like birth/death certificates, income and caste certificates, etc.\n4. The system must provide an admin module that can issue certificates to citizens.\n5. The system must manage user profiles, allowing users to update their personal information.\n6. The system must allow admins to view user profiles.\n7. The system must allow admins to deactivate users.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor Admin\n\nrectangle E-Province {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Apply for Certificate\" as UC3\n    usecase \"Issue Certificate\" as UC4\n    usecase \"Manage User Profile\" as UC5\n    usecase \"View User Profile\" as UC6\n    usecase \"Deactivate User\" as UC7\n}\n\nCitizen --> UC1\nCitizen --> UC2\nCitizen --> UC3\nCitizen --> UC5\n\nAdmin --> UC4\nAdmin --> UC6\nAdmin --> UC5\n\nUC5 --> UC7 : <<extend>>\n@enduml"
    },
    {
        "input": "Give usecase diagram for this system. Functional requirements for the Online Banking System:\n\n1. The system must allow customers to register by creating an account.\n2. The system must provide account management functionality for users to view and manage their accounts.\n3. The system must enable customers to transfer funds between their accounts.\n4. The system must allow customers to pay bills online.\n5. The system must display a transaction history for users to review past transactions.\n6. The system must offer customer support functionality for users to contact customer support for queries or issues.\n7. Customer support should provide solutions to queries raised by customers through an included support system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Banking_System {\n    usecase \"Register\" as UC1\n    usecase \"Manage Account\" as UC2\n    usecase \"Transfer Funds\" as UC3\n    usecase \"Pay Bills\" as UC4\n    usecase \"View Transaction History\" as UC5\n    usecase \"Contact Support\" as UC6\n    usecase \"Provide Support\" as UC7\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nSupport --> UC7\nUC6 --> UC7 : <<include>>\n\nUC3 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Functional requirements for the DigiDocLocker:\n\n1. The system must allow citizens to register and log in to the platform.\n2. The system must allow users to upload documents in various file formats.\n3. The system must display the complete user profile based on the information stored in the database.\n4. The system must allow users to request documents from the respective issuers.\n5. The system must display certificate issuers’ names and the number of documents issued by the issuers to the user.\n6. The system must display the requesters’ names and the number of documents requested by them.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Citizen\nactor \"Requester (Eg: UPSC)\" as Requester\nactor \"Issuer (Eg: Income Tax Department)\" as Issuer\n\nrectangle DigiDocLocker {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Request Document\" as UC3\n    usecase \"Upload Document\" as UC4\n    usecase \"View Profile\" as UC5\n    usecase \"Issue Document\" as UC6\n}\n\nCitizen --> UC1\nCitizen --> UC2\nCitizen --> UC4\nCitizen --> UC5\n\nRequester --> UC3\nRequester --> UC2\nIssuer --> UC2\nIssuer --> UC6\n@enduml"
    },
    {
        "input": "Functional requirements for the E-Retail system:\n\n1. The system must allow sellers and customers to register and log in to the platform.\n2. The system must allow sellers to list products for sale.\n3. The system must display all available products for customers to view.\n4. The system must allow customers to buy products and make payments.\n5. The system must enable customers to rate the products they have purchased.\n6. The system must allow customers to report sellers for any violations or issues with the product or delivery.\n7. The system must display the contact information and rating of the seller to the customer before purchasing a product.\n \n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Seller\nactor Customer\n\nrectangle E-Retail {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"List Products\" as UC3\n    usecase \"View Products\" as UC4\n    usecase \"Buy Products\" as UC5\n    usecase \"Rate Product\" as UC6\n    usecase \"Report Seller\" as UC7\n    usecase \"View Seller Information\" as UC8\n    usecase \"Make Payment\" as UC9\n}\n\nSeller --> UC1\nSeller --> UC2\nSeller --> UC3\nSeller --> UC4\n\nCustomer --> UC2\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\nCustomer --> UC8\n\nUC5 --> UC6 : <<extend>>\nUC5 --> UC9 : <<include>>\n@enduml"
    },

    {
        "input": "Functional requirements for the Online Food Ordering System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a restaurant to order food from.\n3. The system must provide a menu for users to browse food items from the selected restaurant.\n4. The system must allow users to place an order for food.\n5. The system must facilitate payment through a secure payment gateway.\n6. The system must allow users to track the status of their orders.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Food_Ordering_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Restaurant\" as UC2\n    usecase \"Browse Menu\" as UC3\n    usecase \"Place Order\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"Track Order\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC4 --> UC5 : <<include>>\n@enduml"
    },
    {
        "input": "Functional requirements for the Online Movie Ticket Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a movie for which they want to book tickets.\n3. The system must allow users to select seats for the selected movie.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the ticket booking after payment is made.\n6. The system must allow users to cancel their ticket bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Movie_Ticket_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Movie\" as UC2\n    usecase \"Select Seats\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Ticket\" as UC5\n    usecase \"Cancel Ticket\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Functional requirements for the Online Hotel Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a hotel for which they want to book rooms.\n3. The system must allow users to select rooms in the selected hotel.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the booking of rooms after payment is made.\n6. The system must allow users to cancel their room bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.\n Give me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Hotel_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Hotel\" as UC2\n    usecase \"Select Room\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Booking\" as UC5\n    usecase \"Cancel Booking\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Give me use case diagram for this system. Functional requirements for the Online Flight Booking System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to select a flight for which they want to book tickets.\n3. The system must allow users to select seats for the selected flight.\n4. The system must facilitate payment through a secure payment gateway.\n5. The system must confirm the booking of tickets after payment is made.\n6. The system must allow users to cancel their ticket bookings if necessary.\n7. The system must allow users to contact customer support for any queries or issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor \"Customer Support\" as Support\n\nrectangle Online_Flight_Booking_System {\n    usecase \"Register\" as UC1\n    usecase \"Select Flight\" as UC2\n    usecase \"Select Seats\" as UC3\n    usecase \"Make Payment\" as UC4\n    usecase \"Confirm Ticket\" as UC5\n    usecase \"Cancel Ticket\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC5 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Give me use case diagram for this system. Functional requirements for the Online Event Management System:\n\n1. The system must allow users to register and log in to the platform.\n2. The system must allow users to create events and manage event details.\n3. The system must allow users to promote events to attract attendees.\n4. The system must allow users to book tickets for events.\n5. The system must facilitate payment through a secure payment gateway for tickets.\n6. The system must allow users to track the status of events and ticket bookings.\n7. The system must allow users to contact customer support for any queries or issues.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor \"Customer Support\" as Support\n\nrectangle Online_Event_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Event\" as UC2\n    usecase \"Promote Event\" as UC3\n    usecase \"Book Ticket\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"Track Event\" as UC6\n    usecase \"Contact Support\" as UC7\n    usecase \"Provide Support\" as UC8\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nSupport --> UC8\nUC7 --> UC8 : <<include>>\n\nUC4 --> UC5 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system.Functional requirements for the Law Enforcement System:\n\n1. The system must allow lawyers to register and log in to the platform.\n2. The system must allow lawyers to view case details and logs.\n3. The system must allow lawyers to add and update case details.\n4. The system must support both criminal and civil case categories.\n5. The system must provide online filing options for cases.\n6. The system must allow lawyers to download model forms for cases.\n7. The system must provide quick references for common legal cases.\n8. The system must offer e-books and other legal resources for reference.\n9. The system must allow lawyers to view blogs, news updates, and submit feedback.",
        "output": "@startuml\nleft to right direction\n\nactor Lawyer\nactor Admin\n\nrectangle Law_Enforcement_System {\n    usecase \"Register\" as UC1\n    usecase \"View Case details and logs\" as UC2\n    usecase \"Add case\" as UC3\n    usecase \"Update details\" as UC4\n    usecase \"Criminal\" as UC5\n    usecase \"Civil\" as UC6\n    usecase \"Filing online\" as UC7\n    usecase \"Download Model Forms\" as UC8\n    usecase \"Display Links\" as UC9\n    usecase \"Display Forms\" as UC10\n    usecase \"Quick references\" as UC11\n    usecase \"Books\" as UC12\n    usecase \"Add feedback\" as UC13\n    usecase \"View Blogs and news updates\" as UC14\n    usecase \"Download\" as UC15\n    usecase \"Upload Documents\" as UC16\n    usecase \"Update Logs\" as UC17\n    usecase \"Update Calendar\" as UC18\n    usecase \"Set reminders\" as UC19\n}\n\nLawyer --> UC1\nLawyer --> UC2\nLawyer --> UC3\nLawyer --> UC7\nLawyer --> UC8\nLawyer --> UC13\nLawyer --> UC14\n\nUC3 --> UC4 : <<include>>\nUC4 --> UC5 : <<extend>>\nUC4 --> UC6 : <<extend>>\nUC7 --> UC9 : <<extend>>\nUC8 --> UC10 : <<include>>\nUC8 --> UC11 : <<extend>>\nUC11 --> UC12 : <<extend>>\n\nAdmin --> UC16\nAdmin --> UC17\nAdmin --> UC18\nAdmin --> UC19\n\nUC16 --> UC15 : <<extend>>\nUC19 --> UC18 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'My Helper' application:\n\n1. The system must allow users to send an SMS to perform remote operations on their phones.\n2. The system must allow users to track the location of their phone via an SMS.\n3. The system must allow users to lock their phones remotely via an SMS.\n4. The system must allow users to change the sound profile (silent to normal) of their phone via an SMS.",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle My_Helper {\n    usecase \"Send SMS\" as UC1\n    usecase \"Track Phone\" as UC2\n    usecase \"Lock Phone\" as UC3\n    usecase \"Change Sound Profile\" as UC4\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\n\nUC1 --> UC4 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for COVID-19 Management System:\n\n1. The system must allow healthcare organizations to track COVID-19 patients.\n2. The system must enable healthcare organizations to treat COVID-19 patients via virtual care.\n3. The system must provide the government with tools to monitor the spread of the virus.\n4. The system must allow healthcare organizations and the government to assess the risk profiles of patients.\n5. The system must raise awareness about COVID-19 among the general public.\n6. The system must allow patients to connect with virtual care services for consultation.\n7. The system must provide patients with the ability to buy medicines online.",
        "output": "@startuml\nleft to right direction\n\nactor Healthcare_Organization\nactor Government\nactor Patient\n\nrectangle COVID-19_Management_System {\n    usecase \"Track COVID-19 Patients\" as UC1\n    usecase \"Treat COVID-19 Patients\" as UC2\n    usecase \"Monitor Virus Spread\" as UC3\n    usecase \"Assess Patient Risk\" as UC4\n    usecase \"Provide Awareness\" as UC5\n    usecase \"Connect with Virtual Care\" as UC6\n    usecase \"Buy Medicines\" as UC7\n}\n\nHealthcare_Organization --> UC1\nHealthcare_Organization --> UC2\nHealthcare_Organization --> UC4\nHealthcare_Organization --> UC6\n\nGovernment --> UC3\nGovernment --> UC4\nGovernment --> UC5\n\nPatient --> UC1\nPatient --> UC7\nPatient --> UC6\n\nUC4 --> UC6 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Car Care' application:\n\n1. The system must allow car owners to register and log in.\n2. The system must allow car owners to enter car information.\n3. The system must allow service centers to enter the estimated expiry dates of car parts.\n4. The system must notify car owners and service centers about the expiry dates of car parts.\n5. The system must allow car owners to accept service requests and select the parts for service.\n6. The system must enable service centers to pick up the car, examine it, prepare a list of damaged parts, and perform the selected services.\n7. The system must allow the service center to update the car information after servicing.\n8. The system must provide an online payment option for car owners to make payments for the service.",
        "output": "@startuml\nleft to right direction\n\nactor Car_Owner\nactor Service_Centre\n\nrectangle Car_Care {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Enter Car Information\" as UC3\n    usecase \"Enter Expiry Dates\" as UC4\n    usecase \"Notify Expiry\" as UC5\n    usecase \"Accept Service Request\" as UC6\n    usecase \"Pick Up Car\" as UC7\n    usecase \"Examine Car\" as UC8\n    usecase \"Prepare List\" as UC9\n    usecase \"Select Damaged Parts\" as UC10\n    usecase \"Service Parts\" as UC11\n    usecase \"Update Information\" as UC12\n    usecase \"Make Payment\" as UC13\n}\n\nCar_Owner --> UC1\nCar_Owner --> UC2\nCar_Owner --> UC3\nCar_Owner --> UC5\nCar_Owner --> UC6\nCar_Owner --> UC10\nCar_Owner --> UC13\n\nService_Centre --> UC2\nService_Centre --> UC4\nService_Centre --> UC7\nService_Centre --> UC8\nService_Centre --> UC9\nService_Centre --> UC11\nService_Centre --> UC12\n\nUC6 --> UC7 : <<extend>>\nUC9 --> UC10 : <<include>>\nUC11 --> UC12 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'E-Ration Shop':\n\n1. The system must allow ration cardholders to register, log in, and order grocery items online.\n2. The system must display shop details, stock availability, and shop advertisements to ration cardholders.\n3. The system must notify ration cardholders about stock availability regularly.\n4. The system must provide product delivery functionality for ration cardholders.\n5. The system must provide a complaint forum for ration cardholders to submit grievances.\n6. The system must allow retailers to manage stock, advertise their shop, and deliver products.\n7. The system must support payments through PayTM, COD, and other payment gateways.\n8. The system must have admin and moderator functionalities, such as managing users, monitoring system usage, approving retailer applications, generating reports, and managing content.\n9. The system must use Aadhaar-based authentication and OTP verification for secure access.",
        "output": "@startuml\nleft to right direction\n\nactor \"Ration_Cardholder (Customer)\" as Ration_Cardholder\nactor \"Retailer (Shopkeeper)\" as Retailer\nactor Admin\nactor Moderator\n\nrectangle E-Ration_Shop {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Order Grocery Items\" as UC3\n    usecase \"View Shop Details\" as UC4\n    usecase \"View Stock\" as UC5\n    usecase \"Manage Stock\" as UC6\n    usecase \"Advertise Shop\" as UC7\n    usecase \"Notify Stock Availability\" as UC8\n    usecase \"Deliver Products\" as UC9\n    usecase \"Complaint Forum\" as UC10\n    usecase \"Make Payment\" as UC11\n    usecase \"Manage Users\" as UC12\n    usecase \"Monitor System Usage\" as UC13\n    usecase \"Approve Retailer Applications\" as UC14\n    usecase \"Generate Reports\" as UC15\n    usecase \"Manage Content\" as UC16\n    usecase \"Review Complaints\" as UC17\n    usecase \"Authentication with Aadhaar and OTP\" as UC18\n}\n\nRation_Cardholder --> UC1\nRation_Cardholder --> UC2\nRation_Cardholder --> UC3\nRation_Cardholder --> UC4\nRation_Cardholder --> UC5\nRation_Cardholder --> UC10\nRation_Cardholder --> UC11\n\nRetailer --> UC4\nRetailer --> UC6\nRetailer --> UC7\nRetailer --> UC9\n\nAdmin --> UC12\nAdmin --> UC13\nAdmin --> UC14\nAdmin --> UC15\nAdmin --> UC18\n\nModerator --> UC16\nModerator --> UC17\n\nUC3 --> UC9 : <<extend>>\nUC5 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Textile Management System':\n\n1. The system must allow customers to register and sample available products.\n2. The system must allow customers and manufacturers to check stock availability.\n3. The system must support the purchasing and processing of raw materials by the manufacturer.\n4. The system must enable the production of garments by the manufacturer.\n5. The system must allow for product checking, clearance, and shipment of finished garments.\n6. The system must generate bills for customers and reports for manufacturers.\n7. The system must allow customers to order garments.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Manufacturer\n\nrectangle Textile_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Sample Products\" as UC2\n    usecase \"Check Stock\" as UC3\n    usecase \"Purchase Raw Materials\" as UC4\n    usecase \"Process Raw Materials\" as UC5\n    usecase \"Produce Garments\" as UC6\n    usecase \"Check Products\" as UC7\n    usecase \"Clearance of Products\" as UC8\n    usecase \"Ship Products\" as UC9\n    usecase \"Generate Bill\" as UC10\n    usecase \"Generate Reports\" as UC11\n    usecase \"Order Garments\" as UC12\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC12\n\nManufacturer --> UC3\nManufacturer --> UC4\nManufacturer --> UC5\nManufacturer --> UC6\nManufacturer --> UC7\nManufacturer --> UC8\nManufacturer --> UC9\nManufacturer --> UC10\nManufacturer --> UC11\n\nUC7 --> UC8 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Hotel Reservation System':\n\n1. The system must allow customers to register, log in, search available rooms, book rooms, and make payments.\n2. The system must allow customers to view their reservations and contact customer support.\n3. The system must allow hotel managers to add or update room details and generate reports.\n4. The system must provide customer support to assist users with their queries and issues.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor HotelManager\nactor \"Customer Support\" as Support\n\nrectangle Hotel_Reservation_System {\n    usecase \"Register\" as UC1\n    usecase \"Login\" as UC2\n    usecase \"Search Rooms\" as UC3\n    usecase \"Book Room\" as UC4\n    usecase \"Make Payment\" as UC5\n    usecase \"View Reservation\" as UC6\n    usecase \"Manage Room Details\" as UC7\n    usecase \"Generate Report\" as UC8\n    usecase \"Contact Support\" as UC9\n    usecase \"Provide Support\" as UC10\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\nCustomer --> UC9\n\nHotelManager --> UC7\nHotelManager --> UC8\n\nSupport --> UC10\nUC9 --> UC10 : <<include>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional requirements for 'Learning Management System':\n\n1. The system must allow students to register, enroll in courses, submit assignments, and view their grades.\n2. The system must allow instructors to create courses, manage student assignments, and grade submissions.\n3. The system must facilitate collaboration through discussion forums for students and instructors.\n4. The system must provide a feedback mechanism for students to share their learning experiences with instructors.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Instructor\n\nrectangle Learning_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Enroll in Course\" as UC2\n    usecase \"Submit Assignment\" as UC3\n    usecase \"View Grades\" as UC4\n    usecase \"Create Course\" as UC5\n    usecase \"Manage Assignments\" as UC6\n    usecase \"Grade Submissions\" as UC7\n    usecase \"Join Discussion Forum\" as UC8\n    usecase \"Provide Feedback\" as UC9\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC8\nStudent --> UC9\n\nInstructor --> UC5\nInstructor --> UC6\nInstructor --> UC7\n@enduml"
    },
    {
        "input": "Functional requirements for 'Inventory Management System':\n\n1. The system must allow store managers to view current inventory levels, reorder products, and manage suppliers.\n2. The system must track deliveries and update inventory levels accordingly.\n3. The system must generate reports on product usage and reorder history. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor StoreManager\nactor Supplier\n\nrectangle Inventory_Management_System {\n    usecase \"View Inventory\" as UC1\n    usecase \"Reorder Product\" as UC2\n    usecase \"Manage Suppliers\" as UC3\n    usecase \"Track Deliveries\" as UC4\n    usecase \"Generate Reports\" as UC5\n}\n\nStoreManager --> UC1\nStoreManager --> UC2\nStoreManager --> UC3\nStoreManager --> UC5\n\nSupplier --> UC4\n@enduml"
    },
    {
        "input": "Functional requirements for 'Gym Management System':\n\n1. The system must allow users to register as members, book sessions, and track their fitness progress.\n2. Trainers must be able to create workout plans, manage their schedules, and monitor client progress.\n3. The system must handle membership payments through an integrated payment gateway. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Trainer\n\nrectangle Gym_Management_System {\n    usecase \"Register\" as UC1\n    usecase \"Book Session\" as UC2\n    usecase \"Track Progress\" as UC3\n    usecase \"Create Workout Plan\" as UC4\n    usecase \"Manage Schedule\" as UC5\n    usecase \"Track Client Progress\" as UC6\n    usecase \"Make Payment\" as UC7\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC7\n\nTrainer --> UC4\nTrainer --> UC5\nTrainer --> UC6\n@enduml"
    },
    {
        "input": "Functional requirements for 'Warehouse Management System':\n\n1. The system must track stock levels in real-time and manage shipments and deliveries.\n2. Warehouse managers must be able to manage the entire stock lifecycle, generate reports, and manage employee schedules.\n3. The system must include inventory optimization features to adjust stock based on real-time demand. Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor WarehouseManager\nactor Employee\n\nrectangle Warehouse_Management_System {\n    usecase \"Track Stock\" as UC1\n    usecase \"Manage Shipments\" as UC2\n    usecase \"Manage Deliveries\" as UC3\n    usecase \"Manage Stock\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Manage Employee Schedule\" as UC6\n    usecase \"Optimize Inventory\" as UC7\n}\n\nWarehouseManager --> UC1\nWarehouseManager --> UC4\nWarehouseManager --> UC5\nWarehouseManager --> UC6\nWarehouseManager --> UC7\n\nEmployee --> UC2\nEmployee --> UC3\n@enduml"
    },
    {
        "input": "Functional Requirements for Hospital Management System:\n1. The system shall allow patients to book appointments with available doctors.\n2. The system shall enable patients to view their medical records for ongoing treatments.\n3. The system shall allow patients to receive prescriptions electronically after consultations.\n4. The system shall allow doctors to manage patient records efficiently, keeping them up-to-date with relevant information.\n5. The system shall enable doctors to schedule follow-up appointments with patients.\n6. The system shall generate invoices for medical services used by patients through the billing module.\n7. The system shall allow doctors to issue prescriptions electronically, minimizing paperwork.\n Design me use case diagram for this system.",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor Doctor\n\nrectangle Hospital_Management_System {\n    usecase \"Book Appointment\" as UC1\n    usecase \"View Medical Records\" as UC2\n    usecase \"Receive Prescription\" as UC3\n    usecase \"Manage Patient Records\" as UC4\n    usecase \"Schedule Appointments\" as UC5\n    usecase \"Prescribe Medications\" as UC6\n    usecase \"Generate Bill\" as UC7\n}\n\nPatient --> UC1\nPatient --> UC2\nPatient --> UC3\nPatient --> UC7\n\nDoctor --> UC4\nDoctor --> UC5\nDoctor --> UC6\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Banking System:\n1. The system shall allow customers to deposit money into their accounts.\n2. The system shall allow customers to withdraw money from their accounts.\n3. The system shall allow customers to transfer funds between accounts.\n4. The system shall allow customers to check their account balances.\n5. The system shall allow customers to apply for loans.\n6. The system shall provide customers with access to their transaction history.\n7. The system shall allow bank employees to manage customer accounts, including details and status.\n8. The system shall allow bank employees to approve or reject loan applications submitted by customers.\n9. The system shall allow bank employees to generate reports on banking operations.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor BankEmployee\n\nrectangle Banking_System {\n    usecase \"Deposit Money\" as UC1\n    usecase \"Withdraw Money\" as UC2\n    usecase \"Transfer Funds\" as UC3\n    usecase \"Check Balance\" as UC4\n    usecase \"Apply for Loan\" as UC5\n    usecase \"View Transaction History\" as UC6\n    usecase \"Manage Accounts\" as UC7\n    usecase \"Approve Loan Applications\" as UC8\n    usecase \"Generate Reports\" as UC9\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n\nBankEmployee --> UC7\nBankEmployee --> UC8\nBankEmployee --> UC9\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Car Rental System:\n1. The system shall allow customers to search for available cars.\n2. The system shall allow customers to select the desired car for rental.\n3. The system shall allow customers to make a reservation for the selected car.\n4. The system shall allow customers to view their booking history.\n5. The system shall allow customers to cancel their bookings if needed.\n6. The system shall allow car rental agencies to manage their fleet of cars.\n7. The system shall allow car rental agencies to track bookings made by customers.\n8. The system shall allow car rental agencies to generate reports on rental activity.",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor CarRentalAgency\n\nrectangle Car_Rental_System {\n    usecase \"Search Cars\" as UC1\n    usecase \"Select Car\" as UC2\n    usecase \"Make Reservation\" as UC3\n    usecase \"View Booking History\" as UC4\n    usecase \"Cancel Booking\" as UC5\n    usecase \"Manage Fleet\" as UC6\n    usecase \"Track Bookings\" as UC7\n    usecase \"Generate Reports\" as UC8\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\nCustomer --> UC4\nCustomer --> UC5\n\nCarRentalAgency --> UC6\nCarRentalAgency --> UC7\nCarRentalAgency --> UC8\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for Final Year Project (FYP) Management System:\n1. The system shall allow students to submit their project proposals for approval.\n2. The system shall allow students to upload progress reports at various stages of the project.\n3. The system shall allow students to track the evaluation status of their projects.\n4. The system shall allow supervisors to review student submissions and provide detailed feedback.\n5. The system shall allow supervisors to set project deadlines to ensure students stay on track.\n6. The system shall allow supervisors to monitor the progress of each student.\n7. The system shall allow panel members to evaluate projects during key milestones and offer scores.\n8. The system shall allow the FYP committee to assign panel members to projects.\n9. The system shall allow the FYP committee to approve or reject proposals based on academic standards.\n10. The system shall allow the FYP committee to ensure the overall quality of the submitted projects.\n11. The system shall facilitate communication between students, supervisors, and panel members to foster collaboration.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Supervisor\nactor Panel_Member\nactor FYP_Committee\n\nrectangle FYP_Management_System {\n    usecase \"Submit Proposal\" as UC1\n    usecase \"Upload Progress Report\" as UC2\n    usecase \"Track Evaluation Status\" as UC3\n    usecase \"Review Submissions\" as UC4\n    usecase \"Provide Feedback\" as UC5\n    usecase \"Set Project Deadlines\" as UC6\n    usecase \"Monitor Progress\" as UC7\n    usecase \"Evaluate Projects\" as UC8\n    usecase \"Assign Panel Members\" as UC9\n    usecase \"Approve Proposals\" as UC10\n    usecase \"Ensure Academic Standards\" as UC11\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\n\nSupervisor --> UC4\nSupervisor --> UC5\nSupervisor --> UC6\nSupervisor --> UC7\n\nPanel_Member --> UC4\nPanel_Member --> UC8\n\nFYP_Committee --> UC9\nFYP_Committee --> UC10\nFYP_Committee --> UC11\n\nUC4 --> UC5 : <<extend>>\n@enduml"
    },
    {
        "input": "Design me use case diagram for this system. Functional Requirements for 'Online Auction System':\n1. The system shall allow users to register and create accounts for bidding.\n2. The system shall allow users to browse and search for items available for auction.\n3. The system shall allow users to place bids on items they are interested in.\n4. The system shall notify users of the status of their bids and the auction results.\n5. The system shall allow sellers to list items for auction and set starting prices.\n6. The system shall allow sellers to monitor the progress of their auctions and view bids placed on their items.\n7. The system shall allow sellers to close auctions and finalize transactions with winning bidders.\n8. The system shall provide a secure payment gateway for users to make payments for won items.",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Seller\n\nrectangle Online_Auction_System {\n    usecase \"Register\" as UC1\n    usecase \"Create Account\" as UC2\n    usecase \"Browse Items\" as UC3\n    usecase \"Place Bid\" as UC4\n    usecase \"Notify Status\" as UC5\n    usecase \"List Items\" as UC6\n    usecase \"Monitor Auctions\" as UC7\n    usecase \"Close Auction\" as UC8\n    usecase \"Finalize Transaction\" as UC9\n    usecase \"Make Payment\" as UC10\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC10\n\nSeller --> UC6\nSeller --> UC7\nSeller --> UC8\nSeller --> UC9\n@enduml"
    },

    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Volunteer Management System:\n1. The system shall allow volunteers to sign up for events.\n2. The system shall allow volunteers to view assigned tasks.\n3. The system shall track the participation hours of each volunteer.\n4. The system shall allow volunteers to update their availability for events.\n5. The system shall allow coordinators to assign tasks to volunteers.\n6. The system shall allow coordinators to track the participation of volunteers.\n7. The system shall allow event managers to schedule events in advance.\n8. The system shall allow event managers to approve volunteer rosters for events.\n9. The system shall allow event managers to monitor the success and effectiveness of events.\n10. The system shall generate reports on participation and event success for evaluation.",
        "output": "@startuml\nleft to right direction\n\nactor Volunteer\nactor Coordinator\nactor Event_Manager\n\nrectangle Volunteer_Management_System {\n    usecase \"Sign Up for Event\" as UC1\n    usecase \"View Assigned Tasks\" as UC2\n    usecase \"Track Participation Hours\" as UC3\n    usecase \"Update Availability\" as UC4\n    usecase \"Assign Tasks\" as UC5\n    usecase \"Track Volunteer Participation\" as UC6\n    usecase \"Schedule Events\" as UC7\n    usecase \"Approve Volunteer Rosters\" as UC8\n    usecase \"Monitor Event Success\" as UC9\n    usecase \"Generate Reports\" as UC10\n}\n\nVolunteer --> UC1\nVolunteer --> UC2\nVolunteer --> UC3\nVolunteer --> UC4\n\nCoordinator --> UC5\nCoordinator --> UC6\n\nEvent_Manager --> UC7\nEvent_Manager --> UC8\nEvent_Manager --> UC9\nEvent_Manager --> UC10\n\nUC6 --> UC10 : <<include>>\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hiring System at TechHire Solutions:\n1. The system shall allow candidates to submit applications including resumes and cover letters.\n2. The system shall scan resumes for relevant skills, experience, and qualifications.\n3. The system shall automatically shortlist candidates based on the scan results.\n4. The system shall allow recruiters to schedule interviews for shortlisted candidates.\n5. The system shall allow interviewers to provide feedback and ratings after each interview round.\n6. The system shall allow recruiters to select the most qualified candidates based on interview feedback.\n7. The system shall generate offer letters for selected candidates.\n8. The system shall track the overall hiring status across all stages of the recruitment cycle.",
        "output": "@startuml\nleft to right direction\n\nactor Candidate\nactor Recruiter\nactor Interviewer\n\nrectangle Hiring_System_TechHire_Solutions {\n    usecase \"Submit Application\" as UC1\n    usecase \"Scan Resume\" as UC2\n    usecase \"Shortlist Candidates\" as UC3\n    usecase \"Schedule Interviews\" as UC4\n    usecase \"Provide Interview Feedback\" as UC5\n    usecase \"Select Candidates\" as UC6\n    usecase \"Generate Offer Letter\" as UC7\n    usecase \"Track Hiring Status\" as UC8\n}\n\nCandidate --> UC1\n\nRecruiter --> UC2\nRecruiter --> UC3\nRecruiter --> UC4\nRecruiter --> UC6\nRecruiter --> UC7\nRecruiter --> UC8\n\nInterviewer --> UC5\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for GitHub Universe 2023 Management System:\n1. The system shall allow participants to register for the event.\n2. The system shall allow participants to sign up for keynotes and workshops.\n3. The system shall manage sponsor onboarding and interactions.\n4. The system shall track sponsor branding during the event.\n5. The system shall manage the overall event schedule.\n6. The system shall send real-time updates to all users.\n7. The system shall allow participants to submit feedback on the sessions they attend.\n8. The system shall allow speakers to schedule and present technical talks.\n9. The system shall generate reports based on user feedback and event metrics.\n10. The system shall monitor event attendance.\n11. The system shall allow sponsors to submit sponsorship proposals.\n12. The system shall allow sponsors to review their benefits for sponsoring the event.",
        "output": "@startuml\nleft to right direction\n\nactor Participant\nactor Sponsor\nactor Organizer\nactor Speaker\n\nrectangle GitHub_Universe_Management_System {\n    usecase \"Register for Event\" as UC1\n    usecase \"Sign Up for Sessions\" as UC2\n    usecase \"Manage Sponsor Onboarding\" as UC3\n    usecase \"Track Sponsor Branding\" as UC4\n    usecase \"Manage Event Schedule\" as UC5\n    usecase \"Send Real-Time Updates\" as UC6\n    usecase \"Submit Session Feedback\" as UC7\n    usecase \"Give Tech-Talks\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Monitor Attendance\" as UC10\n    usecase \"Submit Sponsorship Proposal\" as UC11\n    usecase \"Review Sponsorship Benefits\" as UC12\n}\n\nParticipant --> UC1\nParticipant --> UC2\nParticipant --> UC7\n\nSponsor --> UC11\nSponsor --> UC4\n\nOrganizer --> UC5\nOrganizer --> UC6\nOrganizer --> UC9\nOrganizer --> UC10\nOrganizer --> UC3\nOrganizer --> UC4\n\nSpeaker --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for University Course Registration System:\n1. The system shall allow students to search for available courses.\n2. The system shall allow students to add courses to their course list.\n3. The system shall allow students to register for the upcoming semester.\n4. The system shall allow students to drop courses if needed.\n5. The system shall allow students to view their academic history.\n6. The system shall allow professors to view the list of enrolled students.\n7. The system shall allow professors to assign grades to students.\n8. The system shall allow professors to provide feedback on assignments.",
        "output": "@startuml\nleft to right direction\n\nactor Student\nactor Professor\n\nrectangle Course_Registration_System {\n    usecase \"Search Courses\" as UC1\n    usecase \"Add Course\" as UC2\n    usecase \"Register for Semester\" as UC3\n    usecase \"Drop Course\" as UC4\n    usecase \"View Academic History\" as UC5\n    usecase \"View Enrolled Students\" as UC6\n    usecase \"Assign Grades\" as UC7\n    usecase \"Provide Feedback\" as UC8\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\n\nProfessor --> UC6\nProfessor --> UC7\nProfessor --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Media Platform:\n1. The system shall allow users to create and manage their profiles.\n2. The system shall allow users to post content, including text, images, and videos.\n3. The system shall allow users to interact with other users by commenting and liking posts.\n4. The system shall allow users to join and participate in group discussions.\n5. The system shall allow users to send private messages to each other.\n6. The system shall notify users about new activities on the platform, such as interactions with their posts.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Social_Media_Platform {\n    usecase \"Create Profile\" as UC1\n    usecase \"Post Content\" as UC2\n    usecase \"Interact with Users\" as UC3\n    usecase \"Join Groups\" as UC4\n    usecase \"Participate in Discussions\" as UC5\n    usecase \"Send Messages\" as UC6\n    usecase \"Receive Notifications\" as UC7\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Networking Platform (like Facebook):\n1. The system shall allow users to create personalized profiles.\n2. The system shall allow users to send and accept friend requests to build connections.\n3. The system shall allow users to share posts including text, photos, and videos.\n4. The system shall allow users to engage with posts through likes, comments, and reactions.\n5. The system shall allow users to send private messages and share media.\n6. The system shall notify users in real-time about interactions and new connections.\n7. The system shall allow business users to create and manage business pages.\n8. The system shall allow business users to manage targeted advertisements.\n9. The system shall allow moderators to monitor content and ensure it complies with community guidelines.\n10. The system shall allow administrators to manage platform-wide activities and enforce guidelines.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Moderator\nactor Admin\n\nrectangle Facebook_System {\n    usecase \"Create Profile\" as UC1\n    usecase \"Manage Friends\" as UC2\n    usecase \"Share Life Moments\" as UC3\n    usecase \"Post Content\" as UC4\n    usecase \"Engage with Posts\" as UC5\n    usecase \"Send Private Messages\" as UC6\n    usecase \"Receive Notifications\" as UC7\n    usecase \"Create Business Page\" as UC8\n    usecase \"Manage Advertisements\" as UC9\n    usecase \"Monitor and Moderate Content\" as UC10\n    usecase \"Enforce Community Guidelines\" as UC11\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\n\nModerator --> UC10\n\nAdmin --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Blood Donation App:\n1. The system shall allow users to register as blood donors.\n2. The system shall allow recipients to find donors based on blood type and location.\n3. The system shall allow users to post blood requests in urgent situations.\n4. The system shall notify donors of blood requests.\n5. The system shall allow recipients to locate nearby hospitals.\n6. The system shall allow blood banks to organize blood donation drives.\n7. The system shall allow blood banks to track blood availability.\n8. The system shall allow donors to donate blood.\n",
        "output": "@startuml\nleft to right direction\n\nactor Donor\nactor Recipient\nactor BloodBank\n\nrectangle Blood_Donation_App {\n    usecase \"Register as Donor\" as UC1\n    usecase \"Find Blood Donor\" as UC2\n    usecase \"Post Blood Request\" as UC3\n    usecase \"Receive Notifications\" as UC4\n    usecase \"Locate Nearby Hospitals\" as UC5\n    usecase \"Organize Blood Donation Drives\" as UC6\n    usecase \"Track Blood Availability\" as UC7\n    usecase \"Donate Blood\" as UC8\n}\n\nDonor --> UC1\nDonor --> UC8\nDonor --> UC4\nRecipient --> UC2\nRecipient --> UC3\nRecipient --> UC5\nRecipient --> UC4\nBloodBank --> UC6\nBloodBank --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Ride-Sharing Platform (like Uber):\n1. The system shall allow passengers to request rides to specific destinations.\n2. The system shall allow passengers to track the location of their rides in real-time.\n3. The system shall allow passengers to pay for the service through the platform.\n4. The system shall allow passengers to rate their drivers after the ride.\n5. The system shall allow drivers to accept ride requests.\n6. The system shall allow drivers to navigate to the passenger's location and destination.\n7. The system shall allow drivers to provide safe and efficient rides to passengers.\n8. The system shall provide customer support features for passengers and drivers.\n9. The system shall allow customer support to assist users in resolving issues.\n",
        "output": "@startuml\nleft to right direction\n\nactor Passenger\nactor Driver\nactor CustomerSupport\n\nrectangle Ride_Sharing_Platform {\n    usecase \"Request Ride\" as UC1\n    usecase \"Track Location\" as UC2\n    usecase \"Pay for Service\" as UC3\n    usecase \"Rate Driver\" as UC4\n    usecase \"Accept Ride Request\" as UC5\n    usecase \"Navigate to Location\" as UC6\n    usecase \"Provide Ride\" as UC7\n    usecase \"Resolve Issues\" as UC8\n    usecase \"Provide Assistance\" as UC9\n}\n\nPassenger --> UC1\nPassenger --> UC2\nPassenger --> UC3\nPassenger --> UC4\n\nDriver --> UC5\nDriver --> UC6\nDriver --> UC7\n\nCustomerSupport --> UC8\nCustomerSupport --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Food Delivery Platform (like DoorDash):\n1. The system shall allow customers to browse restaurant menus.\n2. The system shall allow customers to place orders for delivery or pickup.\n3. The system shall allow customers to track the status of their delivery.\n4. The system shall allow restaurants to receive customer orders.\n5. The system shall allow restaurants to prepare food after receiving orders.\n6. The system shall allow restaurants to notify customers when their orders are ready for pickup or delivery.\n7. The system shall allow delivery drivers to accept delivery requests.\n8. The system shall allow delivery drivers to pick up orders from restaurants.\n9. The system shall allow delivery drivers to deliver orders to customers.\n10. The system shall provide customer support features to resolve issues.\n11. The system shall allow customer support to provide assistance to users.\n",
        "output": "@startuml\nleft to right direction\n\nactor Customer\nactor Restaurant\nactor Driver\nactor CustomerSupport\n\nrectangle Food_Delivery_Platform {\n    usecase \"Browse Menus\" as UC1\n    usecase \"Place Order\" as UC2\n    usecase \"Track Delivery\" as UC3\n    usecase \"Receive Orders\" as UC4\n    usecase \"Prepare Food\" as UC5\n    usecase \"Notify Order Ready\" as UC6\n    usecase \"Accept Delivery Request\" as UC7\n    usecase \"Pick Up Order\" as UC8\n    usecase \"Deliver Order\" as UC9\n    usecase \"Resolve Issues\" as UC10\n    usecase \"Provide Assistance\" as UC11\n}\n\nCustomer --> UC1\nCustomer --> UC2\nCustomer --> UC3\n\nRestaurant --> UC4\nRestaurant --> UC5\nRestaurant --> UC6\n\nDriver --> UC7\nDriver --> UC8\nDriver --> UC9\n\nCustomerSupport --> UC10\nCustomerSupport --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Job Finder App (SheWorks):\n1. The system shall allow job seekers to create profiles.\n2. The system shall allow job seekers to upload resumes.\n3. The system shall allow job seekers to search for jobs that align with their preferences (e.g., flexible hours, remote work).\n4. The system shall allow job seekers to apply for jobs through the platform.\n5. The system shall notify users of job updates, interview calls, and feedback.\n6. The system shall allow job seekers to schedule interviews with employers.\n7. The system shall offer career development workshops for job seekers.\n8. The system shall allow job seekers to participate in networking events.\n9. The system shall allow employers to shortlist candidates based on their profiles and resumes.\n10. The system shall allow employers to post job vacancies.\n11. The system shall allow mentors to offer mentorship to job seekers.\n12. The system shall recommend job opportunities to job seekers based on their profiles and resumes.\n",
        "output": "@startuml\nleft to right direction\n\nactor Job_Seeker\nactor Employer\nactor Mentor\n\nrectangle SheWorks_App {\n    usecase \"Create Profile\" as UC1\n    usecase \"Upload Resume\" as UC2\n    usecase \"Search for Jobs\" as UC3\n    usecase \"Apply for Job\" as UC4\n    usecase \"Receive Notifications\" as UC5\n    usecase \"Schedule Interview\" as UC6\n    usecase \"Attend Workshops\" as UC7\n    usecase \"Participate in Networking Events\" as UC8\n    usecase \"Shortlist Candidates\" as UC9\n    usecase \"Post Job Vacancies\" as UC10\n    usecase \"Offer Mentorship\" as UC11\n    usecase \"Receive Job Recommendations\" as UC12\n}\n\nJob_Seeker --> UC1\nJob_Seeker --> UC2\nJob_Seeker --> UC3\nJob_Seeker --> UC4\nJob_Seeker --> UC6\nJob_Seeker --> UC5\nJob_Seeker --> UC7\nJob_Seeker --> UC8\nJob_Seeker --> UC12\n\nEmployer --> UC9\nEmployer --> UC10\n\nMentor --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hackathon Management Web App:\n1. The system shall allow participants to register for the hackathon event.\n2. The system shall allow participants to form teams for the event.\n3. The system shall allow participants to submit their projects.\n4. The system shall provide a chat feature for team communication.\n5. The system shall notify participants about event updates and important announcements.\n6. The system shall allow participants to view the event schedule.\n7. The system shall allow mentors to provide guidance through the platform.\n8. The system shall allow mentors to review team project progress.\n9. The system shall allow judges to evaluate projects.\n10. The system shall allow judges to score submissions.\n11. The system shall allow organizers to manage judging rounds.\n12. The system shall allow sponsors to submit sponsorship materials.\n13. The system shall allow sponsors to track the visibility of their sponsorships.\n14. The system shall allow organizers to coordinate event announcements.\n",
        "output": "@startuml\nleft to right direction\n\nactor Participant\nactor Organizer\nactor Mentor\nactor Judge\nactor Sponsor\n\nrectangle Hackathon_Management_System {\n    usecase \"Register for Event\" as UC1\n    usecase \"Form Team\" as UC2\n    usecase \"Submit Project\" as UC3\n    usecase \"Chat with Team\" as UC4\n    usecase \"Receive Notifications\" as UC5\n    usecase \"View Event Schedule\" as UC6\n    usecase \"Provide Mentorship\" as UC7\n    usecase \"Review Project Progress\" as UC8\n    usecase \"Evaluate Projects\" as UC9\n    usecase \"Score Submissions\" as UC10\n    usecase \"Manage Judging Rounds\" as UC11\n    usecase \"Submit Sponsorship Materials\" as UC12\n    usecase \"Track Sponsorship Visibility\" as UC13\n    usecase \"Coordinate Announcements\" as UC14\n}\n\nParticipant --> UC1\nParticipant --> UC2\nParticipant --> UC3\nParticipant --> UC4\nParticipant --> UC5\nParticipant --> UC6\n\nOrganizer --> UC6\nOrganizer --> UC14\nOrganizer --> UC11\nOrganizer --> UC8\n\nMentor --> UC7\nMentor --> UC8\n\nJudge --> UC9\nJudge --> UC10\n\nSponsor --> UC12\nSponsor --> UC13\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Seminar Management System:\n1. The system shall allow audience members to register for the seminar.\n2. The system shall allow audience members to book seats for sessions.\n3. The system shall notify audience members about session schedules and updates.\n4. The system shall allow audience members to view the seminar session schedule.\n5. The system shall provide a feedback mechanism for audience members to evaluate sessions.\n6. The system shall allow organizers to manage auditorium allocation for sessions.\n7. The system shall allow organizers to manage speaker session content.\n8. The system shall allow organizers to invite guest speakers to the seminar.\n9. The system shall allow organizers to track audience attendance.\n10. The system shall allow organizers to coordinate event timings and session schedules.\n11. The system shall allow sponsors to promote their brands through the platform.\n12. The system shall allow guest speakers to manage their seminar session content.\n",
        "output": "@startuml\nleft to right direction\n\nactor Audience\nactor Organizer\nactor Guest_Speaker\nactor Sponsor\n\nrectangle Seminar_Management_System {\n    usecase \"Register for Seminar\" as UC1\n    usecase \"Book Seat\" as UC2\n    usecase \"Receive Notifications\" as UC3\n    usecase \"View Session Schedule\" as UC4\n    usecase \"Submit Feedback\" as UC5\n    usecase \"Manage Auditorium Allocation\" as UC6\n    usecase \"Manage Speaker Sessions\" as UC7\n    usecase \"Invite Guest Speakers\" as UC8\n    usecase \"Track Attendance\" as UC9\n    usecase \"Coordinate Event Timings\" as UC10\n    usecase \"Promote Sponsor Branding\" as UC11\n    usecase \"Manage Seminar Session Content\" as UC12\n}\n\nAudience --> UC1\nAudience --> UC2\nAudience --> UC3\nAudience --> UC4\nAudience --> UC5\n\nOrganizer --> UC6\nOrganizer --> UC7\nOrganizer --> UC8\nOrganizer --> UC9\nOrganizer --> UC10\n\nGuest_Speaker --> UC7\nGuest_Speaker --> UC12\n\nSponsor --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Project Management System:\n1. The system shall allow project managers to create project plans.\n2. The system shall allow project managers to assign tasks to team members.\n3. The system shall allow project managers to track project progress.\n4. The system shall allow team members to view their assigned tasks.\n5. The system shall allow team members to update the status of their tasks.\n6. The system shall provide a communication feature for team members to interact with each other.\n7. The system shall allow project managers to generate project reports.\n8. The system shall allow project managers to monitor project timelines.\n9. The system shall help project managers identify potential risks.\n10. The system shall allow stakeholders to access project information.\n11. The system shall allow stakeholders to review progress reports.\n12. The system shall allow stakeholders to provide feedback on project deliverables.\n",
        "output": "@startuml\nleft to right direction\n\nactor ProjectManager\nactor TeamMember\nactor Stakeholder\n\n rectangle Project_Management_System {\n    usecase \"Create Project Plan\" as UC1\n    usecase \"Assign Tasks\" as UC2\n    usecase \"Track Progress\" as UC3\n    usecase \"View Assigned Tasks\" as UC4\n    usecase \"Update Task Status\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Risks\" as UC9\n    usecase \"Access Project Information\" as UC10\n    usecase \"Review Progress Reports\" as UC11\n    usecase \"Provide Feedback\" as UC12\n}\n\nProjectManager --> UC1\nProjectManager --> UC2\nProjectManager --> UC3\nProjectManager --> UC7\nProjectManager --> UC8\nProjectManager --> UC9\n\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\n\nStakeholder --> UC10\nStakeholder --> UC11\nStakeholder --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Customer Relationship Management (CRM) System:\n1. The system shall allow sales teams to track customer leads.\n2. The system shall allow sales teams to manage customer accounts.\n3. The system shall allow sales teams to analyze sales data.\n4. The system shall allow marketing teams to create targeted campaigns.\n5. The system shall allow marketing teams to track customer engagement.\n6. The system shall allow marketing teams to generate reports on campaign performance.\n7. The system shall allow customer support teams to log customer inquiries.\n8. The system shall allow customer support teams to resolve customer issues.\n9. The system shall allow customer support teams to provide feedback on customer satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor SalesTeam\nactor MarketingTeam\nactor CustomerSupport\n\nrectangle CRM_System {\n    usecase \"Track Leads\" as UC1\n    usecase \"Manage Customer Accounts\" as UC2\n    usecase \"Analyze Sales Data\" as UC3\n    usecase \"Create Campaigns\" as UC4\n    usecase \"Track Customer Engagement\" as UC5\n    usecase \"Generate Reports\" as UC6\n    usecase \"Log Customer Inquiries\" as UC7\n    usecase \"Resolve Issues\" as UC8\n    usecase \"Provide Feedback\" as UC9\n}\n\nSalesTeam --> UC1\nSalesTeam --> UC2\nSalesTeam --> UC3\n\nMarketingTeam --> UC4\nMarketingTeam --> UC5\nMarketingTeam --> UC6\n\nCustomerSupport --> UC7\nCustomerSupport --> UC8\nCustomerSupport --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Content Management System (CMS):\n1. The system shall allow users to create digital content.\n2. The system shall allow users to edit existing content.\n3. The system shall allow users to collaborate on content creation.\n4. The system shall allow users to upload media files (e.g., images, videos).\n5. The system shall allow users to organize content into categories.\n6. The system shall allow users to schedule content publication.\n7. The system shall allow administrators to approve content before publication.\n8. The system shall provide version control for content management.\n9. The system shall provide analytics to analyze content performance.\n10. The system shall allow administrators to manage user permissions.\n11. The system shall allow administrators to monitor content performance.\n12. The system shall ensure the security of the platform.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Content_Management_System {\n    usecase \"Create Content\" as UC1\n    usecase \"Edit Content\" as UC2\n    usecase \"Collaborate on Content\" as UC3\n    usecase \"Upload Media Files\" as UC4\n    usecase \"Organize Content\" as UC5\n    usecase \"Schedule Publication\" as UC6\n    usecase \"Approve Content\" as UC7\n    usecase \"Version Control\" as UC8\n    usecase \"Analyze Content\" as UC9\n    usecase \"Manage Permissions\" as UC10\n    usecase \"Monitor Performance\" as UC11\n    usecase \"Ensure Security\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC8\n\nAdministrator --> UC7\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Learning Management System (LMS):\n1. The system shall allow instructors to create courses.\n2. The system shall allow instructors to upload learning materials.\n3. The system shall allow instructors to assess student performance.\n4. The system shall allow students to enroll in courses.\n5. The system shall allow students to access course content.\n6. The system shall allow students to submit assignments.\n7. The system shall allow students to take quizzes.\n8. The system shall provide discussion forums for students to participate in course discussions.\n9. The system shall allow instructors to grade assignments.\n10. The system shall allow administrators to manage user accounts.\n11. The system shall allow administrators to monitor course enrollment.\n12. The system shall allow administrators to generate reports on student progress.\n",
        "output": "@startuml\nleft to right direction\n\nactor Instructor\nactor Student\nactor Administrator\n\nrectangle Learning_Management_System {\n    usecase \"Create Courses\" as UC1\n    usecase \"Upload Learning Materials\" as UC2\n    usecase \"Assess Student Performance\" as UC3\n    usecase \"Enroll in Courses\" as UC4\n    usecase \"Access Course Content\" as UC5\n    usecase \"Submit Assignments\" as UC6\n    usecase \"Take Quizzes\" as UC7\n    usecase \"Participate in Discussions\" as UC8\n    usecase \"Grade Assignments\" as UC9\n    usecase \"Manage User Accounts\" as UC10\n    usecase \"Monitor Course Enrollment\" as UC11\n    usecase \"Generate Reports\" as UC12\n}\n\nInstructor --> UC1\nInstructor --> UC2\nInstructor --> UC3\nInstructor --> UC9\n\nStudent --> UC4\nStudent --> UC5\nStudent --> UC6\nStudent --> UC7\nStudent --> UC8\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Project Tracking System:\n1. The system shall allow team members to create tasks.\n2. The system shall allow team members to assign tasks to other team members.\n3. The system shall allow team members to set deadlines for tasks.\n4. The system shall allow team members to update task statuses.\n5. The system shall allow team members to track progress on tasks.\n6. The system shall provide communication features for team members to collaborate.\n7. The system shall generate reports on project progress.\n8. The system shall allow project managers to monitor project timelines.\n9. The system shall help project managers identify bottlenecks in the project.\n10. The system shall allow project managers to oversee project progress.\n11. The system shall allow project managers to allocate resources for tasks.\n12. The system shall help project managers ensure that project milestones are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor TeamMember\nactor ProjectManager\n\nrectangle Project_Tracking_System {\n    usecase \"Create Tasks\" as UC1\n    usecase \"Assign Tasks\" as UC2\n    usecase \"Set Deadlines\" as UC3\n    usecase \"Update Task Status\" as UC4\n    usecase \"Track Progress\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Bottlenecks\" as UC9\n    usecase \"Oversee Project Progress\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Milestones\" as UC12\n}\n\nTeamMember --> UC1\nTeamMember --> UC2\nTeamMember --> UC3\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\nTeamMember --> UC7\n\nProjectManager --> UC8\nProjectManager --> UC9\nProjectManager --> UC10\nProjectManager --> UC11\nProjectManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Task Management System:\n1. The system shall allow users to create tasks.\n2. The system shall allow users to set priorities for tasks.\n3. The system shall allow users to set deadlines for task completion.\n4. The system shall allow users to update the status of tasks.\n5. The system shall allow users to track progress on tasks.\n6. The system shall allow users to categorize tasks based on different criteria.\n7. The system shall generate task lists for users.\n8. The system shall allow users to set reminders for tasks.\n9. The system shall allow users to organize tasks into projects.\n10. The system shall allow users to share tasks with collaborators.\n11. The system shall allow users to assign tasks to team members.\n12. The system shall notify users about task updates and deadlines.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Collaborator\n\nrectangle Task_Management_System {\n    usecase \"Create Tasks\" as UC1\n    usecase \"Set Priorities\" as UC2\n    usecase \"Set Deadlines\" as UC3\n    usecase \"Update Task Status\" as UC4\n    usecase \"Track Progress\" as UC5\n    usecase \"Categorize Tasks\" as UC6\n    usecase \"Generate Task Lists\" as UC7\n    usecase \"Set Reminders\" as UC8\n    usecase \"Organize Tasks\" as UC9\n    usecase \"Share Tasks\" as UC10\n    usecase \"Assign Tasks\" as UC11\n    usecase \"Receive Notifications\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n\nCollaborator --> UC10\nCollaborator --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Bug Tracking System:\n1. The system shall allow developers to log software bugs.\n2. The system shall allow developers to assign bugs to team members.\n3. The system shall allow developers to track the status of bug fixes.\n4. The system shall allow developers to update the status of bugs.\n5. The system shall allow developers to prioritize bugs based on severity.\n6. The system shall provide communication features for developers to collaborate on bug resolution.\n7. The system shall generate bug reports for tracking bug statistics.\n8. The system shall allow project managers to monitor bug resolution timelines.\n9. The system shall help project managers identify recurring bugs in the software.\n10. The system shall allow project managers to oversee the progress of bug resolution.\n11. The system shall allow project managers to allocate resources for fixing bugs.\n12. The system shall help project managers ensure software quality standards are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor Developer\nactor ProjectManager\n\nrectangle Bug_Tracking_System {\n    usecase \"Log Bugs\" as UC1\n    usecase \"Assign Bugs\" as UC2\n    usecase \"Track Bug Fixes\" as UC3\n    usecase \"Update Bug Status\" as UC4\n    usecase \"Prioritize Bugs\" as UC5\n    usecase \"Communicate with Team\" as UC6\n    usecase \"Generate Bug Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Bugs\" as UC9\n    usecase \"Oversee Bug Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Software Quality\" as UC12\n}\n\nDeveloper --> UC1\nDeveloper --> UC2\nDeveloper --> UC3\nDeveloper --> UC4\nDeveloper --> UC5\nDeveloper --> UC6\nDeveloper --> UC7\n\nProjectManager --> UC8\nProjectManager --> UC9\nProjectManager --> UC10\nProjectManager --> UC11\nProjectManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Customer Support System:\n1. The system shall allow customer support agents to log customer inquiries.\n2. The system shall allow customer support agents to assign tickets to support agents.\n3. The system shall allow customer support agents to track ticket resolutions.\n4. The system shall allow customer support agents to update ticket statuses.\n5. The system shall allow customer support agents to prioritize tickets based on urgency.\n6. The system shall provide communication features for customer support agents to communicate with customers about issue resolutions.\n7. The system shall generate support reports for tracking customer inquiries and resolutions.\n8. The system shall allow managers to monitor ticket resolution timelines.\n9. The system shall help managers identify recurring customer issues.\n10. The system shall allow managers to oversee the progress of ticket resolutions.\n11. The system shall allow managers to allocate resources for resolving customer issues.\n12. The system shall help managers ensure customer satisfaction standards are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor CustomerSupportAgent\nactor Manager\n\nrectangle Customer_Support_System {\n    usecase \"Log Customer Inquiries\" as UC1\n    usecase \"Assign Tickets\" as UC2\n    usecase \"Track Ticket Resolutions\" as UC3\n    usecase \"Update Ticket Status\" as UC4\n    usecase \"Prioritize Tickets\" as UC5\n    usecase \"Communicate with Customers\" as UC6\n    usecase \"Generate Support Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Issues\" as UC9\n    usecase \"Oversee Ticket Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Customer Satisfaction\" as UC12\n}\n\nCustomerSupportAgent --> UC1\nCustomerSupportAgent --> UC2\nCustomerSupportAgent --> UC3\nCustomerSupportAgent --> UC4\nCustomerSupportAgent --> UC5\nCustomerSupportAgent --> UC6\nCustomerSupportAgent --> UC7\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Help Desk System:\n1. The system shall allow users to log help desk tickets.\n2. The system shall allow support agents to assign tickets to agents.\n3. The system shall allow users and support agents to track ticket resolutions.\n4. The system shall allow support agents to update ticket statuses.\n5. The system shall allow support agents to prioritize tickets based on urgency.\n6. The system shall provide communication features for support agents to communicate with users regarding issue resolutions.\n7. The system shall generate help desk reports for tracking ticket statistics.\n8. The system shall allow managers to monitor ticket resolution timelines.\n9. The system shall help managers identify recurring technical issues.\n10. The system shall allow managers to oversee the progress of ticket resolutions.\n11. The system shall allow managers to allocate resources for resolving tickets.\n12. The system shall help managers ensure that service level agreements are met.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor SupportAgent\nactor Manager\n\nrectangle Help_Desk_System {\n    usecase \"Log Help Desk Tickets\" as UC1\n    usecase \"Assign Tickets\" as UC2\n    usecase \"Track Ticket Resolutions\" as UC3\n    usecase \"Update Ticket Status\" as UC4\n    usecase \"Prioritize Tickets\" as UC5\n    usecase \"Communicate with Users\" as UC6\n    usecase \"Generate Help Desk Reports\" as UC7\n    usecase \"Monitor Timelines\" as UC8\n    usecase \"Identify Recurring Issues\" as UC9\n    usecase \"Oversee Ticket Resolution\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Service Level Agreements\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\n\nSupportAgent --> UC3\nSupportAgent --> UC4\nSupportAgent --> UC5\nSupportAgent --> UC6\nSupportAgent --> UC7\n\nManager --> UC8\nManager --> UC9\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Library Management System:\n1. The system shall allow librarians to catalog books.\n2. The system shall allow librarians to manage patron accounts.\n3. The system shall allow librarians to track book loans.\n4. The system shall allow patrons to search for books in the library catalog.\n5. The system shall allow patrons to check out books from the library.\n6. The system shall allow patrons to renew book loans.\n7. The system shall generate library reports for tracking book circulation and other statistics.\n8. The system shall allow librarians to monitor book circulation.\n9. The system shall help librarians identify overdue books.\n10. The system shall allow administrators to oversee library operations.\n11. The system shall allow administrators to allocate resources for the library.\n12. The system shall help administrators ensure that library policies are enforced.\n",
        "output": "@startuml\nleft to right direction\n\nactor Librarian\nactor Patron\nactor Administrator\n\nrectangle Library_Management_System {\n    usecase \"Catalog Books\" as UC1\n    usecase \"Manage Patron Accounts\" as UC2\n    usecase \"Track Book Loans\" as UC3\n    usecase \"Search for Books\" as UC4\n    usecase \"Check Out Books\" as UC5\n    usecase \"Renew Book Loans\" as UC6\n    usecase \"Generate Library Reports\" as UC7\n    usecase \"Monitor Book Circulation\" as UC8\n    usecase \"Identify Overdue Books\" as UC9\n    usecase \"Oversee Library Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Enforce Library Policies\" as UC12\n}\n\nLibrarian --> UC1\nLibrarian --> UC2\nLibrarian --> UC3\nLibrarian --> UC7\nLibrarian --> UC8\nLibrarian --> UC9\n\nPatron --> UC4\nPatron --> UC5\nPatron --> UC6\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hotel Management System:\n1. The system shall allow hotel staff to create guest reservations.\n2. The system shall allow hotel staff to assign rooms to guests.\n3. The system shall allow hotel staff to track guest check-ins and check-outs.\n4. The system shall allow guests to book rooms.\n5. The system shall allow guests to request hotel services.\n6. The system shall allow guests to provide feedback on their stay.\n7. The system shall generate reports for hotel staff on hotel operations.\n8. The system shall allow hotel staff to monitor room availability.\n9. The system shall help hotel staff identify guest preferences.\n10. The system shall allow managers to oversee hotel operations.\n11. The system shall allow managers to allocate resources effectively.\n12. The system shall help managers ensure guest satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor HotelStaff\nactor Guest\nactor Manager\n\nrectangle Hotel_Management_System {\n    usecase \"Create Guest Reservations\" as UC1\n    usecase \"Assign Rooms\" as UC2\n    usecase \"Track Check-Ins and Check-Outs\" as UC3\n    usecase \"Book Rooms\" as UC4\n    usecase \"Request Services\" as UC5\n    usecase \"Provide Feedback\" as UC6\n    usecase \"Generate Hotel Reports\" as UC7\n    usecase \"Monitor Room Availability\" as UC8\n    usecase \"Identify Guest Preferences\" as UC9\n    usecase \"Oversee Hotel Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Guest Satisfaction\" as UC12\n}\n\nHotelStaff --> UC1\nHotelStaff --> UC2\nHotelStaff --> UC3\nHotelStaff --> UC7\nHotelStaff --> UC8\nHotelStaff --> UC9\n\nGuest --> UC4\nGuest --> UC5\nGuest --> UC6\n\nManager --> UC10\nManager --> UC11\nManager --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for National Health ID System:\n1. The system shall allow patients to create a unique Health ID.\n2. The system shall allow health data consent managers to seek a patient’s consent for sharing health data.\n3. The system shall maintain the health records of patients digitally.\n4. The system shall allow health authorities to use health records for patient diagnosis.\n5. The system shall allow health authorities to record medications, including vaccinations, for newborns and patients.\n",
        "output": "@startuml\nleft to right direction\n\nactor Patient\nactor HealthAuthority\nactor HealthDataConsentManager\n\nrectangle National_Health_ID_System {\n    usecase \"Create Health ID\" as UC1\n    usecase \"Seek Patient's Consent\" as UC2\n    usecase \"Maintain Health Records\" as UC3\n    usecase \"Use for Patient Diagnosis\" as UC4\n    usecase \"Record Medications\" as UC5\n}\n\nPatient --> UC1\nPatient --> UC3\n\nHealthDataConsentManager --> UC2\nHealthAuthority --> UC5\nHealthAuthority --> UC4\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Device Donation System:\n1. The system shall allow donors to enter the details of the device they are willing to donate.\n2. The system shall allow donors to enter their address details for pickup.\n3. The system shall notify donors to wait for the approval of the device.\n4. The system shall allow admins to verify the details of the donated device.\n5. The system shall allow admins to assign a pickup executive to collect the device.\n6. The system shall allow volunteers to join the team to help with device pickups.\n",
        "output": "@startuml\nleft to right direction\n\nactor Donor\nactor Admin\nactor Volunteer\n\nrectangle Device_Donation_System {\n    usecase \"Enter Device Details\" as UC1\n    usecase \"Enter Address Details\" as UC2\n    usecase \"Wait for Approval\" as UC3\n    usecase \"Verify Device Details\" as UC4\n    usecase \"Assign Pickup Executive\" as UC5\n    usecase \"Join a Team\" as UC6\n}\n\nDonor --> UC1\nDonor --> UC2\nDonor --> UC3\n\nAdmin --> UC4\nAdmin --> UC5\n\nVolunteer --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Car Rental System:\n1. The system shall allow users to search for available cars for rental.\n2. The system shall allow users to select a car for rental from the available options.\n3. The system shall allow users to make a reservation for a rental car.\n4. The system shall allow users to specify the rental duration.\n5. The system shall allow users to specify the pick-up and drop-off locations for the rental car.\n6. The system shall generate rental agreements for car rentals.\n7. The system shall allow administrators to track rental durations for cars.\n8. The system shall process payments for car rentals.\n9. The system shall allow administrators to manage car listings.\n10. The system shall allow administrators to monitor reservations.\n11. The system shall allow administrators to confirm the availability of cars for rental.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Car_Rental_System {\n    usecase \"Search for Available Cars\" as UC1\n    usecase \"Select Car for Rental\" as UC2\n    usecase \"Make Reservation\" as UC3\n    usecase \"Specify Rental Duration\" as UC4\n    usecase \"Specify Pick&Drop Location\" as UC5\n    usecase \"Generate Rental Agreements\" as UC7\n    usecase \"Track Rental Durations\" as UC8\n    usecase \"Process Payments\" as UC9\n    usecase \"Manage Car Listings\" as UC10\n    usecase \"Monitor Reservations\" as UC11\n    usecase \"Confirm Car Availability\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nAdministrator --> UC7\nAdministrator --> UC8\nAdministrator --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Online College Magazine System:\n1. The system shall allow users (students, faculty, contributors) to manage articles, including writing, editing, and publishing.\n2. The system shall allow users to rate published articles.\n3. The system shall allow users to comment on published articles.\n4. The system shall allow users to organize articles based on appropriate categories.\n5. The system shall allow guests to read, comment on, and rate articles.\n6. The system shall allow guests to contribute content for the magazine if interested.\n7. The system shall allow moderators to review articles before they are published.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Guest\nactor Moderator\n\nUser <|-- Student\nUser <|-- Faculty\nUser <|-- Contributor\n\nrectangle Online_College_Magazine_System {\n    usecase \"Manage Articles\" as UC1\n    usecase \"Rate Articles\" as UC2\n    usecase \"Comment on Articles\" as UC3\n    usecase \"Organize Articles\" as UC4\n    usecase \"Generate Content\" as UC5\n    usecase \"Review Articles\" as UC6\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\n\nGuest --> UC2\nGuest --> UC3\nGuest --> UC5\n\nModerator --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Crime Record Management System:\n1. The system shall allow petitioners to file a First Incident Report (FIR).\n2. The system shall allow victims to record complaints.\n3. The system shall allow tracking of criminals, including those arrested, to be arrested, or escaped.\n4. The system shall allow investigating officers to manage cases, including updating and tracking the status of cases.\n5. The system shall allow investigating officers to monitor crime activities throughout the state.\n",
        "output": "@startuml\nleft to right direction\n\nactor Petitioner\nactor Victim\nactor Accused\nactor InvestigatingOfficer\n\nrectangle Crime_Record_Management_System {\n    usecase \"File FIR\" as UC1\n    usecase \"Record Complaints\" as UC2\n    usecase \"Track Criminals\" as UC3\n    usecase \"Manage Cases\" as UC4\n    usecase \"Monitor Crime Activities\" as UC5\n}\n\nPetitioner --> UC1\nVictim --> UC2\nAccused --> UC3\nInvestigatingOfficer --> UC4\nInvestigatingOfficer --> UC5\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Smart Traffic System:\n1. The system shall allow traffic police to monitor roads with high traffic levels.\n2. The system shall detect helmet and seat belt violations using image processing.\n3. The system shall submit details of driver violations to the traffic police when the driver violates the law more than two times.\n4. The system shall operate street lights based on population density at night to save electricity.\n5. The system shall allow traffic police to cancel the license of drivers who violate the law.\n6. The system shall regulate automated traffic lights to control traffic flow and avoid congestion.\n",
        "output": "@startuml\nleft to right direction\n\nactor TrafficPolice\n\nrectangle Smart_Traffic_System {\n    usecase \"Monitor Roads\" as UC1\n    usecase \"Detect Helmet/Seat Belt\" as UC2\n    usecase \"Submit Driver Violations\" as UC3\n    usecase \"Operate Street Lights\" as UC4\n    usecase \"Cancel License\" as UC5\n    usecase \"Regulate Traffic Lights\" as UC6\n}\n\nUC2 --> UC3 : <<extend>>\n\nTrafficPolice --> UC1\nTrafficPolice --> UC2\nTrafficPolice --> UC3\nTrafficPolice --> UC5\nUC3 --> UC5 :<<include>>\n\nUC1 --> UC4 : <<include>>\nUC1 --> UC6 : <<include>>\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Job Portal System:\n1. The system shall allow job seekers to view available job listings.\n2. The system shall provide job availability predictions to job seekers.\n3. The system shall allow job seekers to search for jobs using filters like location, sector, and eligibility.\n4. The system shall allow job seekers and companies to register profiles.\n5. The system shall allow companies to shortlist candidates for job positions.\n6. The system shall allow companies to post job listings.\n7. The system shall allow job seekers to apply for jobs.\n",
        "output": "@startuml\nleft to right direction\n\nactor JobSeeker\nactor Company\n\nrectangle Job_Portal_System {\n    usecase \"See Available Job Listings\" as UC1\n    usecase \"See Job Availability Predictions\" as UC2\n    usecase \"Search Jobs by Filters\" as UC3\n    usecase \"Register Profile\" as UC4\n    usecase \"Shortlist Candidates\" as UC5\n    usecase \"Post Job Listings\" as UC6\n    usecase \"Apply for Job\" as UC7\n}\n\nJobSeeker --> UC1\nJobSeeker --> UC2\nJobSeeker --> UC3\nJobSeeker --> UC4\nJobSeeker --> UC7\n\nCompany --> UC4\nCompany --> UC5\nCompany --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Aarogya Setu App:\n1. The system shall help users identify COVID-19 hotspots in their area.\n2. The system shall perform contact tracing to identify possible COVID-19 exposures.\n3. The system shall notify users about their proximity to nearby infections or hotspots.\n4. The system shall allow users to self-identify their risk based on symptoms and exposure.\n5. The system shall monitor users' health assessments based on their self-reported data.\n6. The system shall help users identify COVID-19 symptoms.\n7. The system shall send users alerts about the best safety precautions.\n8. The system shall provide users with a list of quarantine measures for those at high risk.\n9. The system shall assist users who have a travel history with self-quarantine measures.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Aarogya_Setu_App {\n    usecase \"Identify Hotspots\" as UC1\n    usecase \"Contact Tracing\" as UC2\n    usecase \"Check Proximity to Infection\" as UC3\n    usecase \"Self-Identify Risk\" as UC4\n    usecase \"Monitor Health Assessment\" as UC5\n    usecase \"Identify Symptoms\" as UC6\n    usecase \"Receive Safety Precautions Alerts\" as UC7\n    usecase \"Access Quarantine Measures List\" as UC8\n    usecase \"Get Self-Quarantine Help\" as UC9\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Wedding Planner System:\n1. The system shall allow couples to create wedding budgets.\n2. The system shall allow couples to select venues for their wedding.\n3. The system shall allow couples to hire vendors for services like catering, photography, and entertainment.\n4. The system shall allow couples to manage guest lists.\n5. The system shall allow couples to send invitations to their guests.\n6. The system shall allow couples to track RSVPs from guests.\n7. The system shall allow couples to create wedding timelines for event planning.\n8. The system shall allow couples to manage seating arrangements for the wedding event.\n9. The system shall allow couples to coordinate event logistics.\n10. The system shall allow wedding planners to oversee the planning process.\n11. The system shall allow wedding planners to communicate with vendors.\n12. The system shall allow wedding planners to ensure the smooth execution of the wedding events.\n",
        "output": "@startuml\nleft to right direction\n\nactor Couple\nactor WeddingPlanner\n\nrectangle Wedding_Planner_System {\n    usecase \"Create Wedding Budget\" as UC1\n    usecase \"Select Venues\" as UC2\n    usecase \"Hire Vendors\" as UC3\n    usecase \"Manage Guest Lists\" as UC4\n    usecase \"Send Invitations\" as UC5\n    usecase \"Track RSVPs\" as UC6\n    usecase \"Create Wedding Timelines\" as UC7\n    usecase \"Manage Seating Arrangements\" as UC8\n    usecase \"Coordinate Event Logistics\" as UC9\n    usecase \"Oversee Planning Process\" as UC10\n    usecase \"Communicate with Vendors\" as UC11\n    usecase \"Ensure Smooth Execution\" as UC12\n}\n\nCouple --> UC1\nCouple --> UC2\nCouple --> UC3\nCouple --> UC4\nCouple --> UC5\nCouple --> UC6\nCouple --> UC7\nCouple --> UC8\nCouple --> UC9\n\nWeddingPlanner --> UC10\nWeddingPlanner --> UC11\nWeddingPlanner --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Arcade Management System:\n1. The system shall allow arcade owners to add new games.\n2. The system shall allow arcade owners to set game prices.\n3. The system shall allow arcade owners to track game usage.\n4. The system shall allow customers to purchase tickets to play games.\n5. The system shall allow customers to play games using purchased tickets.\n6. The system shall allow customers to redeem tickets for prizes.\n7. The system shall allow arcade owners to manage customer accounts.\n8. The system shall track ticket balances for customers.\n9. The system shall generate reports on game popularity and arcade performance.\n10. The system shall allow arcade owners to oversee arcade operations.\n11. The system shall allow arcade owners to allocate resources effectively.\n12. The system shall allow arcade owners to ensure customer satisfaction.\n",
        "output": "@startuml\nleft to right direction\n\nactor ArcadeOwner\nactor Customer\n\nrectangle Arcade_Management_System {\n    usecase \"Add New Games\" as UC1\n    usecase \"Set Game Prices\" as UC2\n    usecase \"Track Game Usage\" as UC3\n    usecase \"Purchase Tickets\" as UC4\n    usecase \"Play Games\" as UC5\n    usecase \"Redeem Tickets\" as UC6\n    usecase \"Manage Customer Accounts\" as UC7\n    usecase \"Track Ticket Balances\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Oversee Arcade Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Customer Satisfaction\" as UC12\n}\n\nArcadeOwner --> UC1\nArcadeOwner --> UC2\nArcadeOwner --> UC3\nArcadeOwner --> UC7\nArcadeOwner --> UC8\nArcadeOwner --> UC9\nArcadeOwner --> UC10\nArcadeOwner --> UC11\nArcadeOwner --> UC12\n\nCustomer --> UC4\nCustomer --> UC5\nCustomer --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Blind Navigation Mobile App:\n1. The system shall provide audio directions to blind users based on GPS data.\n2. The system shall allow blind users to search for nearby places of interest.\n3. The system shall allow blind users to plan routes for navigation.\n4. The system shall provide real-time updates on the user’s location during navigation.\n5. The system shall allow users to set their preferences for navigation and audio feedback.\n6. The system shall allow users to save their favorite locations for future reference.\n7. The system shall provide access to emergency services in case of need.\n",
        "output": "@startuml\nleft to right direction\n\nactor BlindUser\n\nrectangle Blind_Navigation_App {\n    usecase \"Get Audio Directions\" as UC1\n    usecase \"Search for Nearby Places\" as UC2\n    usecase \"Plan Routes\" as UC3\n    usecase \"Receive Real-Time Updates\" as UC4\n    usecase \"Set Preferences\" as UC5\n    usecase \"Save Favorite Locations\" as UC6\n    usecase \"Access Emergency Services\" as UC7\n}\n\nBlindUser --> UC1\nBlindUser --> UC2\nBlindUser --> UC3\nBlindUser --> UC4\nBlindUser --> UC5\nBlindUser --> UC6\nBlindUser --> UC7\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Sign Language Translator Mobile App:\n1. The system shall translate sign language gestures into text and speech.\n2. The system shall allow deaf users to communicate with hearing users by converting signed words and phrases.\n3. The system shall convert sign language gestures into text for display.\n4. The system shall convert sign language gestures into spoken words.\n5. The system shall allow users to customize sign language dictionaries.\n6. The system shall allow users to save common phrases for quick access.\n7. The system shall allow users to adjust translation settings for personalized usage.\n",
        "output": "@startuml\nleft to right direction\n\nactor DeafUser\nactor HearingUser\n\nrectangle Sign_Language_Translator_App {\n    usecase \"Translate Sign Language Gestures\" as UC1\n    usecase \"Communicate with Hearing Users\" as UC2\n    usecase \"Convert Gestures to Text\" as UC3\n    usecase \"Convert Gestures to Speech\" as UC4\n    usecase \"Customize Dictionaries\" as UC5\n    usecase \"Save Common Phrases\" as UC6\n    usecase \"Adjust Translation Settings\" as UC7\n}\n\nDeafUser --> UC1\nDeafUser --> UC2\nDeafUser --> UC3\nDeafUser --> UC4\nDeafUser --> UC5\nDeafUser --> UC6\nDeafUser --> UC7\n\nHearingUser --> UC2\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Glacier Melting Prediction System:\n1. The system shall allow scientists to input data related to glacier melting.\n2. The system shall allow scientists to run simulations for predicting glacier melting.\n3. The system shall allow scientists to visualize the results of glacier melting predictions.\n4. The system shall generate reports on glacier melting and its potential impact.\n5. The system shall allow scientists to share data with other researchers.\n6. The system shall identify trends in glacier melting patterns over time.\n",
        "output": "@startuml\nleft to right direction\n\nactor Scientist\n\nrectangle Glacier_Melting_Prediction_System {\n    usecase \"Input Data\" as UC1\n    usecase \"Run Simulations\" as UC2\n    usecase \"Visualize Results\" as UC3\n    usecase \"Generate Reports\" as UC4\n    usecase \"Share Data\" as UC5\n    usecase \"Identify Trends\" as UC6\n}\n\nScientist --> UC1\nScientist --> UC2\nScientist --> UC3\nScientist --> UC4\nScientist --> UC5\nScientist --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Air Quality Monitoring System:\n1. The system shall allow environmental agencies to monitor real-time air quality data.\n2. The system shall allow environmental agencies to set pollution thresholds for various air pollutants.\n3. The system shall issue alerts when air pollution levels exceed set thresholds.\n4. The system shall generate air quality reports based on collected data.\n5. The system shall map pollution sources in urban areas.\n6. The system shall identify trends in air pollution patterns over time.\n",
        "output": "@startuml\nleft to right direction\n\nactor EnvironmentalAgency\n\nrectangle Air_Quality_Monitoring_System {\n    usecase \"Monitor Air Quality Data\" as UC1\n    usecase \"Set Pollution Thresholds\" as UC2\n    usecase \"Issue Pollution Alerts\" as UC3\n    usecase \"Generate Reports\" as UC4\n    usecase \"Map Pollution Sources\" as UC5\n    usecase \"Identify Trends\" as UC6\n}\n\nEnvironmentalAgency --> UC1\nEnvironmentalAgency --> UC2\nEnvironmentalAgency --> UC3\nEnvironmentalAgency --> UC4\nEnvironmentalAgency --> UC5\nEnvironmentalAgency --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Diagramming Tool:\n1. The system shall allow software engineers to create UML diagrams.\n2. The system shall allow software engineers to create flowcharts and other visual representations.\n3. The system shall allow software engineers to customize visual elements such as shapes and connectors.\n4. The system shall allow software engineers to collaborate on diagrams with team members.\n5. The system shall allow software engineers to share diagrams with other users.\n6. The system shall allow software engineers to export diagrams in various formats.\n7. The system shall provide version control for diagrams.\n8. The system shall provide diagram templates for easy use.\n9. The system shall integrate with other software development tools.\n",
        "output": "@startuml\nleft to right direction\n\nactor SoftwareEngineer\nactor TeamMember\n\nrectangle Diagramming_Tool {\n    usecase \"Create UML Diagrams\" as UC1\n    usecase \"Create Flowcharts\" as UC2\n    usecase \"Customize Visual Elements\" as UC3\n    usecase \"Collaborate on Diagrams\" as UC4\n    usecase \"Share Diagrams\" as UC5\n    usecase \"Export Diagrams\" as UC6\n    usecase \"Version Control\" as UC7\n    usecase \"Diagram Templates\" as UC8\n    usecase \"Integrate with Other Tools\" as UC9\n}\n\nSoftwareEngineer --> UC1\nSoftwareEngineer --> UC2\nSoftwareEngineer --> UC3\nSoftwareEngineer --> UC4\nSoftwareEngineer --> UC5\nSoftwareEngineer --> UC6\nSoftwareEngineer --> UC7\nSoftwareEngineer --> UC8\nSoftwareEngineer --> UC9\n\nTeamMember --> UC4\nTeamMember --> UC5\nTeamMember --> UC6\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Fitness Application:\n1. The system shall allow users to log exercises performed.\n2. The system shall track calories burned by users during workouts.\n3. The system shall allow users to create personalized workout plans.\n4. The system shall allow users to set fitness goals.\n5. The system shall provide users with workout summaries.\n6. The system shall send users reminders for scheduled workouts.\n7. The system shall allow users to track their nutrition intake.\n8. The system shall allow users to log their meals.\n9. The system shall calculate users' daily calorie intake.\n10. The system shall allow users to monitor their overall nutrition intake.\n11. The system shall provide users with meal summaries.\n12. The system shall send users alerts for meal planning.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Fitness_Application {\n    usecase \"Log Exercises\" as UC1\n    usecase \"Track Calories Burned\" as UC2\n    usecase \"Create Workout Plans\" as UC3\n    usecase \"Set Fitness Goals\" as UC4\n    usecase \"View Workout Summaries\" as UC5\n    usecase \"Receive Workout Reminders\" as UC6\n    usecase \"Track Nutrition\" as UC7\n    usecase \"Log Meals\" as UC8\n    usecase \"Calculate Calorie Intake\" as UC9\n    usecase \"Monitor Nutrition Intake\" as UC10\n    usecase \"View Meal Summaries\" as UC11\n    usecase \"Receive Meal Planning Alerts\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Hostel Finding Application:\n1. The system shall allow students to search for hostels based on location, price, and amenities.\n2. The system shall allow students to book hostel accommodations online.\n3. The system shall provide filters for refining search results.\n4. The system shall allow students to view hostel reviews.\n5. The system shall allow students to compare hostel options.\n6. The system shall allow students to manage their bookings.\n7. The system shall send students booking confirmations.\n8. The system shall provide directions to hostels after booking.\n",
        "output": "@startuml\nleft to right direction\n\nactor Student\n\nrectangle Hostel_Finding_Application {\n    usecase \"Search Hostels\" as UC1\n    usecase \"Book Hostel Accommodations\" as UC2\n    usecase \"Filter Search Results\" as UC3\n    usecase \"View Hostel Reviews\" as UC4\n    usecase \"Compare Hostel Options\" as UC5\n    usecase \"Manage Bookings\" as UC6\n    usecase \"Receive Booking Confirmations\" as UC7\n    usecase \"Access Directions to Hostels\" as UC8\n}\n\nStudent --> UC1\nStudent --> UC2\nStudent --> UC3\nStudent --> UC4\nStudent --> UC5\nStudent --> UC6\nStudent --> UC7\nStudent --> UC8\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Messaging Application:\n1. The system shall allow users to send text messages to their contacts.\n2. The system shall allow users to send photos to their contacts.\n3. The system shall allow users to send videos to their contacts.\n4. The system shall allow users to send voice messages to their contacts.\n5. The system shall support group chats for multiple participants.\n6. The system shall provide message encryption for secure communication.\n7. The system shall allow users to share multimedia content, including photos, videos, and voice messages.\n8. The system shall allow users to create chat groups.\n9. The system shall allow users to add or remove participants from chat groups.\n10. The system shall allow users to customize chat settings, including notifications and privacy options.\n11. The system shall send notifications for new messages and updates.\n12. The system shall allow users to archive messages for future reference.\n13. The system shall allow users to block contacts from sending messages.\n14. The system shall allow users to manage message storage on their devices.\n15. The system shall allow users to view their message history.\n16. The system shall send alerts for incoming messages.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Messaging_Application {\n    usecase \"Send Text Messages\" as UC1\n    usecase \"Send Photos\" as UC2\n    usecase \"Send Videos\" as UC3\n    usecase \"Send Voice Messages\" as UC4\n    usecase \"Support Group Chats\" as UC5\n    usecase \"Encrypt Messages\" as UC6\n    usecase \"Share Multimedia\" as UC7\n    usecase \"Create Chat Groups\" as UC8\n    usecase \"Add/Remove Participants\" as UC9\n    usecase \"Customize Chat Settings\" as UC10\n    usecase \"Send Notifications\" as UC11\n    usecase \"Archive Messages\" as UC12\n    usecase \"Block Contacts\" as UC13\n    usecase \"Manage Message Storage\" as UC14\n    usecase \"View Message Histories\" as UC15\n    usecase \"Receive Message Alerts\" as UC16\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\nUser --> UC16\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Social Media Application:\n1. The system shall allow users to share photos with their friends.\n2. The system shall allow users to share videos with their friends.\n3. The system shall allow users to share messages with their friends.\n4. The system shall support multimedia sharing, including photos, videos, and messages.\n5. The system shall support chat messaging between users.\n6. The system shall support story posting for users to share temporary content.\n7. The system shall allow users to create posts for sharing on their profiles.\n8. The system shall allow users to view stories posted by their friends.\n9. The system shall allow users to send direct messages to their contacts.\n10. The system shall allow users to add friends to their social network.\n11. The system shall allow users to follow other users' profiles.\n12. The system shall allow users to comment on posts.\n13. The system shall allow users to manage their privacy settings.\n14. The system shall provide an activity feed for users to view new content from their friends.\n15. The system shall send notifications to users for new posts, messages, and updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Social_Media_Application {\n    usecase \"Share Photos\" as UC1\n    usecase \"Share Videos\" as UC2\n    usecase \"Share Messages\" as UC3\n    usecase \"Support Multimedia Sharing\" as UC4\n    usecase \"Support Chat Messaging\" as UC5\n    usecase \"Support Story Posting\" as UC6\n    usecase \"Create Posts\" as UC7\n    usecase \"View Stories\" as UC8\n    usecase \"Send Direct Messages\" as UC9\n    usecase \"Add Friends\" as UC10\n    usecase \"Follow Users\" as UC11\n    usecase \"Comment on Posts\" as UC12\n    usecase \"Manage Privacy Settings\" as UC13\n    usecase \"View Activity Feeds\" as UC14\n    usecase \"Receive Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Logo Design Application:\n1. The system shall allow users to create custom logos for businesses, websites, and products.\n2. The system shall allow users to select colors for their logo designs.\n3. The system shall allow users to add text and graphics to their logos.\n4. The system shall allow users to customize logo templates.\n5. The system shall allow users to save their logo designs for future use.\n6. The system shall allow users to download their logos in various formats.\n7. The system shall allow users to share their logos on social media platforms.\n8. The system shall allow users to collaborate on logo design projects with other users.\n9. The system shall provide access to design tools for logo creation.\n10. The system shall allow users to manage their logo design projects.\n11. The system shall allow users to view their design history.\n12. The system shall provide users with design suggestions based on their project requirements.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Logo_Design_Application {\n    usecase \"Create Custom Logos\" as UC1\n    usecase \"Select Colors\" as UC2\n    usecase \"Add Text and Graphics\" as UC3\n    usecase \"Customize Logo Templates\" as UC4\n    usecase \"Save Logo Designs\" as UC5\n    usecase \"Download Logos\" as UC6\n    usecase \"Share Logos\" as UC7\n    usecase \"Collaborate on Projects\" as UC8\n    usecase \"Access Design Tools\" as UC9\n    usecase \"Manage Logo Projects\" as UC10\n    usecase \"View Design Histories\" as UC11\n    usecase \"Receive Design Suggestions\" as UC12\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Daraz E-Commerce Platform:\n1. The system shall allow users to browse products available for sale.\n2. The system shall allow users to add items to their cart for purchase.\n3. The system shall allow users to make purchases online.\n4. The system shall support product categories for easy browsing.\n5. The system shall provide search filters for narrowing down product searches.\n6. The system shall offer product recommendations to users based on their preferences.\n7. The system shall allow users to create accounts for managing their shopping experience.\n8. The system shall allow users to view their order histories.\n9. The system shall allow users to track the shipment of their orders.\n10. The system shall process payments for purchases made by users.\n11. The system shall manage inventory for products listed on the platform.\n12. The system shall generate sales reports for tracking sales performance.\n13. The system shall allow administrators to add new products to the platform.\n14. The system shall allow administrators to update existing product listings.\n15. The system shall allow administrators to monitor user activity on the platform.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\nactor Administrator\n\nrectangle Daraz_E-Commerce_Platform {\n    usecase \"Browse Products\" as UC1\n    usecase \"Add Items to Cart\" as UC2\n    usecase \"Make Purchases\" as UC3\n    usecase \"Support Product Categories\" as UC4\n    usecase \"Support Search Filters\" as UC5\n    usecase \"Provide Product Recommendations\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Order Histories\" as UC8\n    usecase \"Track Order Shipments\" as UC9\n    usecase \"Process Payments\" as UC10\n    usecase \"Manage Inventory\" as UC11\n    usecase \"Generate Sales Reports\" as UC12\n    usecase \"Add New Products\" as UC13\n    usecase \"Update Product Listings\" as UC14\n    usecase \"Monitor User Activity\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\n\nAdministrator --> UC13\nAdministrator --> UC14\nAdministrator --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Bidding Application:\n1. The system shall allow users to participate in online auctions.\n2. The system shall allow users to place bids on auction items.\n3. The system shall allow users to win auctions by placing the highest bid.\n4. The system shall support different auction categories for easy navigation.\n5. The system shall provide notifications for new bids and auction updates.\n6. The system shall include countdown timers for auctions.\n7. The system shall allow users to create accounts for managing their bidding activities.\n8. The system shall allow users to view available auction listings.\n9. The system shall allow users to track their bid histories.\n10. The system shall allow users to manage their auction wins.\n11. The system shall send auction alerts to users.\n12. The system shall allow users to manage their auction activities.\n13. The system shall allow users to view auction results after bidding ends.\n14. The system shall provide users with payment instructions after winning an auction.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Bidding_Application {\n    usecase \"Participate in Online Auctions\" as UC1\n    usecase \"Place Bids on Items\" as UC2\n    usecase \"Win Auctions\" as UC3\n    usecase \"Support Auction Categories\" as UC4\n    usecase \"Provide Bid Notifications\" as UC5\n    usecase \"Include Auction Countdowns\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Auction Listings\" as UC8\n    usecase \"Track Bid Histories\" as UC9\n    usecase \"Manage Auction Wins\" as UC10\n    usecase \"Receive Auction Alerts\" as UC11\n    usecase \"Manage Auction Activities\" as UC12\n    usecase \"View Auction Results\" as UC13\n    usecase \"Receive Payment Instructions\" as UC14\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for House Helper/Maid Finding Application:\n1. The system shall allow users to search for domestic helpers based on services, availability, and ratings.\n2. The system shall allow users to hire domestic helpers for household chores.\n3. The system shall allow users to view helper profiles, including services and ratings.\n4. The system shall allow users to request services from domestic helpers.\n5. The system shall allow users to schedule appointments with helpers.\n6. The system shall allow users to manage their bookings for helper services.\n7. The system shall track the service history of domestic helpers.\n8. The system shall allow users to provide feedback and ratings for domestic helpers.\n9. The system shall allow users to manage their preferences for selecting helpers.\n10. The system shall allow users to view service summaries after appointments.\n11. The system shall send users reminders for scheduled services.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle House_Helper_Finding_Application {\n    usecase \"Search for Helpers\" as UC1\n    usecase \"Hire Domestic Helpers\" as UC2\n    usecase \"View Helper Profiles\" as UC3\n    usecase \"Request Services\" as UC4\n    usecase \"Schedule Appointments\" as UC5\n    usecase \"Manage Bookings\" as UC6\n    usecase \"Track Service Histories\" as UC7\n    usecase \"Provide Feedback on Helpers\" as UC8\n    usecase \"Manage Helper Preferences\" as UC9\n    usecase \"View Service Summaries\" as UC10\n    usecase \"Receive Service Reminders\" as UC11\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Pharmaceutical Supply Chain Management System:\n1. The system shall allow pharmaceutical companies to track inventory of pharmaceutical products.\n2. The system shall allow pharmaceutical companies to manage orders for products.\n3. The system shall allow pharmaceutical companies to monitor shipments of pharmaceutical products.\n4. The system shall allow pharmaceutical companies to input production data for product management.\n5. The system shall allow pharmaceutical companies to generate purchase orders.\n6. The system shall allow pharmaceutical companies to track product deliveries.\n7. The system shall allow pharmaceutical companies to manage supplier relationships.\n8. The system shall allow pharmaceutical companies to track sales data.\n9. The system shall generate reports on product performance for pharmaceutical companies.\n10. The system shall allow administrators to oversee supply chain operations.\n11. The system shall allow administrators to allocate resources for supply chain management.\n12. The system shall allow administrators to ensure product quality across the supply chain.\n",
        "output": "@startuml\nleft to right direction\n\nactor PharmaceuticalCompany\nactor Administrator\n\nrectangle Pharmaceutical_Supply_Chain_Management_System {\n    usecase \"Track Inventory\" as UC1\n    usecase \"Manage Orders\" as UC2\n    usecase \"Monitor Shipments\" as UC3\n    usecase \"Input Production Data\" as UC4\n    usecase \"Generate Purchase Orders\" as UC5\n    usecase \"Track Product Deliveries\" as UC6\n    usecase \"Manage Suppliers\" as UC7\n    usecase \"Track Sales Data\" as UC8\n    usecase \"Generate Reports\" as UC9\n    usecase \"Oversee Operations\" as UC10\n    usecase \"Allocate Resources\" as UC11\n    usecase \"Ensure Product Quality\" as UC12\n}\n\nPharmaceuticalCompany --> UC1\nPharmaceuticalCompany --> UC2\nPharmaceuticalCompany --> UC3\nPharmaceuticalCompany --> UC4\nPharmaceuticalCompany --> UC5\nPharmaceuticalCompany --> UC6\nPharmaceuticalCompany --> UC7\nPharmaceuticalCompany --> UC8\nPharmaceuticalCompany --> UC9\n\nAdministrator --> UC10\nAdministrator --> UC11\nAdministrator --> UC12\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Learn How to Code Application:\n1. The system shall allow users to learn programming languages through interactive tutorials.\n2. The system shall allow users to practice coding exercises to improve their skills.\n3. The system shall allow users to build software projects using project templates.\n4. The system shall provide coding tutorials for various programming languages.\n5. The system shall support code editors for users to write and test code.\n6. The system shall include project templates to assist users in building software projects.\n7. The system shall allow users to create accounts for managing their learning progress.\n8. The system shall allow users to view coding lessons provided by the platform.\n9. The system shall allow users to complete coding challenges to test their knowledge.\n10. The system shall track users' coding progress over time.\n11. The system shall allow users to manage code repositories for their projects.\n12. The system shall allow users to share code snippets with other users.\n13. The system shall allow users to manage their coding preferences.\n14. The system shall allow users to view their project histories.\n15. The system shall provide users with coding tips and suggestions to improve their skills.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Learn_How_to_Code_Application {\n    usecase \"Learn Programming Languages\" as UC1\n    usecase \"Practice Coding Exercises\" as UC2\n    usecase \"Build Software Projects\" as UC3\n    usecase \"Provide Coding Tutorials\" as UC4\n    usecase \"Support Code Editors\" as UC5\n    usecase \"Include Project Templates\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"View Coding Lessons\" as UC8\n    usecase \"Complete Coding Challenges\" as UC9\n    usecase \"Track Coding Progress\" as UC10\n    usecase \"Manage Code Repositories\" as UC11\n    usecase \"Share Code Snippets\" as UC12\n    usecase \"Manage Coding Preferences\" as UC13\n    usecase \"View Project Histories\" as UC14\n    usecase \"Receive Coding Tips\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Data Visualization Application:\n1. The system shall allow users to create visual representations of data.\n2. The system shall allow users to analyze trends based on the visualized data.\n3. The system shall allow users to present insights derived from data visualizations.\n4. The system shall provide data import tools for bringing in external data sets.\n5. The system shall support chart templates to assist users in visualizing data.\n6. The system shall include customization options for visual elements in charts.\n7. The system shall allow users to import data sets from various sources.\n8. The system shall allow users to create charts based on imported data.\n9. The system shall allow users to customize chart styles according to their preferences.\n10. The system shall allow users to save their visualizations for future reference.\n11. The system shall allow users to share data insights with others.\n12. The system shall allow users to export charts in various formats.\n13. The system shall allow users to manage their data sources.\n14. The system shall allow users to view the history of their visualizations.\n15. The system shall provide users with data analysis suggestions.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Data_Visualization_Application {\n    usecase \"Create Visual Representations\" as UC1\n    usecase \"Analyze Trends\" as UC2\n    usecase \"Present Insights\" as UC3\n    usecase \"Provide Data Import Tools\" as UC4\n    usecase \"Support Chart Templates\" as UC5\n    usecase \"Include Customization Options\" as UC6\n    usecase \"Import Data Sets\" as UC7\n    usecase \"Create Charts\" as UC8\n    usecase \"Customize Chart Styles\" as UC9\n    usecase \"Save Visualizations\" as UC10\n    usecase \"Share Data Insights\" as UC11\n    usecase \"Export Charts\" as UC12\n    usecase \"Manage Data Sources\" as UC13\n    usecase \"View Visualization Histories\" as UC14\n    usecase \"Receive Data Analysis Suggestions\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for 'Find the One' Matchmaking Application:\n1. The system shall allow users to find compatible partners using matching algorithms.\n2. The system shall allow users to build relationships and connect with like-minded individuals.\n3. The system shall provide user profiles for creating and managing user data.\n4. The system shall support matching algorithms to suggest potential partners.\n5. The system shall include chat messaging features for communication between users.\n6. The system shall allow users to create profiles to participate in matchmaking.\n7. The system shall allow users to view partner suggestions based on compatibility.\n8. The system shall allow users to send messages to potential matches.\n9. The system shall track relationship statuses of users.\n10. The system shall allow users to manage their connections with others.\n11. The system shall provide relationship advice to users.\n12. The system shall allow users to manage their privacy settings for safe interactions.\n13. The system shall allow users to view their relationship histories.\n14. The system shall notify users about new matches.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle Find_the_One_Matchmaking_Application {\n    usecase \"Find Compatible Partners\" as UC1\n    usecase \"Build Relationships\" as UC2\n    usecase \"Connect with Like-Minded Individuals\" as UC3\n    usecase \"Provide User Profiles\" as UC4\n    usecase \"Support Matching Algorithms\" as UC5\n    usecase \"Include Chat Messaging Features\" as UC6\n    usecase \"Create Profiles\" as UC7\n    usecase \"View Partner Suggestions\" as UC8\n    usecase \"Send Messages\" as UC9\n    usecase \"Track Relationship Statuses\" as UC10\n    usecase \"Manage Connections\" as UC11\n    usecase \"Receive Relationship Advice\" as UC12\n    usecase \"Manage Privacy Settings\" as UC13\n    usecase \"View Relationship Histories\" as UC14\n    usecase \"Receive New Match Notifications\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for 'FoodPanda' Food Delivery Application:\n1. The system shall allow users to order food from restaurants for delivery.\n2. The system shall allow users to track the status of their food deliveries.\n3. The system shall allow users to provide feedback on the quality of the food they receive.\n4. The system shall support restaurant listings for users to browse available restaurants.\n5. The system shall allow users to browse menus of restaurants.\n6. The system shall allow users to customize their orders based on preferences.\n7. The system shall allow users to create accounts for managing orders and settings.\n8. The system shall allow users to place orders for food delivery.\n9. The system shall allow users to track the status of their orders in real-time.\n10. The system shall allow users to manage their delivery addresses for convenience.\n11. The system shall allow users to rate food items after receiving them.\n12. The system shall allow users to manage payment methods for seamless transactions.\n13. The system shall allow users to view their order histories.\n14. The system shall send notifications to users for order updates.\n",
        "output": "@startuml\nleft to right direction\n\nactor User\n\nrectangle FoodPanda_Food_Delivery_Application {\n    usecase \"Order Food from Restaurants\" as UC1\n    usecase \"Track Deliveries\" as UC2\n    usecase \"Provide Feedback on Food Quality\" as UC3\n    usecase \"Support Restaurant Listings\" as UC4\n    usecase \"Support Menu Browsing\" as UC5\n    usecase \"Support Order Customization\" as UC6\n    usecase \"Create Accounts\" as UC7\n    usecase \"Browse Menus\" as UC8\n    usecase \"Place Orders for Delivery\" as UC9\n    usecase \"Track Order Statuses\" as UC10\n    usecase \"Manage Delivery Addresses\" as UC11\n    usecase \"Rate Food Items\" as UC12\n    usecase \"Manage Payment Methods\" as UC13\n    usecase \"View Order Histories\" as UC14\n    usecase \"Receive Order Updates\" as UC15\n}\n\nUser --> UC1\nUser --> UC2\nUser --> UC3\nUser --> UC4\nUser --> UC5\nUser --> UC6\nUser --> UC7\nUser --> UC8\nUser --> UC9\nUser --> UC10\nUser --> UC11\nUser --> UC12\nUser --> UC13\nUser --> UC14\nUser --> UC15\n@enduml"
    },
    {
        "input": "Design me a use case diagram for this system. Functional Requirements for Web Vulnerability Scanner:\n1. The system shall allow hackers to identify security vulnerabilities in web applications.\n2. The system shall detect common vulnerabilities such as SQL injection and cross-site scripting.\n3. The system shall allow hackers to run scans on target URLs to detect vulnerabilities.\n4. The system shall allow hackers to analyze scan results for potential security flaws.\n5. The system shall generate reports detailing the vulnerabilities found in the scans.\n6. The system shall allow hackers to exploit detected security flaws.\n7. The system shall provide recommendations for remediating identified vulnerabilities.\n8. The system shall allow hackers to manage scan settings for customized scans.\n9. The system shall allow hackers to view the history of previous scans.\n10. The system shall send alerts to hackers when critical vulnerabilities are found.\n",
        "output": "@startuml\nleft to right direction\n\nactor Hacker\n\nrectangle Web_Vulnerability_Scanner {\n    usecase \"Identify Security Vulnerabilities\" as UC1\n    usecase \"Detect Common Vulnerabilities\" as UC2\n    usecase \"Run Scans\" as UC3\n    usecase \"Analyze Scan Results\" as UC4\n    usecase \"Generate Reports\" as UC5\n    usecase \"Exploit Security Flaws\" as UC6\n    usecase \"Get Recommendations\" as UC7\n    usecase \"Manage Scan Settings\" as UC8\n    usecase \"View Scan Histories\" as UC9\n    usecase \"Receive Alerts\" as UC10\n}\n\nHacker --> UC1\nHacker --> UC2\nHacker --> UC3\nHacker --> UC4\nHacker --> UC5\nHacker --> UC6\nHacker --> UC7\nHacker --> UC8\nHacker --> UC9\nHacker --> UC10\n@enduml"
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
            
        
            

    

     
    
    
    
    
    
    
    
    
    
      
      
      
      

    
    

        
]